/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

 /*****************************************************************************
 * Filename:
 * ---------
 *   image_sensor_SIM120C.h
 *
 * Project:
 * --------
 *   Maui_sw
 *
 * Description:
 * ------------
 *   Image sensor driver function
 *
 * Author:
 * -------
 * -------
 *
 *=============================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *=============================================================
 ****************************************************************************/

#ifndef _IMAGE_SENSOR_SIM120C_H
#define _IMAGE_SENSOR_SIM120C_H

#include "sensor_comm_def.h"

#define SIM120C_SLAVE_ADDR                      (0x6A)


/*50Hz,60Hz*/
#define SIM120C_NUM_50HZ                        (50)
#define SIM120C_NUM_60HZ                        (60)

/* FRAME RATE UNIT */
#define SIM120C_FRAME_RATE_UNIT                 (10)

 
MM_ERROR_CODE_ENUM SIM120CSensorFunc(P_IMAGE_SENSOR_FUNCTION_STRUCT *pfSensorFunc);

MM_ERROR_CODE_ENUM SIM120CWebcamFeatureCtrl(kal_uint32 FeatureId,
                                                void *pFeatureParaIn, void *pFeatureParaOut,
                                                kal_uint32 FeatureParaOutLen, kal_uint32 *pRealFeatureParaOutLen);

/* SENSOR FULL/PV OUTPUT MODE */
/* resolution  sub-sample  binning
  QCIF        0                1
  CIF          2                3
  QVGA       4                5
  VGA         6                7
  SXVGA     8
  SXGA       9 */
#define	SIM120C_DEBUG


/* SENSOR FULL/PV SIZE */
#define SIM120C_IMAGE_SENSOR_FULL_WIDTH_DRV   1280
#define SIM120C_IMAGE_SENSOR_FULL_HEIGHT_DRV  1024

#define SIM120C_FULL_OUTPUT_MODE              9 /* no need change!!! */
#define SIM120C_PV_OUTPUT_MODE                6

#if SIM120C_PV_OUTPUT_MODE <= 1
#define SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV     176
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV    144
#elif SIM120C_PV_OUTPUT_MODE <= 3
#define SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV     352
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV    288
#elif SIM120C_PV_OUTPUT_MODE <= 5
#define SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV     320
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV    240
#elif SIM120C_PV_OUTPUT_MODE <= 7
#define SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV     640
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV    480
#elif SIM120C_PV_OUTPUT_MODE <= 8
#define SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV     1280
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV    960
#else
#define SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV     1280
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV    1024
#endif

/* SENSOR START/END POSITION */
#define SIM120C_FULL_X_START                  0
#define SIM120C_FULL_Y_START                  4
#define SIM120C_IMAGE_SENSOR_FULL_WIDTH       (SIM120C_IMAGE_SENSOR_FULL_WIDTH_DRV - SIM120C_FULL_X_START * 2)
#define SIM120C_IMAGE_SENSOR_FULL_HEIGHT      (SIM120C_IMAGE_SENSOR_FULL_HEIGHT_DRV - SIM120C_FULL_Y_START * 2)
#define SIM120C_PV_X_START                    (SIM120C_FULL_X_START / 2)
#define SIM120C_PV_Y_START                    (SIM120C_FULL_Y_START / 2)
#define SIM120C_IMAGE_SENSOR_PV_WIDTH         (SIM120C_IMAGE_SENSOR_PV_WIDTH_DRV - SIM120C_PV_X_START * 2)
#define SIM120C_IMAGE_SENSOR_PV_HEIGHT        (SIM120C_IMAGE_SENSOR_PV_HEIGHT_DRV - SIM120C_PV_Y_START * 2)


/* SENSOR HORIZONTAL/VERTICAL ACTIVE REGION */
#define SIM120C_IMAGE_SENSOR_FULL_HACTIVE     1310
#define SIM120C_IMAGE_SENSOR_FULL_VACTIVE     1038

#if (SIM120C_PV_OUTPUT_MODE == 0 || SIM120C_PV_OUTPUT_MODE == 2)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       368
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       304
#elif (SIM120C_PV_OUTPUT_MODE == 1 || SIM120C_PV_OUTPUT_MODE == 3)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1100
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       304
#elif (SIM120C_PV_OUTPUT_MODE == 4 || SIM120C_PV_OUTPUT_MODE == 6)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       656
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       496
#elif (SIM120C_PV_OUTPUT_MODE == 5 || SIM120C_PV_OUTPUT_MODE == 7)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1310
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       496
#elif SIM120C_PV_OUTPUT_MODE == 8
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1310
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       976
#elif SIM120C_PV_OUTPUT_MODE >= 9
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1310
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       1038
#endif

/* SENSOR HORIZONTAL/VERTICAL BLANKING IN ONE PERIOD */
#define SIM120C_IMAGE_SENSOR_FULL_HBLANKING   (195 + 7 + 2) /* HST + GA_ROWFIL + 2 */
#define SIM120C_IMAGE_SENSOR_FULL_VBLANKING   1
#define SIM120C_IMAGE_SENSOR_PV_HBLANKING     (195 + 7 + 2) /* HST + GB_ROWFIL + 2 */
#define SIM120C_IMAGE_SENSOR_PV_VBLANKING     1



#define SIM120C_FULL_PERIOD_PIXEL_NUMS        (SIM120C_IMAGE_SENSOR_FULL_HACTIVE + SIM120C_IMAGE_SENSOR_FULL_HBLANKING)
#define SIM120C_FULL_PERIOD_LINE_NUMS         (SIM120C_IMAGE_SENSOR_FULL_VACTIVE + SIM120C_IMAGE_SENSOR_FULL_VBLANKING)
#define SIM120C_PV_PERIOD_PIXEL_NUMS          (SIM120C_IMAGE_SENSOR_PV_HACTIVE + SIM120C_IMAGE_SENSOR_PV_HBLANKING)
#define SIM120C_PV_PERIOD_LINE_NUMS           (SIM120C_IMAGE_SENSOR_PV_VACTIVE + SIM120C_IMAGE_SENSOR_PV_VBLANKING)

/* SENSOR HORIZONTAL/VERTICAL ACTIVE REGION */
#if (SIM120C_PV_OUTPUT_MODE == 0 || SIM120C_PV_OUTPUT_MODE == 2)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       368
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       304
#elif (SIM120C_PV_OUTPUT_MODE == 1 || SIM120C_PV_OUTPUT_MODE == 3)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1100
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       304
#elif (SIM120C_PV_OUTPUT_MODE == 4 || SIM120C_PV_OUTPUT_MODE == 6)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       656
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       496
#elif (SIM120C_PV_OUTPUT_MODE == 5 || SIM120C_PV_OUTPUT_MODE == 7)
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1310
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       496
#elif SIM120C_PV_OUTPUT_MODE == 8
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1310
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       976
#elif SIM120C_PV_OUTPUT_MODE >= 9
#define SIM120C_IMAGE_SENSOR_PV_HACTIVE       1310
#define SIM120C_IMAGE_SENSOR_PV_VACTIVE       1038
#endif

#define ISP_DIGITAL_ZOOM_INTERVAL		10


/* FRAME RATE UNIT */
#define SIM120C_FPS(x)                        ((kal_uint32)(10 * (x)))
#define SIM120C_MAX_FPS                       SIM120C_FPS(30)

#endif /* _IMAGE_SENSOR_H */ 
