[APP NAME] = APP_UCMBT
[SCOPE] = PLUTO
[MODULE] = MOD_MMI_COMMON_APP

#start trace
#UcmInterfaceBT.c
TRC_MSG(TRC_MMI_UCM_INIT_BT, "[UCMBT] mmi_ucm_init_bt")
TRC_MSG(TRC_MMI_UCM_INIT_BT_SERVICE_HANDLER, "[UCMBT] In mmi_ucm_init_bt, srv_hd = %d")
TRC_MSG(TRC_MMI_UCM_BT_SET_PARA, "[UCMBT] mmi_ucm_call_launch_set_para, callback:%x,data:%x")

#UcmUiBT.c
TRC_MSG(TRC_MMI_UCM_CALL_END_TIMEOT_HANDLER_REENTRY, "[UCMBT] re-entry in call screen when one call is releses")
TRC_MSG(TRC_MMI_UCM_CALL_END_TIMEOT_HANDLER, "[UCMBT] screen [call_end] timeout, g_num_calls:%d, is_end_all_action:%d, is_need_accept:%d")
TRC_MSG(TRC_MMI_UCM_ENTRY_CALL_END_BT, "[UCMBT] screen [call_end]")
TRC_MSG(TRC_MMI_UCM_RELEASE_IND_BT, "[UCMBT] release_call, g_num_calls=%d, rel_call_state:%d")
TRC_MSG(TRC_MMI_UCM_RELEASE_INVOKE_CALLBACK, "[UCMBT] invoke callback:%x,data:%x")
TRC_MSG(TRC_MMI_UCM_EXIT_CALL_END_BT, "[UCMBT]mmi_ucm_exit_call_end_bt")
TRC_MSG(TRC_MMI_UCM_ENTRY_INCOMING_CALL_BT, "[UCMBT] screen [incoming] g_num_calls:%d, call_info[0].call_state:%d, call_info[1].call_state:%d")
TRC_MSG(TRC_MMI_UCM_ENTRY_OUTGOING_CALL_BT, "[UCMBT] screen [outgoing] g_num_calls=%d, call_info[0].call_state:%d, call_info[1].call_state:%d")
TRC_MSG(TRC_MMI_UCM_QUERY_REMOTE_NAME_BT, "[UCMBT] screen [name] index:%d, pbapc_is_query:%d, pbapc_query_count:%d")
TRC_MSG(TRC_MMI_UCM_ENTRY_INCALL_BT, "[UCMBT] screen [in_call] g_num_calls:%d, hilite_tab:%d")
TRC_MSG(TRC_MMI_UCM_ENTRY_INCALL_BT_NUMBERS, "[UCMBT] screen [in_call] call[%d].state:%d, num:%d,%d,%d")
TRC_MSG(TRC_MMI_UCM_DELETE_ALL_SCREEN_BT, "[UCMBT] screen delete all screen")
TRC_MSG(TRC_MMI_UCM_ENTRY_PROCESSING_SCRN_BT, "[UCMBT] screen [processing] SG_id:%d")
TRC_MSG(TRC_MMI_UCM_BT_GET_NAME, "[UCMBT] get_remote_name, num_length:%d, str_uri:%d %d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_GET_NAME_CB, "[UCMBT] get_remote_name_cb, ret:%d, is_list_valid:%d, entry_count:%d")
TRC_MSG(TRC_MMI_UCM_BT_GET_NAME_DESTORIED, "[UCMBT] get_remote_name_cb, pbapc handle is destoried[%d]")
TRC_MSG(TRC_MMI_UCM_BT_GET_NAME_FAIL, "[UCMBT] get_remote_name fail, ret:%d")
TRC_MSG(TRC_MMI_UCM_BT_SEND_DTMF, "[UCMBT] mmi_ucm_is_valid_dtmf_bt, ASCII_DTMF:%d")
TRC_MSG(TRC_MMI_UCM_BT_TAP_HIGHLIGH, "[UCMBT] highlight g_num_calls:%d, hilite_tab:%d")
TRC_MSG(TRC_MMI_UCM_BT_CONFIRM_YES, "[UCMBT] mmi_ucm_end_and_accpet_confirm_yes_hdlr_bt (%d)")
TRC_MSG(TRC_MMI_UCM_BT_SEND_CLOG_EVT, "[UCMBT] send update clog evt, %d")
TRC_MSG(TRC_MMI_UCM_BT_GO_BACK_SCREEN_CHECK, "[UCMBT] mmi_ucm_go_back_screen_check_bt, %d")
TRC_MSG(TRC_MMI_UCM_BT_RESET_CALL_TABLE, "[UCMBT] reset call table")
TRC_MSG(TRC_MMI_UCM_BT_FTE_UNLOCK_HDLR, "[UCMBT][FTE] mmi_ucm_FTE_unlock_hdlr_bt, cur_state %d")
TRC_MSG(TRC_MMI_UCM_BT_FTE_FMS_HDLR, "[UCMBT][FTE] mmi_ucm_auto_lock_fsm_hdlr_bt() event = %d, orig_state = %d")
TRC_MSG(TRC_MMI_UCM_BT_FTE_FMS_RESULT, "[UCMBT][FTE] mmi_ucm_auto_lock_fsm_hdlr_bt() new_state = %d")
TRC_MSG(TRC_MMI_UCM_BT_FTE_LOCK_TIME_OUT, "[UCMBT][FTE] mmi_ucm_FTE_auto_lock_timeout_hdlr_bt, cur_state:%d")
TRC_MSG(TRC_MMI_UCM_BT_FTE_SCRN_TOUCH_HDLR, "[UCMBT][FTE] mmi_ucm_FTE_screen_touch_hdlr_bt, is_touched:%d, state:%d")
TRC_MSG(TRC_MMI_UCM_BT_FTE_SCRN_UPDATE_HDLR, "[UCMBT][FTE] update_by_lock_state_bt, lock_state:%d")

#UcmKernelBT.c
TRC_MSG(TRC_MMI_UCM_BT_HOLD_OPTION_BT, "[UCMBT]srv_bt_dialer_hold_all_active_calls")
TRC_MSG(TRC_MMI_UCM_BT_RETRIEVE_OPTION_BT, "[UCMBT]srv_bt_dialer_send_call_retrieve_req")
TRC_MSG(TRC_MMI_UCM_BT_END_MT_OPTION_BT, "[UCMBT]mmi_ucm_end_mt_option_bt")
TRC_MSG(TRC_MMI_UCM_BT_END_OPTION_BT, "[UCMBT]mmi_ucm_end_option_bt, call_state[%d]:%d")
TRC_MSG(TRC_MMI_UCM_BT_RELEASE_ALL_ACTIVE_CALLS, "[UCMBT]srv_bt_dialer_release_all_active_calls")
TRC_MSG(TRC_MMI_UCM_BT_DIAL_OPTION, "[UCMBT] mmi_ucm_dial_option_bt")
TRC_MSG(TRC_MMI_UCM_BT_SEND_ATA_REQ, "[UCMBT]srv_bt_dialer_send_ata_req")
TRC_MSG(TRC_MMI_UCM_BT_SWAP_OPTION_BT, "[UCMBT]srv_bt_dialer_hold_all_active_calls")
TRC_MSG(TRC_MMI_UCM_BT_EVT_HDLR, "[UCMBT] event_handle,[event_id:%d]")
TRC_MSG(TRC_MMI_UCM_BT_EVT_HDLR_AT_CALL_ID, "[UCMBT] event [get_list] AT_CALL_ID")
TRC_MSG(TRC_MMI_UCM_BT_EVT_IND_INDICATOR, "[UCMBT] event [ind] indicator:%d, value:%d")
TRC_MSG(TRC_MMI_UCM_BT_END_ALL, "[UCMBT] [end_all] step:%d")
TRC_MSG(TRC_MMI_UCM_BT_EVT_GET_LIST, "[UCMBT] event [get_list], notify.event_id:%d")
TRC_MSG(TRC_MMI_UCM_BT_EVT_IND_RING_TONE, "[UCMBT] event [ind] IN_BAND_RING_TONE, inBandRing.enabled:%d")
TRC_MSG(TRC_MMI_UCM_BT_EVT_IND_CMD_RSP, "[UCMBT] event [ind] DIAL_CMD_RSP, error_code:%d")
TRC_MSG(TRC_MMI_UCM_BT_EVT_IND_LIST_CALLS, "[UCMBT] event [ind] LIST_CURRENT_CALLS, count:%d, index:%d, number:%d %d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_EVT_IND_LIST_CALLS_ADD, "[UCMBT] event [ind] LIST_CURRENT_CALLS [add] g_ucm_call_state_temp[%d].call_state:%d, num:%d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_CALL_LIST, "[UCMBT] mmi_ucm_sync_call_list(Start), g_num_cur_calls=%d,g_num_calls=%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_UPDATE, "[UCMBT] sync update")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_UPDATE_STATE, "[UCMBT] sync update call_state_cntx[%d].call_state:%d, call_info[%d].call_state:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_UPDATE_TIME, "[UCMBT] sync update time, index:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_UPDATE_OLD, "[UCMBT] sync update num, call_state_cntx[%d].num_uri:%d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_UPDATE_NEW, "[UCMBT] sync update num, call_info[%d].num_uri:%d %d %d, length:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_DECREASE, "[UCMBT] sync decrease")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_DECREASE_SINGLE, "[UCMBT] sync decrease [single] index:%d, call_state:%d, num:%d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_DECREASE_SAME, "[UCMBT] sync decrease [same] call_info[%d].num_uri:%d %d %d, state:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_DECREASE_DEL, "[UCMBT] sync decrease [del] index:%d, call_state:%d, num:%d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_DECREASE_DIF_STATE, "[UCMBT] sync decrease [different state] index:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_DECREASE_DIF_NUM, "[UCMBT] sync decrease [different number] index:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_INCREASE, "[UCMBT] sync increase")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_INCREASE_CALL_INFO, "[UCMBT] sync increase [add] call_info[%d].call_state:%d,num:%d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_INCREASE_CALL_STATE, "[UCMBT] sync increase [add] call_state_cntx[%d].call_state:%d,num:%d %d %d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_RESULT, "[UCMBT] sync result:%d")
TRC_MSG(TRC_MMI_UCM_BT_ACT_END_AND_ACCEPT, "[UCMBT] end_and_accept_option_bt ,%d")
TRC_MSG(TRC_MMI_UCM_BT_RING_TONE, "[UCMBT] play ringtone:%d")
TRC_MSG(TRC_MMI_UCM_BT_STOP_RING_TONE, "[UCMBT] stop ringtone")
TRC_MSG(TRC_MMI_UCM_BT_STATE_MAP, "[UCMBT] bt_srv type:%d")
TRC_MSG(TRC_MMI_UCM_BT_CLEAN_ALL, "[UCMBT] clean all")
TRC_MSG(TRC_MMI_UCM_BT_SNRIO_CTRL, "[UCMBT] scenario control")
TRC_MSG(TRC_MMI_UCM_BT_HIDE_SCRN, "[UCMBT] screen hide bt call screen")
TRC_MSG(TRC_MMI_UCM_BT_SET_HIDE_SCRN, "[UCMBT] screen [set] hide bt call screen [pos:%d]")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_SPEC_REL, "[UCMBT] sync special, release, call_info[0].state:%d, call_info[1].state:%d")
TRC_MSG(TRC_MMI_UCM_BT_SYNC_SPEC_INC, "[UCMBT] sync special, increase, call_state_cntx[1].state:%d, call_state_cntx[0].state:%d")
TRC_MSG(TRC_MMI_UCM_BT_SEND_ALL_CALL_END, "[UCMBT] event send all calls end ind, pri:%d,cur:%d")