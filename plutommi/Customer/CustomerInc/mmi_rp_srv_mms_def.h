/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *   mmi_rp_srv_mms_def.h
 *
 * Project:
 * --------
 *   MAUI
 *
 * Description:
 * ------------
 *   Resource populate function generated by XML resgen
 *
 * Author:
 * -------
 *   MTK resgenerator XML parser
 *
 *******************************************************************************/


#ifndef _MMI_RP_SRV_MMS_DEF_H
#define _MMI_RP_SRV_MMS_DEF_H




/******************** Menu resource IDs - begin ********************/
typedef enum
{
    MENU_ID_FMGR_FWD_MMS = 15597 + 1, /* BASE_ID + 1 */
    MMI_RP_SRV_MMS_MENU_MAX
}mmi_rp_srv_mms_menu_enum;
/******************** Menu resource IDs - finish ********************/


/******************** String resource IDs - begin ********************/
typedef enum
{
    MMA_STR_ID_MESSAGE_CORRUPT = 15597 + 1, /* BASE_ID + 1 */
    MMA_STR_ID_MESSAGE_UNSUPPORTED,
    MMA_STR_ID_MMS_DELIVERY_REPORT,
    MMA_STR_ID_MMS_READ_REPORT,
    MMS_STR_ID_EMPTY_STRING,
    MMS_STR_ID_RR_TEXT_FROM,
    MMS_STR_ID_RR_TEXT_MSGID,
    MMS_STR_ID_RR_TEXT_READ,
    MMS_STR_ID_RR_TEXT_SENT,
    MMS_STR_ID_RR_TEXT_SUBJECT,
    MMS_STR_ID_RR_TEXT_TO,
    MMS_STR_ID_RR_TEXT_WAS_READ,
    MMS_STR_ID_RR_TEXT_YOUR_MSG,
    STR_ID_UMMS_NEW_MMS,
    STR_ID_UMMS_NEW_MMS_FROM_SIM1,
    STR_ID_UMMS_NEW_MMS_FROM_SIM2,
    STR_ID_UMMS_NEW_MMS_FROM_SIM3,
    STR_ID_UMMS_NEW_MMS_FROM_SIM4,
    STR_ID_MMS_VIEWER_TEXT_STRIPPED,
    STR_ID_UMMS_MMS_SERVICE,
    MMI_RP_SRV_MMS_STR_MAX
}mmi_rp_srv_mms_str_enum;
/******************** String resource IDs - finish ********************/


/******************** Timer resource IDs - begin ********************/
typedef enum
{
    UMMS_SEND_TIMER = 15597 + 1, /* BASE_ID + 1 */
    UMMS_DOWNLOAD_TIMER,
    MMS_VIEWER_TIMER,
    SRV_MMS_BGSR_TIMER,
    UMMS_SETTINGS_TIMER,
    MMI_RP_SRV_MMS_TIMER_MAX
}mmi_rp_srv_mms_timer_enum;
/******************** Timer resource IDs - finish ********************/


/******************** Events resource IDs - begin ********************/
typedef enum
{
    EVT_ID_SRV_MMS_UPDATE_STATUS = 15597 + 1, /* BASE_ID + 1 */
    EVT_ID_SHOW_HIDE_ICON,
    EVT_ID_SRV_MMS_READY,
    EVT_ID_MMA_INSUF_MEM,
    EVT_ID_SRV_MMS_DEINIT,
    EVT_ID_JSR_DELETE_MMS,
    EVT_ID_SRV_ASM_SUCCESS,
    EVT_ID_SRV_ASM_STOP,
    EVT_ID_SRV_ASM_CANCEL,
    EVT_ID_SRV_CHK_CARD_PLUG_OUT,
    EVT_ID_SRV_CHANGE_STORAGE,
    EVT_ID_SRV_SET_SETTING,
    EVT_ID_SRV_APP_ERROR,
    EVT_ID_SRV_SAVE_OBJECTS_ERROR,
    EVT_ID_SRV_TEMPLATE_ERROR,
    EVT_ID_SRV_SHOW_STATUS,
    EVT_ID_SRV_SAVE_RSP_FROM_UC,
    EVT_ID_SRV_BOOTUP_INIT,
    EVT_ID_SRV_INVALID_POPUP,
    EVT_ID_SRV_EXIT_VIEWER_APP,
    EVT_ID_SRV_CURR_MSG_UPDATE,
    EVT_ID_SRV_SHOW_BGSR_POPUP,
    EVT_ID_SRV_CURR_MSG_SELECT,
    EVT_ID_SRV_WAP_READY,
    EVT_ID_SRV_STORAGE_FULL_IND,
    EVT_ID_SRV_UPDATE_MEM_STATUS,
    EVT_ID_SRV_HDL_CARD_PLUG_OUT,
    EVT_ID_SRV_BGSR_RESULT,
    EVT_ID_SRV_SAVE_OBJECT_COPY_RESULT_HDL,
    EVT_ID_SRV_CHECK_AND_DELETE_PROGRESS,
    EVT_ID_SRV_NEW_MMS_MSG,
    EVT_ID_UMMS_DEINIT_FROM_HISTORY,
    EVT_ID_SRV_PROCESSING_TEMPLATE,
    EVT_ID_SRV_MMS_MMA_TERMINATE,
    EVT_ID_SRV_MMS_SEND_REFRESH,
    EVT_ID_SRV_MMS_SEND_URI_IND,
    EVT_ID_SRV_MMS_MEM_FULL,
    EVT_ID_SRV_MMS_GET_CURR_MSG_BOX,
    EVT_ID_SRV_MMS_NMGR_ALERT,
    EVT_ID_SRV_MMS_IN_USE_MSG_ID,
    EVT_ID_SRV_MMS_READY_FOR_LITE_VIEWER,
    EVT_ID_SRV_MMS_TEMPLATE_GEN_RESULT,
    EVT_ID_SRV_MMS_SERVICE_MEM_FREE_DONE,
    MMI_RP_SRV_MMS_EVENT_MAX
}mmi_rp_srv_mms_event_enum;
/******************** Events resource IDs - begin ********************/
/******************** Template resource IDs - Begin ********************/
/******************** Template resource IDs - End ********************/

/******************** Venus XML resource IDs - Begin ********************/
typedef enum 
{

    MMI_RP_SRV_MMS_VXML_LAYOUT_MAX
} mmi_rp_srv_mms_vxml_layout_enum;
/******************** Venus XML resource IDs - End ********************/



/******************** MMI Cache IDs - Begin ********************/
typedef enum
{
    NVRAM_UMMS_RETRIEVAL_SETTINGS = 15597 + 1, /* BASE_ID + 1 */    /*       DOUBLE */ 
    NVRAM_UMMS_RESTORE_RETRIEVAL_SETTINGS,                      /*       DOUBLE */ 
    NVRAM_UMMS_LANGUAGE_CHANGE,                                 /*        SHORT */ 
    NVRAM_SETTING_PREFER_MMS_STORAGE_MODE,                      /*         BYTE */ 
    NVRAM_SETTING_MMS_MSG_FILTER,                               /*         BYTE */ 
    NVRAM_UMMS_DEF_TMPLT_GEN_STATE,                             /*         BYTE */ 
    MMI_RP_SRV_MMS_MMI_CACHE_MAX
} mmi_rp_srv_mms_mmi_cache_enum;
/******************** MMI Cache IDs - End ********************/


/******************** Image resource IDs - begin ********************/
typedef enum
{
    IMG_ID_SRV_MMS_VIEWER_APP = 15597 + 1, /* BASE_ID + 1 */
    MMA_IMG_LETTER_CREATED,
    MMA_IMG_CORRUPT,
    MMA_IMG_LETTER,
    MMA_IMG_LETTER_READ,
    MMA_IMG_NOTIF,
    MMI_RP_SRV_MMS_IMG_MAX
}mmi_rp_srv_mms_img_enum;
/******************** Image resource IDs - finish ********************/


#endif /* _MMI_RP_SRV_MMS_DEF_H */
