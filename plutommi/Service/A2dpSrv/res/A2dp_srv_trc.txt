[APP NAME] = A2DP srv
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#starttrace
TRC_MSG(MMI_USER_PROF_BT_A2DP_QUERY_STATE,"[BT A2DP] mmi_bt_a2dp_query_state: state=[%d]")
TRC_MSG(MMI_AV_BT_TRC_MSG_REPORT, "[AV_BT]<MESSAGE> <LINE:%d> VAL:%d")
TRC_MSG(MMI_AV_BT_TRC_OPEN_RESULT,"[AV_BT] av_bt_open_result, result=%d")
TRC_MSG(MMI_AV_BT_TRC_GET_AUDIO_CFG_SBC,"[AV_BT] av_bt_aud_info_to_cfg sbc, min_bit_pool=%d, max_bit_pool=%d, sample_rate=%d, channel_mode=%d")
TRC_MSG(MMI_AV_BT_TRC_GET_AUDIO_CFG_MP3,"[AV_BT] av_bt_aud_info_to_cfg mp3, bit_rate=%d, layer=%d, sample_rate=%d, channel_mode=%d, VBR=%d, MPF=%d")
TRC_MSG(MMI_AV_BT_TRC_GET_AUDIO_CFG_EX_1,"[AV_BT] av_bt_get_aud_cfg_ex, sample_rate=%d, channel_mode=%d")
TRC_MSG(MMI_AV_BT_TRC_GET_AUDIO_CFG_EX_2,"[AV_BT] av_bt_get_aud_cfg_ex, min_bit_pool=%d, max_bit_pool=%d, sample_rate=%d, channel_mode=%d")
TRC_MSG(MMI_AV_BT_TRC_MATCH_AUDIO_CFG_SBC,"[AV_BT] av_bt_match_aud_cfg sbc, min_bit_pool=%d, max_bit_pool=%d, sample_rate=%d, channel_mode=%d")
TRC_MSG(MMI_AV_BT_TRC_MATCH_AUDIO_CFG_MP3,"[AV_BT] av_bt_match_aud_cfg mp3, bit_rate=%d, layer=%d, sample_rate=%d, channel_mode=%d, VBR=%d, MPF=%d")
TRC_MSG(MMI_AV_BT_TRC_INTERRUPT_HDLR,"[AV_BT] av_bt_open_interrupt_hdlr")
TRC_MSG(MMI_AV_BT_TRC_OPEN_SINK,"[AV_BT] av_bt_open_sink, state=%d, wait=%d, immediate_callback=%d")
TRC_MSG(MMI_AV_BT_TRC_OPEN_EX,"[AV_BT] av_bt_open_ex, state=%d, wait=%d, immediate_callback=%d")
TRC_MSG(MMI_AV_BT_TRC_OPEN,"[AV_BT] av_bt_open, state=%d, wait=%d, sbc_only=%d, immediate_callback=%d")
TRC_MSG(MMI_AV_BT_TRC_CLOSE,"[AV_BT] av_bt_close, notify_opener=%d")
TRC_MSG(MMI_AV_BT_TRC_PAUSE,"[AV_BT] av_bt_pause")
TRC_MSG(MMI_AV_BT_TRC_OPEN_CODEC,"[AV_BT] av_bt_open_codec, is_open=%d, seq_no=%d")
TRC_MSG(MMI_AV_BT_TRC_CLOSE_CODEC,"[AV_BT] av_bt_close_codec, is_open=%d, seq_no=%d")
TRC_MSG(MMI_AV_BT_TRC_CLOSE_CODEC_IND,"[AV_BT] av_bt_close_codec_ind, is_open=%d, seq_no=%d")
TRC_MSG(MMI_AV_BT_TRC_OPEN_DEV,"[AV_BT] av_bt_open_dev, state=%d, done_callback=%d, reconnect=%d, wait_cnf=%d")
TRC_MSG(MMI_AV_BT_TRC_CLOSE_DEV,"[AV_BT] av_bt_close_dev")
TRC_MSG(MMI_AV_BT_TRC_START_DISC_TIMER,"[AV_BT] av_bt_start_disc_timer")
TRC_MSG(MMI_AV_BT_TRC_RESTART_DISC_TIMER,"[AV_BT] av_bt_restart_disc_timer")
TRC_MSG(MMI_AV_BT_TRC_STOP_DISC_TIMER,"[AV_BT] av_bt_stop_disc_timer")
TRC_MSG(MMI_AV_BT_TRC_CONNECT,"[AV_BT] av_bt_connect")
TRC_MSG(MMI_AV_BT_TRC_DISCONNECT,"[AV_BT] av_bt_disconnect")
TRC_MSG(MMI_AV_BT_TRC_DISCOVER_STREAM,"[AV_BT] av_bt_discover_stream,sep_count = %d")
TRC_MSG(MMI_AV_BT_TRC_GET_STREAM_CAP,"[AV_BT] av_bt_get_stream_cap, sep_count = %d")
TRC_MSG(MMI_AV_BT_TRC_CONFIG_STREAM,"[AV_BT] av_bt_config_stream")
TRC_MSG(MMI_AV_BT_TRC_CONFIG_STREAM_NOT_MATCH,"[AV_BT] av_bt_config_stream, no match cap")
TRC_MSG(MMI_AV_BT_TRC_OPEN_STREAM,"[AV_BT] av_bt_open_stream")
TRC_MSG(MMI_AV_BT_TRC_START_STREAM,"[AV_BT] av_bt_start_stream")
TRC_MSG(MMI_AV_BT_TRC_PAUSE_STREAM,"[AV_BT] av_bt_pause_stream")
TRC_MSG(MMI_AV_BT_TRC_CLOSE_STREAM,"[AV_BT] av_bt_close_stream")
TRC_MSG(MMI_AV_BT_TRC_ABORT_STREAM,"[AV_BT] av_bt_abort_stream")
TRC_MSG(MMI_AV_BT_TRC_CONFIG_FAIL_RETRY,"[AV_BT] sep_ind_use_retry=%d, bad_acp_seid_retry=%d, bad_state_retry=%d")
TRC_MSG(MMI_AV_BT_TRC_BAD_SEP_IND_USE_RETRY_FALSE,"[AV_BT] sep_ind_use_retry, FALSE")
TRC_MSG(MMI_AV_BT_TRC_BAD_ACP_SEID_RETRY_FALSE,"[AV_BT] bad_acp_seid_retry, FALSE")
TRC_MSG(MMI_AV_BT_TRC_BAD_STATE_RETRY_FALSE,"[AV_BT] bad_state_retry, FALSE")
TRC_MSG(MMI_AV_BT_TRC_INQUERY_START_CALLBACK,"[AV_BT] av_bt_inquiry_start_callback, is_inquriy=%d, callback=%x")
TRC_MSG(MMI_AV_BT_TRC_INQUERY_STOP_CALLBACK,"[AV_BT] av_bt_inquiry_stop_callback, is_inquriy=%d, callback=%x")

TRC_MSG(MMI_AV_BT_TRC_CONNECT_POST_PROC,"[AV_BT] av_bt_connect_post_proc, post_proc=%d, is_connected=%d, need_reconnect=%d")
TRC_MSG(MMI_AV_BT_TRC_CONNECT_CNF,"[AV_BT] av_bt_connect_cnf, result=%d, wait=%d, go_on=%d")
TRC_MSG(MMI_AV_BT_TRC_DISCONNECT_CNF,"[AV_BT] av_bt_disconnect_cnf, wait=%d, need_stop=%d, need_reconnect=%d")
TRC_MSG(MMI_AV_BT_TRC_DISCOVER_CNF,"[AV_BT] av_bt_discover_stream_cnf, result=%d, wait=%d, go_on=%d")
TRC_MSG(MMI_AV_BT_TRC_GET_CAP_CNF,"[AV_BT] av_bt_get_stream_cap_cnf, result=%d, wait=%d, go_on=%d")
TRC_MSG(MMI_AV_BT_TRC_CONFIG_STREAM_CNF,"[AV_BT] av_bt_config_stream_cnf, result=%d, wait=%d, go_on=%d")
TRC_MSG(MMI_AV_BT_TRC_OPEN_STREAM_CNF,"[AV_BT] av_bt_open_stream_cnf, result=%d, wait=%d, go_on=%d, reconfig=%d")
TRC_MSG(MMI_AV_BT_TRC_START_STREAM_CNF,"[AV_BT] av_bt_start_stream_cnf, result=%d, wait=%d, go_on=%d, reconfig=%d")
TRC_MSG(MMI_AV_BT_TRC_PAUSE_CNF,"[AV_BT] av_bt_pause_stream_cnf,  result=%d, wait=%d, go_on=%d, reconfig=%d")
TRC_MSG(MMI_AV_BT_TRC_CLOSE_CNF,"[AV_BT] av_bt_close_stream_cnf, wait=%d, go_on=%d")
TRC_MSG(MMI_AV_BT_TRC_ABORT_CNF,"[AV_BT] av_bt_abort_stream_cnf, wait=%d, go_on=%d")

TRC_MSG(MMI_AV_BT_TRC_GO_ON_DETAILS,"[AV_BT] go_on details, need_stop=%d, reconnect=%d, post_proc=%d")

TRC_MSG(MMI_AV_BT_TRC_IS_OUTPUT_TO_BT,"[AV_BT] is_output_to_bt, bt_power_on=%d, in_flight_mode=%d, output_to_bt=%d")

TRC_MSG(MMI_AV_BT_TRC_AUDIO_VIA_SCO,"[AV_BT] av_bt_open_audio_via_sco")
TRC_MSG(MMI_AV_BT_TRC_SCO_DISCONNECTED,"[AV_BT] av_bt_sco_disconnected_event_hdlr, stop:%d")
TRC_MSG(MMI_AV_BT_TRC_SCO_CALLBACK,"[AV_BT] av_bt_connect_sco_callback_hdlr, wait=%d, callback=%d")
TRC_MSG(MMI_AV_BT_TRC_HFP_CALLBACK,"[AV_BT] av_bt_connect_hfp_callback_hdlr, wait=%d, success=%d, callback=%d")

TRC_MSG(MMI_AV_BT_TRC_ENTRY_MAIN,"[AV_BT] entry_bluetooth_settings")
TRC_MSG(MMI_AV_BT_TRC_SETTING_DONE,"[AV_BT] setting_done, output:%d, tep_headset:%d, valid:%d")
TRC_MSG(MMI_AV_BT_TRC_SETTING_POWER_ON_CALLBACK,"[AV_BT] bt_power_on_callback, success:%d")
TRC_MSG(MMI_AV_BT_TRC_SETTING_POWER_OFF_CALLBACK,"[AV_BT] bt_power_off_callback, success:%d")
TRC_MSG(MMI_AV_BT_TRC_SETTING_OUTPUT_CHANGE_CALLBACK,"[AV_BT] bt_output_change_callback, on_off:%d")
TRC_MSG(MMI_AV_BT_TRC_CHECK_SET_DEFAULT_EARPHONE,"[AV_BT] check_set_default_earphone")
TRC_MSG(MMI_AV_BT_TRC_SET_DEFAULT_EARPHONE_REJECT,"[AV_BT] set_default_earphone_reject")
TRC_MSG(MMI_AV_BT_TRC_SET_DEFAULT_EARPHONE_ACCEPT,"[AV_BT] set_default_earphone_accept")
/*New Added for BT speaker*/
TRC_MSG(MMI_AV_BT_TRC_DIS_AVRCP_TG_REQ,"[A2DP_SINK]Disconnect AVRCP Target from A2DP")
TRC_MSG(MMI_AV_BT_TRC_SINK_DIS_AVRCP_CT_REQ,"[A2DP_SINK]Disconnect AVRCP Controller from A2DP")
TRC_MSG(MMI_AV_BT_TRC_CONN_REQ,"[A2DP_SINK]A2DP connect request,local_role:%d")
TRC_MSG(MMI_AV_BT_TRC_ACT_REQ,"[A2DP_SINK]A2DP activate request,local_role:%d")
TRC_MSG(MMI_SINK_TRC_CM_DIS_REQ,"[A2DP_SINK]Disconnect A2DP from BT CM")
TRC_MSG(MMI_SINK_TRC_SET_NOTIFIER,"[A2DP_SINK]Update BT music icons from A2DP Ind Notifier")
TRC_MSG(MMI_SINK_TRC_HANDLE_GSM_IND,"[A2DP_SINK]GSM call indication to controller A2DP Sink state,ind:%d")
TRC_MSG(MMI_SINK_TRC_IS_CODEC_OPEN,"[A2DP_SINK]Is A2DP Sink Codec Open,result:%d")
TRC_MSG(MMI_SINK_TRC_RESUME_STREAM,"[A2DP_SINK]A2DP Sink resume stream, state:%d")
TRC_MSG(MMI_SINK_TRC_IS_STREAMING,"[A2DP_SINK]Is A2DP is streaming, state:%d")
TRC_MSG(MMI_SINK_TRC_IS_CONN,"[A2DP_SINK]Is A2DP is Connected, state:%d")
TRC_MSG(MMI_SINK_TRC_MED_ERR_EVENT,"[A2DP_SINK]Error Event from MED, event:%d")
TRC_MSG(MMI_AV_BT_TRC_SINK_CLOSE_CODEC,"[A2DP_SINK]A2DP Sink codec close, is_codec_open:%d, seq_no:%d")
TRC_MSG(MMI_AV_BT_TRC_SINK_OPEN_CODEC,"[A2DP_SINK]A2DP Sink codec open, is_codec_open:%d, seq_no:%d")
TRC_MSG(MMI_AV_BT_TRC_SINK_DIS_CALLBACK_CALLED,"[A2DP_SINK]BT CM Callback Called")
TRC_MSG(MMI_AV_BT_TRC_SINK_DIS_CALLBACK_NOT_CALLED,"[A2DP_SINK]BT CM Disconnect Callback Not Called")