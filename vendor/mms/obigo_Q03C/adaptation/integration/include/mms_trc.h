/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
* 
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *   mms_trc.h
 *
 * Project:
 * --------
 *   MAUI
 *
 * Description:
 * ------------
 *   This is trace map definition.
 *
 * Author:
 * -------
 * -------
 *
 *==============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!! 
 *------------------------------------------------------------------------------
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!! 
 *==============================================================================
 *******************************************************************************/

#ifndef MMS_TRC_H
#define MMS_TRC_H

#ifndef GEN_FOR_PC

#ifndef _KAL_PUBLIC_DEFS_H
#error "kal_public_defs.h should be included before mms_trc.h"
#endif 

#else /* GEN_FOR_PC */ 
#include "kal_trace.h"
#endif /* GEN_FOR_PC */ 

#ifndef _KAL_TRACE_H
#error "kal_trace.h should be included before mms_trc.h"
#endif 

#if !defined(GEN_FOR_PC)
#if defined(__TST_MODULE__) || defined(__CUSTOM_RELEASE__)
    #include "mms_trc_gen.h"
#endif /* TST Trace Defintion */
#endif
    BEGIN_TRACE_MAP(MOD_MMS)
#ifdef OBIGO_Q05A
    TRC_MSG(MSM_ENV_42717513D6299D379B4216E3BF905EE0, "MSM: MSMc_registrySetPath path=%s")
    TRC_MSG(MSM_ENV_017F25C8B70224E36704AB3104B66B5D, "MSM: MSMc_registrySetAddKeyStr name=%s valueLength=%d")
    TRC_MSG(MSM_ENV_CFE0300753D16CED4200773E81CBC517, "MSM: MSMc_registrySetCommit")
    TRC_MSG(MSM_ENV_9E72213CFD251D83B211E889C6BF5F13, "MSM: MSMc_registryGet path=%s key=%s")
    TRC_MSG(MSM_ENV_01929533F552C3B22961CE11ABAE38D0, "MSM: MSMc_registryDelete path=%s key=%s")
    TRC_MSG(MSM_ENV_C7E15A093472880D52D2863BE935569E, "MSM: MSMc_registryRespGetNext")
    TRC_MSG(MSM_ENV_8C0FF72D4411AE80AF0F1E732452573C, "MSM: MSMc_registryRespFree")
    TRC_MSG(MSM_ENV_7C28DAE1882E2041F2D996480530725A, "MSM: MSMc_registrySetInit")
    TRC_MSG(MSM_ENV_85E1FAF21612237067869A4ECE936E1C, "MSM: MSMc_startMobileSuite")
    TRC_MSG(MSM_ENV_F29D0081FAC8102541C9D78745E9236F, "MSM: MSMc_terminateMobileSuite")
    TRC_MSG(MSM_ENV_F25E61C220701B3F73944414460610E1, "MSM: MSMc_kill")
    TRC_MSG(MSM_ENV_DEEC7A1E1E5D2D8DF8300889D52FBF27, "MSM: MSMc_startModule modId=%d startOptions=%s")
    TRC_MSG(MSM_ENV_4EBC067698BCD770C017B316C88D63B2, "MSM: MSMc_terminateModule modId=%d")
    TRC_MSG(MSM_ENV_85B7CB9431C62916C5BB166ACA5DD495, "MSM: MSMc_timerExpiredEvent")
    TRC_MSG(MSM_ENV_E14636E981FE5889C3BCD35D0E043A7F, "MSM: MSMc_externalResponse")
    TRC_MSG(MSM_ENV_829A781BF713DF51BE6A306DFFE909A3, "MSM: MSMc_objectAction src_path=%s mime_type=%s")
    TRC_MSG(MSM_ENV_904621F10CBB8F232DBCAF1E931B78EF, "MSM: Signal=%u handled by package")
    TRC_MSG(MSM_ENV_37B6ACF5F2EEAEE00D1B403117A4DF36, "MSM_TMP: Signal=%u handled by package")
    TRC_MSG(MSM_E583E456CADDB9BFFA670B9EB9258FA1, "MSM: User Root Folder Creation Failed : err %i")
    TRC_MSG(MSM_108902C0D079EC5521B8FC36FA845850, "MSM: User Folder Creation Failed : err ")
    TRC_MSG(MSM_4280027FD98E4512D4E4F70BE2E9417B, "MSM: Module Version: module=MSF, version=%s")
    TRC_MSG(MSM_A0F47F8440FCFA47759445FE973201CD, "MSM: Initialised Done")
    TRC_MSG(MSM_0462666EC68649FAC89DB0F347A947D3, "MSM: Module Status: module=%d, status=%d")
    TRC_MSG(MSM_3519899563315FEF7506ED0B39031029, "MSM: Terminated")
    TRC_MSG(MSM_B0784A985D79CED53A21F50B5BF05D65, "MSM: Start Module: module=%d, user=%d, Old Status=%d, content_send=%d")
    TRC_MSG(MSM_D6F099BFAABCB5BC82359345252F06DE, "MSM: MSM status=%d")
    TRC_MSG(MSM_34ED11E81CEB524AE4FD530A660E2277, "MSM: Start module not permitted. Suite is shutting down, and module is not already active.")
    TRC_MSG(MSM_3A9ECEB6CA585770F3787C1BDC27A649, "MSM: Terminate Module: module=%d, user=%d, Old Status=%d")
    TRC_MSG(MSM_9EC0688A91C18EDB05F16F6203B0DD60, "MSM: Module Status: module=%d, New Status=%d, Old Status=%d")
    TRC_MSG(MSM_323B96FB2C0661C02B46453CD84BD1F2, "MSM: Module Version: module=%s, version=%s")
    TRC_MSG(MSM_D5193539DA7DB59453CD9ABB14903D65, "MSM: Received Content Routing information from the registry")
    TRC_MSG(MSM_43D74F6458EEDD84603A1327FCCEE64A, "MSM: Content Routing: Send data to module %d")
    TRC_MSG(MSM_56FC4F2DB502AF761F1F6D9E369388B8, "MSM: received signal MSM_MAIN_SIG_START_MODULE")
    TRC_MSG(MSM_324AB8C74CA0C848397F0ED7903113EA, "MSM: received signal MSM_MAIN_SIG_TERMINATE_MODULE")
    TRC_MSG(MSM_952D289813B549D1ECC25CAC44B95865, "MSM: received signal MSM_MAIN_SIG_TERMINATE")
    TRC_MSG(MSM_C37A4164611AAD42162802827E240B37, "MSM: received signal MSM_MAIN_SIG_MODULE_STATUS")
    TRC_MSG(MSM_C28D8C54B7D306EAEA73A174C654DA88, "MSM: received signal MSM_MAIN_SIG_CONTENT_SEND")
    TRC_MSG(MSM_91FCF50F279D98FE0DBCF2C453A0AD8B, "MSM: received signal MSM_MAIN_SIG_AFI_FINISHED")
    TRC_MSG(MSM_39BCE61FBA7D015BC86664B741C010E7, "MSM: received signal MSM_MAIN_SIG_REG_TERMINATED")
    TRC_MSG(MSM_AAE8977258E7B354F0718B6D7ABDA497, "MSM: received unknown signal: %d")
    TRC_MSG(MSM_CMMN_B04BA865CB94DCE700341D292E92B9D9, "MSF: MSF_SIG_GET_ICON_TABLE src_modId=%d, id=%d")
    TRC_MSG(MSM_CMMN_A22C5998833CCFBA02F1BD1AB44E4975, "MSM: received signal MSM_CMMN_SIG_OBJECT_ACTION")
    TRC_MSG(MSM_CMMN_26FE1E56395590BD0612A5D25FA52CF8, "MSM: received signal MSM_CMMN_SIG_GET_ICON_TABLE")
    TRC_MSG(MSM_CMMN_AAE8977258E7B354F0718B6D7ABDA497, "MSM: received unknown signal: %d")
    TRC_MSG(MSM_CMMN_A5FB0968D5F460581ED5691A400BE53C, "MSM: CMMN - initialized")
    TRC_MSG(MSM_CMMN_064E562DDCD048F80A20253F5AF9E3E9, "MSM: CMMN - terminated")
    TRC_MSG(MSM_REG_2F083EF4860CC14DB4CB53B517DA0BFC, "MSM_REG: received unknown signal: %d")
    TRC_MSG(MSM_TIME_FDFA3588D9C6A45094B29E115D0884B6, "MSM: TIMER - initialized")
    TRC_MSG(MSM_TIME_5056E99492A88EE4296C4CB6E8258073, "MSM: TIMER - terminated")
    TRC_MSG(MSM_TIME_F463CA157A7A3F0FF79848EA79ABEA50, "MSM_TIMER: set timer (%d, %d, %d)")
    TRC_MSG(MSM_TIME_CF44B6CD10ED88DAE69F898B0166DDDF, "MSM_TIMER: reset timer (%d, %d)")
    TRC_MSG(MSM_8C33D32CDF4116FE1D8A936D702C6077, "MSM: received signal MSM_MAIN_SIG_REG_RESPONSE")
    TRC_MSG(MSM_REG_73DDAC47CA00810677644E103C8092D3, "MSM: Send signal MSF_SIG_REG_RESPONSE Dest %d")
    TRC_MSG(MSM_REG_55F10893940DFDD64E525631CE4628BE, "MSM: registry termination continues.")
    TRC_MSG(MSM_REG_8C44ECDD00C5FBDEE8F8FB1EC49CF730, "MSM: Load registry from text file: %s")
    TRC_MSG(MSM_REG_FD29C1AA8B9E70B152E3F2F1D483B919, "MSM_REG: received signal MSM_REGISTRY_SIG_SET")
    TRC_MSG(MSM_REG_2222AAB723E0DFF1FE31ED5FB719BA0F, "MSM_REG: received signal MSM_REGISTRY_SIG_DELETE")
    TRC_MSG(MSM_REG_F276275F386BC206E1D5079A001D607A, "MSM_REG: received signal MSM_REGISTRY_SIG_GET")
    TRC_MSG(MSM_REG_85F22CB52D664BCFC3A347D2CF344568, "MSM_REG: received signal MSM_REGISTRY_RUN")
    TRC_MSG(HDI_FILE_4A4B4420DEAA65C10F9B23D101E7B538, "translateFileError: error=%d")
    TRC_MSG(HDI_FILE_OPEN_01, "MSF_FILE_OPEN: fname=%s, storage=%d, mode=%d, size=%d\n")
    TRC_MSG(HDI_FILE_751C83E4172AEC19F1584BBCCED1AE38, "MSF_FILE_OPEN: File has been removed.")
    TRC_MSG(HDI_FILE_01B703735B6BFC3FEFCCBF921F927750, "MSF_FILE_OPEN: No more empty file slot available.")
    TRC_MSG(HDI_FILE_OPEN_02, "fname=%s, storage=%d, mod_id=%d\n")
    TRC_MSG(HDI_FILE_904608A303CCA8516AEC7AD181370F73, "MSF_FILE_CLOSE: fileHandle=%d")
    TRC_MSG(HDI_FILE_6C020031813BA0DB00C8288925B73B5C, "MSF_FILE_WRITE: fileHandle=%d, size=%d")
    TRC_MSG(HDI_FILE_5A94EB217FC4D26EC83E2EA36990FEE5, "MSF_FILE_READ: fileHandle=%d, size=%d")
    TRC_MSG(HDI_FILE_8D57BE6374C85BFBEA10E8CFCE95E451, "MSF_FILE_FLUSH: fileHandle=%d")
    TRC_MSG(HDI_FILE_F80F98C86B56AB610567C1DBFDE0EDA7, "MSF_FILE_SEEK: fileHandle=%d, offset=%d, seekMod=%d")
    TRC_MSG(HDI_FILE_REMOVE_01, "MSF_FILE_REMOVE: fileName=%s, storage=%d\n")
    TRC_MSG(HDI_FILE_RENAME_01, "MSF_FILE_RENAME: srcName=%s, dstName=%s, storage=%d\n")
    TRC_MSG(HDI_FILE_MKDIR_01, "MSF_FILE_MKDIR: dirName=%s, storage=%d\n")
    TRC_MSG(HDI_FILE_RMDIR_01, "MSF_FILE_RMDIR: dirName=%s, storage=%d\n")
    TRC_MSG(HDI_FILE_GET_SIZE_DIR_01, "MSF_FILE_GETSIZE_DIR: dirName=%s, storage=%d\n")
    TRC_MSG(HDI_FILE_READ_DIR_01, "MSF_FILE_READ_DIR: dirName=%s, storage=%d, pos=%d\n")
    TRC_MSG(HDI_FILE_1251685E473153699DB93021728F8CF2, "MSF_FILE_SELECT: fileHandle=%d, eventType=%d")
    TRC_MSG(HDI_FILE_0AC6E18667C5C1009BCBE9703A7EF2CA, "MSF_FILE_SETSIZE: fileHandle=%d, size=%d")
    TRC_MSG(HDI_FILE_GET_SIZE_01, "MSF_FILE_GETSIZE: fileName=%s, storage=%d\n")
    TRC_MSG(HDI_FILE_D2E20A6822333F4B6A0B747C3B24EC22, "MSF_FILE_CLOSE_ALL: modId=%d")
    TRC_MSG(HDI_FILE_MOVE_EXT_01,                      "MSF_FILE_MOVE_EXT: srcName=%s, src_storage=%d, dstName=%s, dst_storage=%d\n")
    TRC_MSG(HDI_FILE_IS_MCARD_PRESENT_01,              "MSF_FILE_IS_MCARD_PRESENT: Inavlid storage=%d\n")
    TRC_MSG(HDI_FILE_IS_MCARD_PRESENT_02,              "MSF_FILE_IS_MCARD_PRESENT: storage=%d, status=%d\n")
    TRC_MSG(HDI_PIPE_BFA7F51ECAC059B67858F0D932567D4D, "MSF_PIPE_CREATE: modId=%d, name=%s")
    TRC_MSG(HDI_PIPE_A30E6E0491C4CD644B0595519AC5076C, "MSF_PIPE_OPEN: modId=%d, name=%s")
    TRC_MSG(HDI_PIPE_F9B67BE56250013B3A730A05F7842C17, "MSF_PIPE_CLOSE: handle=%d")
    TRC_MSG(HDI_PIPE_69EE56D60529F49B1DEC4338C97067FD, "MSF_PIPE_CLOSE_ERROR: handle=%d")
    TRC_MSG(HDI_PIPE_04DA5052AF46AF1E8A9E84AC1F0ABDA9, "MSF_PIPE_DELETE: name=%s")
    TRC_MSG(HDI_PIPE_80396DBD6FAFA31EA4954F47773BAA14, "MSF_PIPE_READ: handle=%d")
    TRC_MSG(HDI_PIPE_328344E98F63F7BB537736EEE23948B1, "MSF_PIPE_PEEK: handle=%d")
    TRC_MSG(HDI_PIPE_7DC57448C85C00E84A7F18DF169CF89B, "MSF_PIPE_WRITE: handle=%d, bufSize=%d")
    TRC_MSG(HDI_PIPE_AE53AF401E2F39536DF66C1EC2027517, "MSF_PIPE_POLL: handle=%d")
    TRC_MSG(HDI_PIPE_05670BFD304D6CF85C68AD3F4A79ADD2, "MSF_PIPE_STATUS: handle=%d")
    TRC_MSG(HDI_PIPE_08D2DF048FBDD9EE5CCDADB2974CF4D6, "MSF_PIPE_CLOSE_ALL: modId=%d")
    TRC_MSG(MSF_ACT_2319B9C2552CB1ED48B4614475FBBBDA, "ACT: msf_afi_open failed.")
    TRC_MSG(MSF_ACT_CF784A0A2EB0163F05B5881F8E1AC2AC, "ACT: msf_afi_close failed.")
    TRC_MSG(MSF_ACT_91682E6A40C228BFBE443DEEDE6DE89F, "ACT: Received MSF_SIG_WIDGET_ACTION")
    TRC_MSG(MSF_AFI_77DC69A1B3C5C4DBB810C2886B5422A5, "AFI: Index file error. Parser error")
    TRC_MSG(MSF_AFI_E8B9451409A7CD8A3585E98E6570BF92, "AFI: Index file error.Incorrect size in ix file ")
    TRC_MSG(MSF_AFI_137A5A54D57A8E820C638678428DAB7D, "AFI: Index file error. parser error")
    TRC_MSG(MSF_AFI_E9DF74429EE9E7BC4D965F1194647E20, "AFI: Index file error. Name differ")
    TRC_MSG(MSF_AFI_8BD1C560FC20F236CAA5B8AEBF4443F5, "AFI: Index file error. Filename length error")
    TRC_MSG(MSF_AFI_F76EEFFB5EB1A5D1149CF00C2DD90832, "AFI: Index file error. Hash do not match")
    TRC_MSG(MSF_AFI_4BD4903356C8A00E8A8181A1676926FF, "AFI: Index file error. Unsupported attribute")
    TRC_MSG(MSF_AFI_7C1B1DFCFE60F44714377C3F31D0353D, "AFI: Index file error. Attributes on Directories")
    TRC_MSG(MSF_AFI_E56FAA9C056E7F616435E9D72D45592F, "AFI: Index file error. Cleanup index files")
    TRC_MSG(MSF_AFI_2401F0BDFEF30E6BBF6F5AE0384864C7, "AFI: Received MSF_SIG_FILE_NOTIFY")
    TRC_MSG(MSF_AFI_320520248A9E6ACE9BC50B6F8337F4F3, "AFI: Received MSF_SIG_PIPE_NOTIFY")
    TRC_MSG(MSF_CORE_A8221FC6E20B71FF47ACA1C5E51E3F9B, "MSF: MSF_TIMER_SET timerID=%d, timeInterval=%d")
    TRC_MSG(MSF_CORE_19475E1F71ECADE1C3215EDF5D2315B4, "MSF: MSF_TIMER_RESET timerID=%d")
    TRC_MSG(MSF_CORE_847E3F0AE7FE2462EF4DDFE4B9169172, "MSF: MSF_MODULE_IS_CREATED")
    TRC_MSG(MSF_CORE_1502C710D89175E9521B48F2D5D822CC, "MSF: MSF_MODULE_IS_ACTIVE")
    TRC_MSG(MSF_CORE_E29847A819CCB966D86D5EB99511FD28, "MSF: MSF_MODULE_IS_TERMINATED")
    TRC_MSG(MSF_CORE_2AA34ED8322CA1D77F2946A4747BD32C, "MSF: MSF_MODULE_START module=%d startOptions=%s")
    TRC_MSG(MSF_CORE_03B7041ABBFDACA8DD859E372C7E4EE4, "MSF: MSF_MODULE_TERMINATE module=%d")
    TRC_MSG(MSF_CORE_54B5F1F71303A72E54181F4DF563BE9E, "MSF: MSF_SIG_REG_GET path=%s, key=%s")
    TRC_MSG(MSF_CORE_03F690803B6DE83CB30B6345BB6F1C2F, "MSF: MSF_SIG_REG_DELETE path=%s, key=%s")
    TRC_MSG(MSF_CORE_EBAE158EF88154849AEA87262961EBD2, "MSF: MSF_SIG_CONTENT_SEND dest_modId=%d, sendAck=%d, id=%d, startOptions=%s, contentData=")
    TRC_MSG(MSF_CORE_B04BA865CB94DCE700341D292E92B9D9, "MSF: MSF_SIG_GET_ICON_TABLE src_modId=%d, id=%d")
    TRC_MSG(MSF_CORE_3B3EC05910A3E3E465792FC9524995C2, "MSF: MSF_SIG_OBJECT_ACTION mime_type=%s, data_type=%d, &data=%d, data_len=%dsrc_path=%s, file_name=%s")
    TRC_MSG(MSF_CORE_A6EE35A9E1C030AF26E2CEC3B5302532, "MSF: MSF_SIG_OBJECT_ACTION mime_type=%s, data_type=%d, &data=%d, data_len=%dsrc_path=%s, file_name=%s, excl_act_strings_cnt=%d")
    TRC_MSG(MSF_MEM_5BB55B831433F21FC99330132BB94F48, "MEM: + %#08x %6d %6d %6d %s (%d)")
    TRC_MSG(MSF_MEM_FA13208AF5A3F05E6A797BCB0E016279, "MEM: - %#08x %6d        %6d %s (%d)")
    TRC_MSG(MSF_MEM_FC2DA86CD0AA0DD0D3DAE491262E893D, "MSF: MEMORY - msf_mem_init")
    TRC_MSG(MSF_DLG_B00AB33679E7A1A655784C3FE449641F, "DLG: Received MSF_SIG_WIDGET_ACTION")
    TRC_MSG(MSF_DLG_0CAF6E28C5A8CCFE38A1FCF45B218F54, "DLG: Received MSF_SIG_WIDGET_USEREVT")
    TRC_MSG(MSF_DLG_C56002BEFCF0F898D6CCDB8A49D9180E, "DLG: Received MSF_SIG_TIMER_EXPIRED")
    TRC_MSG(MSF_DLG_034023B356F0D6D7078865928A3760E0, "DLG: Received MSF_SIG_PIPE_NOTIFY")
    TRC_MSG(MSF_SAS_B55FC5D106FA99EEF0F20A8DB7FDBD9D, "MSF_SAS: Received MSF_SIG_PIPE_NOTIFY")
    TRC_MSG(MSF_SAS_F672EBA75978EC511242615FB9464C81, "MSF_SAS: Received MSF_SIG_WIDGET_ACTION")
    TRC_MSG(MSF_ERROR_REG_FILE_CORRUPT, "MSF_ERROR: HDI_ERR_SYSTEM_REG_FILE_CORRUPT")
    TRC_MSG(MSF_WAP_READY_TO_WPS_IND, "WAP sending Ready Indication to WPS")
    TRC_MSG(MSF_WAP_TASK_SLEEP, "WAP Sleep called:Duration =%d")
    TRC_MSG(MSF_WAP_INIT_FRAMEWORK, "WAP initialising Framework")
    TRC_MSG(MSF_WAP_INIT_CALLED, "WAP Init called:WAP Status =%d, WAP Action= %d")
    TRC_MSG(MSF_WAP_DEINIT_CALLED, "WAP Deinit called")
    TRC_MSG(MSF_WAP_RESET_CALLED, "WAP Reset called")
    TRC_MSG(MSF_WAP_MSF_START_CALLED, "MSF_Start called")
    TRC_MSG(MSF_WAP_START_FRAMEWORK_CALLED_MMI_EQ_POWER_ON, "wap_start_framework called :MSG_ID_MMI_EQ_POWER_ON_IND")
    TRC_MSG(MSF_WAP_START_FRAMEWORK_CALLED_MMI_READY_NOTIFY_REQ, "wap_start_framework called :MSG_ID_MMI_READY_NOTIFY_REQ")    
    TRC_MSG(MSF_WAP_START_FRAMEWORK_CALLED_SIM_INFO_NOTIFY_IND, "wap_start_framework called :MSG_WAP_SIM_INFO_NOTIFY_IND")    
    TRC_MSG(MSF_WAP_MSF_START_ON_WAP_RESET_COMPLETE, "MSf_Start called :wap_status == WAP_RESET_COMPLET")    
    TRC_MSG(MSF_WAP_RESET_CALLED_ON_WAP_ACTION_FMT_FORMAT, "wap_reset called :wap_action = WAP_ACTION_FMT_FORMAT")    
    TRC_MSG(MSF_WAP_RESET_CALLED_BEFORE_RESTORE_FACTORY_SETTING, "wap_reset called :wap_action = WAP_ACTION_RESET_BEFORE_RESTORE_FACTORY_SETTING")    
    TRC_MSG(MSF_WAP_RESET_CALLED_ON_INTERNAL_ERROR_IND, "wap_reset called : MSG_ID_WAP_INTERNAL_ERROR_IND")    
    TRC_MSG(MSF_WAP_RESET_CALLED_ON_WAP_NOT_INIT, "wap_reset called : wap_status == WAP_RUNNING && !MSF_wapIsInit()")    
    TRC_MSG(MSF_WAP_CALLING_MSF_FSM, "WAP :wap_status != WAP_RESET_COMPLETE")    
    TRC_MSG(MSF_WAP_NO_LARGE_ENOUGH_CHUNK, "WAP :No Chunk found for asked size") 
    TRC_MSG(MSF_WAP_REMAINING_MEMORY, "wapadp_mem_internal_malloc called: remaining size : sz - nb =%d")
    TRC_MSG(MSF_WAP_ADP_ALLOC_MEMORY, "wapadp_alloc_mem[poolId]: =%d")
    TRC_MSG(MSF_WAP_ADP_ALLOC_REMAINING_MEMORY, "wapadp_alloc_mem[poolId]:in wapadp_mem_free : =%d")
    TRC_MSG(MSF_WAP_MEM_BALANCE_ASM, "Memory Balance: =%d")
    TRC_MSG(MSF_WAP_MEM_BALANCE, "Memory Balance :No ASM: =%d")
    TRC_MSG(MSF_MISC_MEM_ALLOC, "WAP Mem Balance less than 15k")
    TRC_MSG(MSF_MISC_MEM_ALLOC_SIZE, "ModId = %d, asked for size = %d")
    TRC_MSG(MSF_MISC_NO_MEM_ASM, "ASM : No Memory Allotted")
    TRC_MSG(MSF_MISC_NO_MEM, "No Memory Allotted")
    TRC_MSG(MSF_MEM_LIST_SIZE, "ModId = %d, adding to mem_blocks : size = %d")
    TRC_MSG(MSF_MEM_MEM_ALLOC, "ModId = %d, asking for: size = %d")
    TRC_MSG(MSF_MEM_MEM_FREE, "ModId = %d, freeing memory of size = %d")
    TRC_MSG(MSF_MEM_ALLOC_BYTES_MODULE, "mem_allocated_bytes[%d] = %d")
    TRC_MSG(MSF_MEM_ALLOC_FAIL, "MSF_MEM: malloc fail, mod:%s, size:%d")
    TRC_MSG(MSF_CORE_MSF_CONVERT, "msf_convert Signal received = %d")
    TRC_MSG(MSF_CORE_MSF_DESTRUCT, "msf_destruct Signal received = %d")
    TRC_MSG(MSF_CORE_MODULE_CREATED, "msf_module_is_created ,module = %d")
    TRC_MSG(MSF_CORE_MODULE_ACTIVE, "msf_module_is_active ,module = %d")
    TRC_MSG(MSF_CORE_MODULE_TERMINATED, "msf_module_is_terminated ,module = %d")
    TRC_MSG(MSF_CORE_MODULE_START, "Module = %d, is starting module = %d")
    TRC_MSG(MSF_CORE_MODULE_TERMINATE, "Module = %d, is terminating module = %d")
    TRC_MSG(MSF_HDI_PIPE_CREATE, "In HDIa_pipeCreate, Module = %d, is creating pipe with name = %s")
    TRC_MSG(MSF_HDI_PIPE_OPEN, "In HDIa_pipeOpen, Module = %d, is opening pipe with name = %s")
    TRC_MSG(MSF_HDI_PIPE_DELETE, "In HDIa_pipeDelete, Pipe with name = %s to be deleted")
    TRC_MSG(MSF_HDI_PIPE_INVALID_HANDLE, "Pipe with invalid handle = %d")
    TRC_MSG(MSF_MSM_INT_CREATE_TASK, "In MSMa_createTask for Module = %d")
    TRC_MSG(MSF_MSM_INT_MODULE_STATUS, "In MSMa_moduleStatus for Module = %d with status to be set as = %d")
    TRC_MSG(MSF_MSM_INT_TERMINATE, "In MSMa_terminated")
    TRC_MSG(MSF_MSM_INIT_DONE, "In msm_init_done")
    TRC_MSG(MSF_MSM_START_STATIC_MODULE, "In msm_start_static_modules")
    TRC_MSG(MSF_MSM_MSM_TERMINATE, "In msm_terminate")
    TRC_MSG(MSF_MSM_ADD_USER, "In msm_add_user, Module = %d, User Module = %d")
    TRC_MSG(MSF_PTXT_427A0CBDE2FADE5651BA4BBAB1835421, "PARSER: %s. *******************")
    TRC_MSG(MSF_PTXT_A733EDE80F7E542E64B07E753CA6DC1D, "PARSER: %s. Error location unknown.")
    TRC_MSG(MSF_PTXT_1CF611F88EC2D71BFF583D05F4C6652A, "PARSER: %s. No data available.")
    TRC_MSG(MSF_PTXT_D6F8F649D67DDDB589A89AF9207653E1, "PARSER: %s.")
    TRC_MSG(MSF_PTXT_E15F0423B70BEBEB66CFED958EC01FA2, "PARSER: %s")
    TRC_MSG(MSF_PTXT_ED854EC066B1428889A139AE94F82434, "PARSER: %s^")
    TRC_MSG(MSF_SOCKET_F207B8B8D2DFADD2F3E2E42FA5DF8E67, "HDIa_socketDiscBearer: networkAccountID=%d")
    TRC_MSG(MSF_SOCKET_BAE339718EDE8D301D6CBFCFB71042A9, "HDI_notifySmsPush: sms_push_wait_recv=%d")
    TRC_MSG(MSF_SOCKET_D5362F4ABEB897D83BE0AFF5C0336739, "HDIa_socketCreate: modId=%d socketType=%d networkAccountID=%d")
    TRC_MSG(MSF_SOCKET_72CBB8CE90677A6C630855C2FEE07B87, "HDIa_socketClose: socketId=%d")
    TRC_MSG(MSF_SOCKET_93364A6F683180E949C8997C75BA6573, "HDIa_socketAccept: socketId=%d")
    TRC_MSG(MSF_SOCKET_6F8DD9A7E161E1BB4F87A3E0A4750D32, "HDIa_socketBind: socketId=%d %d.%d.%d.%d:%d")
    TRC_MSG(MSF_SOCKET_B01338D83F98AF4CB797F71C8F27DA16, "HDIa_socketConnect: socketId=%d %d.%d.%d.%d:%d")
    TRC_MSG(MSF_SOCKET_38DBAF5207919B68A4638A14BB5CDED9, "HDIa_socketListen: socketId=%d")
    TRC_MSG(MSF_SOCKET_F51AFF7470E4E8FA43EA9BA637587AD7, "HDIa_socketRecv: socketId=%d %d bytes")
    TRC_MSG(MSF_SOCKET_8FFC9BAED6C26A654EA462EEEEA4FB41, "HDIa_socketRecv: socketId=%d error_code=%d")
    TRC_MSG(MSF_SOCKET_72C5162E9887C1B13E48E931F56C9E6F, "HDIa_socketRecvFrom: socketId=%d %d bytes %d.%d.%d.%d:%d")
    TRC_MSG(MSF_SOCKET_D7DA0D1F6197F8DB79DF364EDFC13141, "HDIa_socketRecvFrom: socketId=%d %d bytes")
    TRC_MSG(MSF_SOCKET_B0E92228B087B41E27D0B0E573CA808A, "HDIa_socketRecvFrom: socketId=%d error_code=%d")
    TRC_MSG(MSF_SOCKET_0B3EB9AD18D97C9B790887EF993C06EC, "HDIa_socketSend: socketId=%d %d bytes")
    TRC_MSG(MSF_SOCKET_7915A2634F7045B9C003717013D5E9C4, "HDIa_socketSend: socketId=%d error_code=%d")
    TRC_MSG(MSF_SOCKET_E8C7ABAB77E180F7D5A1A86E06A83147, "HDIa_socketSendTo: socketId=%d %d bytes %d.%d.%d.%d:%d")
    TRC_MSG(MSF_SOCKET_B96C82FA48B566A588EF3412E536F8D6, "HDIa_socketSendTo: socketId=%d %d bytes")
    TRC_MSG(MSF_SOCKET_15B26F6A3E71FB7A72308DDF2374B41F, "HDIa_socketSendTo: socketId=%d error_code=%d")
    TRC_MSG(MSF_SOCKET_D691F225DDEC4F8F583571B15C9ACAD0, "HDIa_socketSelect: socketId=%d type=%d")
    TRC_MSG(MSF_SOCKET_07EA1490A7B32FF9FD6E5365FB0FD361, "HDI_socketGetHostByName: modId=%d requestId=%d domainName=%s nwtacc_id=%d")
    TRC_MSG(MSF_SOCKET_51E35F7CD8ECC43F8B3BEED3A09ABEC4, "HDIa_socketCloseAll: modId=%d")
#endif /*OBIGO_Q05A*/
    TRC_MSG(MMSADP_4177ABC3A7E108EC495405EB2D6BB478, "(mmsadp.c) mms_owner_number_indication_callback(%d, %s)")
    TRC_MSG(MMA_CREATE_DELETE_TASK_IND_FUNCTION, "(mma_create.c): mma_create_delete_task(req %d, env state %d)")
    TRC_MSG(MMA_CREATE_DELETE_TASK_HDLR_FUNCTION, "(mma_create.c): Duplicate mma_create_delete_task_hdlr(req %d, del state %d, env state %d)")
    TRC_MSG(MMA_CREATE_HANDLE_SIG_GET_MSG_INFO_REPLY, "(mma_create.c) MMS_SIG_GET_MSG_INFO_REPLY: req = %d, msg = %d, no = %d")
    TRC_MSG(MMA_CREATE_HANDLE_SIG_CREATE_MSG_REPLY, "(mma_create.c) MMS_SIG_CREATE_MSG_REPLY: req = %d, msg = %d, result = %d")
    TRC_MSG(MMA_CREATE_HANDLE_SIG_MSG_DONE_REPLY, "(mma_create.c) MMS_SIG_MSG_DONE_REPLY: req = %d, msg = %d, result = %d")
    TRC_MSG(MMA_CREATE_HANDLE_SIG_FILE_NOTIFY, "(mma_create.c) MSF_SIG_FILE_NOTIFY %d - %d")
    TRC_MSG(MMA_CREATE_MMS_ENCODE_SUBJECT_CHARSET_ASCII_FAIL, "(%s) (%d) Subject conversion failed!")
    TRC_MSG(MMA_CREATE_MMS_ENCODE_SUBJECT_CHARSET_UNSUPPORTED, "(%s) (%d) unsupported subject charset")
    TRC_MSG(MMA_CREATE_FSM_FUNCTION_ENTER, "(mma_create.c) State:%d - SubS:%d: req = %d, msg = %d, input = %d")
    TRC_MSG(MMA_CREATE_FSM_ERROR_CHANGE_STATE_FINISHING, "(mma_create.c) state -> MMA_CREATE_STATE_FINISHING")
    TRC_MSG(MMA_CREATE_GET_MESSAGE_HEADER_ERROR, "(mma_create.c) MMSlib_getMessageHeader() %d\n")
	TRC_MSG(MMA_CREATE_SET_MESSAGE_HEADER_ERROR, "(mma_create.c) MMSlib_setMessageHeader() %d\n")
    TRC_MSG(MMA_CREATE_GET_MESSAGE_BODY_HEADER_ERROR, "(mma_create.c) MMSlib_getBodyHeader() %d\n")
    TRC_MSG(MMA_CREATE_GET_MESSAGE_OPEN_ERROR, "(mma_create.c) MMSlib_messageOpen() %d")
    TRC_MSG(MMA_CREATE_GET_MESSAGE_TRANSACTION_ERROR, "(mma_create.c) MMSlib_transactionOpen() %d")
    TRC_MSG(MMA_CREATE_READ_FILE_OPEN_ERROR, "(mma_create.c) info->r_handle %d < 0")
    TRC_MSG(MMA_CREATE_WRITE_FILE_OPEN_ERROR, "(mma_create.c) info->w_handle %d < 0")
    TRC_MSG(MMA_CREATE_FILE_SEEK_FS_RESULT, "(mma_create.c %d) MSF_FILE_SEEK() %d < 0")
    TRC_MSG(MMA_CREATE_MMS_BODY_COPYING_READ_ERROR, "(mma_create.c): MMA_CREATE_STATE_MMS_BODY_COPYING read error %d")
    TRC_MSG(MMA_CREATE_MMS_BODY_COPYING_WRITE_ERROR, "(mma_create.c) MMA_CREATE_STATE_MMS_BODY_COPYING write error %d")
    TRC_MSG(MMA_CREATE_MMS_SMIL_CREATING_ERROR, "(mma_create.c) mma_create_mms_create_smil %d")
    TRC_MSG(MMA_CREATE_MMS_SMIL_CREATING_BODY_PARAM_ERROR, "(mma_create.c) mma_create_body_params failed")
    TRC_MSG(MMA_CREATE_MMS_SMIL_CREATING_BODY_PARAM_TRANSACTION_ERROR, "(mma_create.c) MMSlib_transactionOpen %d")
    TRC_MSG(MMA_CREATE_SET_MSG_BODY_ERROR, "(mma_create.c) MMSlib_setMessageBody %d")
    TRC_MSG(MMA_CREATE_MSG_BODY_TRANSACTION_CLOSE_ERROR, "(mma_create.c) MMSlib_transactionClose %d")
    TRC_MSG(MMA_CREATE_BODY_OBJECT_FILE_OPEN_ERROR, "(mma_create.c) HDIa_fileOpenExt %d")
    TRC_MSG(MMA_CREATE_BODY_OBJECT_FILE_SEEK_ERROR, "(mma_create.c) MSF_FILE_SEEK %d")
    TRC_MSG(MMA_CREATE_MO_BUFFER_FILE_READ_ERROR, "(mma_create.c) MSF_FILE_READ %d")
    TRC_MSG(MMA_CREATE_MMS_INFO_CREATING_MSG_CLOSE_ERROR, "(mma_create.c) MMSlib_messageClose %d")
    TRC_MSG(MMA_CREATE_ENV_STATE_NOT_ACTIVE, "(mma_create.c) env state %d")
    TRC_MSG(MMA_CREATE_SIG_NEW_MMS_CREATE_RSP_DETAIL, "MMA_INT_SIG_TYPE_MSG_CREATE_NEW_MMS_RSP(msg = %d, result = %d)")
    TRC_MSG(MMA_CREATE_MSG_ENTER_USB_MODE, "(mma_create.c): MMA_INT_SIG_TYPE_MSG_ENTER_USB_REQ %d")
    TRC_MSG(MMA_CREATE_MSG_ENTER_TERMINATE_MODE, "(mma_create.c): MMA_INT_SIG_TYPE_MSG_TERMINATE_IND %d")
    TRC_MSG(MMA_CREATE_IS_BUSY_ON_STORAGE, "(mma_create.c): mma_create_is_busy_on_storage():%d")
    TRC_MSG(MMA_CREATE_CARD_PLUG_OUT_CALLBACK, "(mma_create.c): mma_create_memory_card_plug_out_callback()")
    TRC_MSG(MMA_CREATE_CHANGE_STATE_TO_CARD_PLUG_OUT, "(mma_create.c): MMA_CREATE_CHANGE_STATE_TO_CARD_PLUG_OUT")
    TRC_MSG(MMA_CREATE_FAILED_CARD_PLUG_OUT, "(mma_create.c): MMA_CREATE_FAILED_CARD_PLUG_OUT")
    TRC_MSG(MMA_ENV_SEND_INT_SIGNAL_DETAIL, "SndSig,%d,%d,%d,%d")
    TRC_MSG(MMA_ENV_MMA_EXCEPTION_HANDLER_MSG, "%s(%d): Insufficient memory!")
    TRC_MSG(MMA_ENV_GET_SIG_MODULE_STATUS, "MMA: received signal MSF_SIG_MODULE_STATUS (%d, %d)")
    TRC_MSG(MMA_ENV_GET_SIG_FILE_NOTIFY, "MMA receive MSF_SIG_FILE_NOTIFY (fh %d, event %d)")
    TRC_MSG(MMA_ENV_GET_SIG_UNHANDLED_SIGNAL, "%s(%d): Received unhandled signal %d from MSM")
    TRC_MSG(MMA_ENV_SIG_GET_MSG_INFO_REPLY_NOT_COLLECTED_BY_PARSE, "MMS_SIG_GET_MSG_INFO_REPLY msg %d not collected by parse module")
    TRC_MSG(MMA_ENV_SIG_GET_MSG_INFO_REPLY_NOT_COLLECTED_BY_CREATE, "MMS_SIG_GET_MSG_INFO_REPLY msg %d not collected by create module")
    TRC_MSG(MMA_ENV_GET_NEXT_MSG_INFO_REQ, "Next MMSif_getMessageInfo(): msg %d by %d")
    TRC_MSG(MMA_ENV_SIG_DELETE_MSG_REPLY_NOT_COLLECTED_BY_MSGMGR, "MMS_SIG_DELETE_MSG_REPLY msg %d not collected by Msg_mgr module")
	TRC_MSG(MMA_ENV_SIG_DELETE_MSG_REPLY_NOT_COLLECTED_BY_SENDRECV, "MMS_SIG_DELETE_MSG_REPLY msg %d not collected by SEND_RECV module\n")
    TRC_MSG(MMA_ENV_SIG_GET_NEXT_DELETE_MSG_REQ, "Next MMSif_deleteMessage(): msg %d by %d")
    TRC_MSG(MMA_ENV_SIG_MOV_MSG_REPLY_FAIL, "Fail to mov msg,%d")
    TRC_MSG(MMA_ENV_KILL_MMAC_TERMINATED, "MMA terminated By MMAc_kill.")
    TRC_MSG(MMA_ENV_START_MMAC_START, "MMA_start(void)")
    TRC_MSG(MMA_INTERFACE_SEND_NOTIFY_EVENT_IND, "MMA: notify event ind (event %d, app_id %d)")
    TRC_MSG(MMA_MSGMGR_CREATE_IMG_ID_FILE_SUFFIX, "(%s) (%d) createListItemImg suffix state (%d)")
    TRC_MSG(MMA_MSGMGR_EXEC_PENDING_REQ_TYPE_COUNT, "MmaMsgMgrPR:%d,%d")
    TRC_MSG(MMA_MSGMGR_SET_STATE_TO_NEW_STATE, "Mma msgmgr state is changed from %d to %d in line %d")
    TRC_MSG(MMA_MSGMGR_NEED_UPDATE_CHECKSUM_MSGID_RETURN_VALUE, "Create the msg %d's checksum file,ret:%d.")
    TRC_MSG(MMA_MSGMGR_DELETE_MSGID_NOT_AVAILABLE_DELETE_DONE, "MsgIdNotAvaliable%%,DeleteDone")
    TRC_MSG(MMA_MSGMGR_UM_GET_MSG_NUM_REQ_MMA_NOT_READY, "MMA is not ready to get um msg num")
    TRC_MSG(MMA_MSGMGR_UM_GET_LIST_REQ_MMA_NOT_READY, "MMA is not ready to get um list")
    TRC_MSG(MMA_MSGMGR_UM_GET_LIST_RECEIVE_DATE_NULL, "(mma_msgmgr.c): No receive date for MsgId%d UMGetList\n")
    TRC_MSG(MMA_MSGMGR_UM_GET_MSG_INFO_REQ_MMA_NOT_READY, "(mma_msgmgr.c): MMA is not ready to get um msg info")
    TRC_MSG(MMA_MSGMGR_UM_GET_MSG_INFO_REQ_NO_DATE_4MSGID, "(mma_msgmgr.c): No receive data for MsgId%d UMGetInfo")
    TRC_MSG(MMA_MSGMGR_GET_MSG_INFO_REQ_MMA_NOT_READY, "(mma_msgmgr.c): MMA is not ready to get msg info")
    TRC_MSG(MMA_MSGMGR_SAVE_REQ_MMA_NOT_READY, "(mma_msgmgr.c): MMA is not ready to save msg")
    TRC_MSG(MMA_MSGMGR_SAVE_REQ_USB_MODE, "(mma_msgmgr.c): MMA can not save mms message in USB mode")
	TRC_MSG(MMA_MSGMGR_DELETE_REQ_MMA_NOT_READY, "(mma_msgmgr.c): MMA is not ready to delete msg")
    TRC_MSG(MMA_MSGMGR_DELETE_REQ_USB_MODE, "(mma_msgmgr.c): MMA can not delete mms message in USB mode")
    TRC_MSG(MMA_MSGMGR_UM_DELETE_FOLDER_REQ_MMA_NOT_READY, "(mma_msgmgr.c): MMA is not ready to delete folder")
    TRC_MSG(MMA_MSGMGR_UM_DELETE_FOLDER_REQ_MSG_DETAIL, "(mma_msgmgr.c): Delete %d folder and msg_num is %d, msg_id_in_sending: %d,msg_id_in_receiving:%d")
    TRC_MSG(MMA_MSGMGR_DELETE_IND_FAIL_TO_DELETE, "(mma_msgmgr.c): fail to delete msg %d. flag:%d")
    TRC_MSG(MMA_MSGMGR_DELTE_IND_FOR_MSG_ID, "(mma_msgmgr.c): RecvMmsNotifyDelInd %d")
    TRC_MSG(MMA_MSGMGR_DELTE_IND_ERROR_FOR_MSG_ID, "(mma_msgmgr.c): RecvMmsNotifyDelInd.Err %d")
    TRC_MSG(MMA_MSGMGR_MMS_MOVE_IND_RESULT_FAIL, "(mma_msgmgr.c): fail to move msg %d. flag:%d")
    TRC_MSG(MMA_MSGMGR_HANDLE_READ_REPORT_IND, "(mma_msgmgr.c): RecvReadReportFromMMSService,%d,%d")
    TRC_MSG(MMA_MSGMGR_HANDLE_DELIVERY_REPORT_IND, "(mma_msgmgr.c): RecvDeliveryReportFromMMSService,%d,%d")
    TRC_MSG(MMA_MSGMGR_HANDLE_SIG_NOTIFICATION, "(mma_msgmgr.c): RecvNotificationFromMMSService,%d,%d,%d")
    TRC_MSG(MMA_MSGMGR_PROCESS_INT_SIGNAL, "(mma_msgmgr.c): Recv sig %d")
	TRC_MSG(MMA_MSGMGR_PROCESS_MSG_OPER_SIGNAL, "(mma_msgmgr.c): Recv sig flag %d")
    TRC_MSG(MMA_MSGMGR_SIGNAL_CREATE_NEW_MMS_REQ, "(mma_msgmgr.c): RecvCreateNewReqFromMMACreate,%d")
    TRC_MSG(MMA_MSGMGR_READ_DATA_FROM_CHKSUM_FILE_CORRUPTED, "(mma_msgmgr.c): %s(%d): mms message %d is corrupted ")
    TRC_MSG(MMA_MSGMGR_READ_DATA_FROM_CHKSUM_FILE_OPEN_ERROR, "(mma_msgmgr.c): %s(%d): file err %d ")
	TRC_MSG(MMA_MSGMGR_CREATE_MMA_IN_TERMINATE_MODE, "(mma_msgmgr.c): MMA is terminating. MMA can not create MMS")
	TRC_MSG(MMA_MSGMGR_CREATE_MMA_NOT_READY, "MMA is not ready to create MMS ")
    TRC_MSG(MMA_MSGMGR_CREATE_MMA_IN_USB_MODE, "In USB mode, MMA can not create MMS ")
	TRC_MSG(MMA_MSGMGR_GET_TOTAL_MSG_NUM, "Reach max num. of mms message ")
	TRC_MSG(MMA_MSGMGR_GET_UNREAD_MSG_LIST_REQ_HDLR, "MMA MSGMGR: get unread msg list ")
	TRC_MSG(MMA_MSGMGR_GET_UNREAD_MSG_LIST_MMA_NOT_READY, "MMA is not ready to get unread msg list ")
	TRC_MSG(MMA_MSGMGR_GET_RECENT_EVT_LIST_REQ_HDLR, "MMA MSGMGR: get recent event ")
	TRC_MSG(MMA_MSGMGR_GET_RECENT_EVT_LIST_REQ_MMA_NOT_READY, "MMA is not ready to get recent event list ")
	TRC_MSG(MMA_MSGMGR_DELETE_RECENT_EVT_REQ_HDLR, "MMA MSGMGR: delete recent event ")
	TRC_MSG(MMA_MSGMGR_DELETE_RECENT_EVT_REQ_MMA_NOT_READY, "MMA is not ready to delete recent event ")
    TRC_MSG(MMA_MSGMGR_PARSER_GET_MSG_INFO_REQ_HDLR, "mma_msgmgr_parser_get_msg_info_hdlr(): msg %d, result %d ")
    TRC_MSG(MMA_MSGMGR_MMS_DELETE_IND_NEW_MMS_DETAIL, "MMA MSGMGR new msg type %d, state %d ") 
    TRC_MSG(MMA_MSGMGR_CREATE_MAX_MMS_NUM_REACHED, "MMA max mms num reached. MMA can not create MMS ")
	TRC_MSG(MMA_MSGMGR_CREATE_NEW_MMS_MSG_TYPE, "MMA MSGMGR new msg type %d, state %d ")
	TRC_MSG(MMA_MSGMGR_CREATE_NEW_MMS_MSG_TYPE2, "MMA MSGMGR new msg type %d, state %d ")
	TRC_MSG(MMA_MSGMGR_CREATE_NEW_MMS_RSP, "MMA MSGMGR CREATE_RSP new msg type %d, state %d ")
	TRC_MSG(MMA_MSGMGR_MMS_MOVE_IND_RSP_DETAIL, "MMA MSGMGR recv move rsp %d. msg_id %d, flag %d ")
	TRC_MSG(MMA_MSGMGR_CREATE_NEW_MMS_RSP_ERROR, "MMA MSGMGR CREATE_RSP_ERROR ")
    TRC_MSG(MMA_MSGMGR_GET_UM_MSG_INFO_REQ, "MMA get the um msg info req\n ")
    TRC_MSG(MMA_MSGMGR_RECV_MOVE_MSG_RSP, "MMA MSGMGR recv move rsp with result %d. msg_id %d")
    TRC_MSG(MMA_MSGMGR_CANNOT_MOVE_ENCODED_MSG_TO_INBOX, "MMA can't move encoded msg %d to inbox, result %d")
    TRC_MSG(MMA_MSGMGR_GET_MSG_LIST_REQ_MMA_NOT_ACTIVE, "MMA is not ready to get msg info\n ")
    TRC_MSG(MMA_MSGMGR_MSG_STATUS_OF_FOLDER, "Msg status of folder:%d,%d,%d,%d,%d,%d,%d,%d")
	TRC_MSG(MMA_MSGMGR_NEED_SYNC_MSGMGR_FLDR, "(mma_msgmgr.c):Need to sync between msgmgr and folder manager")
	TRC_MSG(MMA_MSGMGR_UPDATE_SUB_ADDR,"(mma_msgmgr.c): update sub addr for msg_id: %d")
	TRC_MSG(MMA_MSGMGR_PARSE_MODE_RETURN_MSG_TYPE,"(mma_msgmgr.c): return msg_type as: %d")
	TRC_MSG(MMA_MSGMGR_SET_MSG_SIM_ID_FUNC,"(mma_msgmgr.c): mma_msgmgr_set_msg_sim_id msg_id:%d, sim_id:%d\n")
	TRC_MSG(MMA_MSGMGR_UMMS_MSG_NUM_STATUS_OF_FOLDER,"(mma_msgmgr.c): UMMS Msg status of folder:%d,%d,%d,%d,%d,%d,%d")
    TRC_MSG(MMA_MSGMGR_UMMS_GET_MSG_NUM_REQ_MMA_NOT_READY,"(mma_msgmgr.c): MMA is not ready to get umms msg num\n")
	TRC_MSG(MMA_MSGMGR_UPDATE_POSTCARD_SUBADDR,"POSTCARD:The chksum file is corrupted: %x\n")
    TRC_MSG(MMA_MSGMGR_RESET_PARSING_STATUS,"(mma_msgmgr.c): Reset parsing status")
    TRC_MSG(MMA_MSGMGR_SET_PARSING_STATUS,"(mma_msgmgr.c): Set parsing status")
    TRC_MSG(MMA_MSGMGR_PARSING_IS_GOING_ON,"(mma_msgmgr.c): Check parsing:TRUE")
    TRC_MSG(MMA_MSGMGR_ENCODING_IS_GOING_ON,"(mma_msgmgr.c): Check Encoding:TRUE")
    TRC_MSG(MMA_MSGMGR_NOTIFICATION_MSG_ID_NOT_FOUND,"(mma_msgmgr.c): Notification entry %d not found in mms list\n")
    TRC_MSG(MMA_MSGMGR_HANDLE_SIG_NOTIFICATION_CARD_NOT_PRESENT, "(mma_msgmgr.c): Recv sig Notification for card but card not present")
    TRC_MSG(MMA_MSGMGR_UM_GET_CONV_LIST_RSP, "(mma_msgmgr.c): Result of Conv traverse function is: %d\n")
    TRC_MSG(MMA_MSGMGR_MSG_ATTRIBUTE_AND_THUMBNAIL_NOT_READY,"MMA is not ready to give msg attribute and thumbnail")
    TRC_MSG(MMA_MSGMGR_MSG_ATTRIBUTE_AND_THUMBNAIL_REQ_USB_MODE, "(mma_msgmgr.c): MMA can not give msg attribute and thumbnail in USB mode")
    TRC_MSG(MMA_MSGMGR_ATTRIBUTE_AND_THUMBNAIL_REQ_IN_TERMINATE_MODE, "(mma_msgmgr.c): MMA is terminating. MMA can not give msg attribute and thumbnail")
    TRC_MSG(MMA_DRMSRV_PARSE_NOT_ENOUGH_MEMORY,"(mma_drmsrv.c): Due to parse not enough memory")
    TRC_MSG(MMA_PARSE_DELETE_TASK_DETAIL, "(mma_parse.c): mma_parse_delete_task(req %d, del state %d, env state %d)")
    TRC_MSG(MMA_PARSE_DUPLICATE_DELETE_TASK, "(mma_parse.c): Duplicate mma_parse_delete_task_hdlr(req %d, del state %d, env state %d)")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_MODULE_STATUS, "(mma_parse.c): MSF_SIG_MODULE_STATUS mode %d, status %d")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_GET_MSG_INFO_REPLY, "(mma_parse.c) MMS_SIG_GET_MSG_INFO_REPLY: req = %d, msg = %d, no = %d")
    TRC_MSG(MMA_PARSE_SIG_GET_MSG_INFO_REPLY_FAILED, "(mma_parse.c): MMS_SIG_GET_MSG_INFO_REPLY failed")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_DELIVERY_REPORT, "(mma_parse.c) MMS_SIG_DELIVERY_REPORT: req = %d, msg = %d")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_READ_REPORT, "(mma_parse.c) MMS_SIG_READ_REPORT_IND: req = %d, msg = %d")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_OPEN_SMIL_RSP, "(mma_parse.c) SLS_OPEN_SMIL_RSP: req = %d, msg = %d, result = %d")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_CLOSE_SMIL_RSP, "(mma_parse.c) SLS_CLOSE_SMIL_RSP: req = %d, msg = %d, result = %d")
    TRC_MSG(MMA_PARSE_HANDLE_RSP_SIG_SLS_GET_SLIDE_INFO_RSP, "(mma_parse.c) SLS_GET_SLIDE_INFO_RSP: req = %d, msg = %d, result = %d")
    TRC_MSG(MMA_PARSE_SEND_PARSER_GET_BASIC_MSG_INFO_REPLY_RSP, "(mma_parse.c) mma_parse_send_int_rsp: ret %d, msg %d")
    TRC_MSG(MMA_PARSE_SEND_DIRECT_RSP, "(mma_parse.c): mma_parse_send_reject_rsp: req = %d, ret=%d")
    TRC_MSG(MMA_PARSE_FSM_DETAIL, "(mma_parse.c) State:%d: req = %d, msg = %d, input = %d")
    TRC_MSG(MMA_PARSE_CHANGE_STATE_TO_FINISHING, "(mma_parse.c) state -> MMA_PARSE_STATE_FINISHING")
    TRC_MSG(MMA_PARSE_MULTIPART_TYPE_IS_UNSUPPORTED, "(mma_parse.c) multipart_type == MMA_UNSUPPORTED")
    TRC_MSG(MMA_PARSE_STATE_XML_CREATING_RESULT_VALUE, "(mma_parse.c) MMA_PARSE_STATE_XML_CREATING %d")
    TRC_MSG(MMA_PARSE_STATE_XML_CREATING_RESULT_FAIL, "(mma_parse.c) MMA_PARSE_STATE_XML_CREATING fail")
    TRC_MSG(MMA_PARSE_FSM_HDLR_STATE_NOT_ACTIVE, "(mma_parse.c) env state %d")
    TRC_MSG(MMA_PARSE_GET_CONTENT_REQ_HDLR_DETAIL, "mms_mma_get_content_req_hdlr(%d, %d, %d, %d)\n")
    TRC_MSG(MMA_PARSE_GET_TASK_BY_APP_NOT_NULL, "(mma_parse.c): Duplicate request by AP %d.")
    TRC_MSG(MMA_PARSE_NOT_PARSE_TASK, "(mma_parse.c): Request %d queued")
    TRC_MSG(MMA_PARSE_IS_BUSY_ON_STORAGE, "(mma_parse.c): mma_parse_is_busy_on_storage():%d")
	/*TRC for mms CONTENT INFO*/
	/*header*/
    TRC_MSG(MMA_MMS_STRUCT_MMS_INFO_START, "(mma_msg_struct.c)mms_info starts\n")
    TRC_MSG(MMA_MMS_STRUCT_MMS_INFO_END, "(mma_msg_struct.c)mms_info ends\n")
    TRC_MSG(MMA_MMS_STRUCT_MMS_HEADER_INFO, "(mma_msg_struct.c)mms_header_info\n")
    TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_INFO, "(mma_msg_struct.c)mms_body_info")
	TRC_MSG(MMA_MMS_STRUCT_MMS_ADDRESS, "(mma_msg_struct.c)address string = %s, address_type = %d, address_group_type = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_SUBJECT, "(mma_msg_struct.c)subject: %s\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_PRESENTATION, "(mma_msg_struct.c)presentation: %s\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_APP_ID, "(mma_msg_struct.c)app_id: %s\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_REPLY_APP_ID, "(mma_msg_struct.c)reply_app_id: %s\n")
    TRC_MSG(MMA_MMS_STRUCT_MMS_RR_DR_DT_VBLTY_VRN_PRT_CLASS, "(mma_msg_struct.c)(read_report = %d, delivery_report = %d, date = %d, visibility = %d, version = %d, priority = %d, message_class = %d)\n")
/*slides*/
	TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_ELEMENT_INFO, "(mma_msg_struct.c)body: slide no = %d, obj no  = %d, imgfit = %d, txtfit = %d, bgcolor = %d, fgcolor = %d, layout = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_IMAGE_OBJ_INFO, "(mma_msg_struct.c)img: id = %d, begin  = %d, end = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_VIDEO_OBJ_INFO, "(mma_msg_struct.c)vid: id = %d, begin  = %d, end = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_TEXT_OBJ_INFO, "(mma_msg_struct.c)txt: id = %d, begin  = %d, end = %d, bgcolor = %d, fgcolor = %d, textsize = %d, textstyle = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_AUDIO_OBJ_INFO, "(mma_msg_struct.c)aud: id = %d, begin  = %d, end = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_REF_OBJ_INFO, "(mma_msg_struct.c)ref: id = %d, begin  = %d, end = %d, bgcolor = %d, fgcolor = %d, textsize = %d, textstyle = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_OBJ_REGION_INFO, "(mma_msg_struct.c)slide_obj_region: x = %d, y  = %d, h = %d, w = %d")
	TRC_MSG(MMA_MMS_STRUCT_SLIDE_INFO, "(mma_msg_struct.c)slide: id = %d, dur = %d\n")

/*Objects*/
	TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_OBJECT_INFO, "(mma_msg_struct.c)obj: id = %d, attach  = %d, vf = %d, drm = %d, size = %d, offset = %d, encoding = %d\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_OBJECT_FILE_NAME, "(mma_msg_struct.c)obj file name : %s\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_OBJECT_FILE_PATH, "(mma_msg_struct.c)obj file path : %s\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_OBJECT_CONTENT_ID, "(mma_msg_struct.c)obj content id : %s\n")
	TRC_MSG(MMA_MMS_STRUCT_MMS_BODY_OBJECT_CONTENT_LOCATION, "(mma_msg_struct.c)obj content location : %s\n")




    TRC_MSG(MMA_PARSE_GET_SIG_PARSER_BASIC_MSG_INFO, "MMA_INT_SIG_TYPE_MSG_PARSER_GET_BASIC_MSG_INFO: req %d, msg %d")
    TRC_MSG(MMA_PARSE_SIG_MSG_PARSE_NEXT_IND, "(mma_parse.c): Queued request %d start")
    TRC_MSG(MMA_PARSE_SIG_MSG_ENTER_USB_REQ_IND, "(mma_parse.c): MMA_INT_SIG_TYPE_MSG_ENTER_USB_REQ %d")
    TRC_MSG(MMA_PARSE_SIG_MSG_TERMINATE_REQ_IND, "(mma_parse.c): MMA_INT_SIG_TYPE_MSG_TERMINATE_IND %d")
    TRC_MSG(MMA_PARSE_SIG_MSG_PARSE_CONTINUE_IND, "MMA_INT_SIG_TYPE_MSG_PARSE_CONTINUE_IND: req_id %d")
	TRC_MSG(MMA_PARSE_FORCE_SLS_DEACTIVATING, "(mma_parse.c) MSF_MODID_SLS STATUS %d :")
	TRC_MSG(MMA_PARSE_HANDLE_RSP_SLIDE_INFO, "(mma_parse.c) MMA_PARSE_HANDLE_RSP_SLIDE_INFO INVALID CONTEXT")
	TRC_MSG(MMA_PARSE_HANDLE_RSP_SLS_OPEN_SMIL, "(mma_parse.c) MMA_PARSE_HANDLE_RSP_SLS_OPEN_SMIL INVALID CONTEXT")
	TRC_MSG(MMA_PARSE_HANDLE_RSP_SLS_CLOSE_SMIL, "(mma_parse.c) MMA_PARSE_HANDLE_RSP_SLS_CLOSE_SMIL INVALID CONTEXT")
    TRC_MSG(MMA_SENDRECV_REMOVE_PENDING_DOWNLOAD_NODES, "MMA SENDRECV Remove pending download nodes")
    TRC_MSG(MMA_SENDRECV_REMOVE_SINGLE_PENDING_SEND_NODE, "MMA SENDRECV Remove single pending send node")
    TRC_MSG(MMA_SENDRECV_REMOVE_SINGLE_PENDING_DOWNLOAD_NODE, "MMA SENDRECV Remove single pending download node")
    TRC_MSG(MMA_SENDRECV_PROCESS_ONE_SEND_REQ, "MMA SENDRECV process one send req")
    TRC_MSG(MMA_SENDRECV_SEND_REQ_HDLR, "MMA SENDRECV send req hdlr")
    TRC_MSG(MMA_SENDRECV_SEND_RSP_HDLR, "Recv send rsp for msg %d. send result:%d, rsp_status:%d\n")
    TRC_MSG(MMA_SENDRECV_SEND_RSP_HDLR1, "MsgIdNotAvaliable%d,DeleteRRDone")
    TRC_MSG(MMA_SENDRECV_CANCEL_SEND_REQ_HDLR, "MMA SENDRECV cancel send req hdlr")
    TRC_MSG(MMA_SENDRECV_CANCEL_SEND_REQ_HDLR1, "MMA SENDRECV In cancel send req hdlr, send percent =100 and connection_status is CBM_ACTIVATED")
    TRC_MSG(MMA_SENDRECV_PROCESS_ONE_DOWNLOAD_REQ, "MMA SENDRECV process one download req")
    TRC_MSG(MMA_SENDRECV_DOWNLOAD_REQ_HDLR, "MMA SENDRECV download req hdlr")
    TRC_MSG(MMA_SENDRECV_DOWNLOAD_RSP_HDLR, "MMA SENDRECV download rsp hdlr msgId=%d, download_result=%d, retrieve_txt=%s")
    TRC_MSG(MMA_SENDRECV_MSGMGR_DOWNLOAD_RSP_HDLR, "MMA SENDRECV msgmgr download rsp hdlr")
    TRC_MSG(MMA_SENDRECV_CANCEL_DOWNLOAD_REQ_HDLR, "MMA SENDRECV cancel download req hdlr")
    TRC_MSG(MMA_SENDRECV_download_ind_res_hdlr, "MMA SENDRECV download ind res hdlr")
    TRC_MSG(MMA_SENDRECV_enter_usb_mode_ind_hdlr, "MMA SENDRECV enter usb mode ind hdlr")
    TRC_MSG(MMA_SENDRECV_MMA_SENDRECV_IS_BUSY, "MMA SENDRECV Is MMA SendReceive busy")
    TRC_MSG(MMA_SENDRECV_MMA_SENDRECV_IS_BUSY1, "MMA SENDRECV is busy to download msg")
    TRC_MSG(MMA_SENDRECV_MMA_SENDRECV_IS_BUSY2, "MMA SENDRECV is busy to send msg")
    TRC_MSG(MMA_SENDRECV_MMA_SENDRECV_IS_BUSY3, "MMA SENDRECV is busy to store NOTIFICATION")
    TRC_MSG(MMA_SENDRECV_MMA_SENDRECV_IS_BUSY4, "MMA SENDRECV is busy to IMMEDIATE DOWNLOADING msg")
    TRC_MSG(MMA_SENDRECV_MMA_SENDRECV_IS_BUSY5, "MMA SENDRECV is busy to delete rr")
    TRC_MSG(MMA_SENDRECV_progress_ind_hdlr, "MMA SENDRECV progress ind hdlr")
    TRC_MSG(MMA_SENDRECV_progress_ind_hdlr1, "MMA SENDRECV RcvPrgIndStop")
    TRC_MSG(MMA_SENDRECV_mms_delete_ind_hdlr, "MMA SENDRECV mms delete ind hdlr %d")
    TRC_MSG(MMA_SENDRECV_mms_delete_ind_hdlr1, "MMA_SENDRECV: Fail to delete rr %d, %d")
    TRC_MSG(MMA_SENDRECV_mms_obj_ind, "MMA SENDRECV mms obj ind")
    TRC_MSG(MMA_SENDRECV_mms_obj_ind1, "MMA SENDRECV send push to MMS of size=%d")
    TRC_MSG(MMA_SENDRECV_mms_obj_ind2, "MMA SENDRECV during mms_obj_ind MMA SENDRECV IS SUSPENDED")
    TRC_MSG(MMA_SENDRECV_mms_obj_ind3, "MMA SENDRECV during mms_obj_ind MMA SENDRECV IS BUSY IN DOWNLOADING")
    TRC_MSG(MMA_SENDRECV_mms_obj_rsp, "MMA SENDRECV mms obj rsp")
    TRC_MSG(MMA_SENDRECV_suspend_mms_service_hdlr, "MMA SENDRECV suspend_mms_service_hdlr")
    TRC_MSG(MMA_SENDRECV_resume_mms_service_hdlr, "MMA SENDRECV resume mms service hdlr")
    TRC_MSG(MMA_SENDRECV_termiante_all_requests, "MMA SENDRECV termiante all requests")
    TRC_MSG(MMA_SENDRECV_termiante_all_requests1, "In mma_sendrecv_termiante_all_requests We already send mms.Don't cancel send req.")
    TRC_MSG(MMA_SENDRECV_termiante_all_requests2, "In mma_sendrecv_termiante_all_requests We already received mms.Don't cancel retrieve req\n")
    TRC_MSG(MMA_SENDRECV_terminate, "MMA SENDRECV terminate")   
    TRC_MSG(MMA_DRMSRV_FSM, "(mma_drmsrv.c) %s: req = %d, msg = %d, input = %d\n")
    TRC_MSG(MMA_DRMSRV_FSM_ERROR, "(mma_drmsrv.c) state -> MMA_DRMSRV_STATE_FINISHING\n")    
    TRC_MSG(MMA_DRMSRV_FSM_STATE_GET_MSG_INFO, "(mma_drmsrv.c) o_msg_suffix %c\n")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_COPY_MMS_CONTENT_READ, "(mma_drmsrv.c %d) MSF_FILE_SEEK() %d < 0\n")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_COPY_MMS_CONTENT_WRITE, "(mma_drmsrv.c %d) MSF_FILE_SEEK() %d < 0\n")
    TRC_MSG(MMA_DRMSRV_STATE_COPY_MMS_CONTENT_READ_ERROR, "(mma_drmsrv.c): MMA_DRMSRV_STATE_COPY_MMS_CONTENT read error %d")
    TRC_MSG(MMA_DRMSRV_STATE_COPY_MMS_CONTENT_WRITE_ERROR, "(mma_drmsrv.c) MMA_DRMSRV_STATE_COPY_MMS_CONTENT write error %d")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_SET_DRM_OBJ_HEADER_FS_READ_ERROR, "(mma_drmsrv.c %d) MSF_FILE_SEEK() %d < 0\n")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_SET_DRM_OBJ_HEADER_FS_WRITE_ERROR, "(mma_drmsrv.c %d) MSF_FILE_SEEK() %d < 0\n")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_SET_DRM_OBJ_HEADER_READ_ERROR, "(mma_drmsrv.c): MMA_DRMSRV_STATE_SET_DRM_OBJ_HEADER read error %d")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_SET_DRM_OBJ_HEADER_WRITE_ERROR, "(mma_drmsrv.c) MMA_DRMSRV_STATE_SET_DRM_OBJ_HEADER write error %d")
    TRC_MSG(MMA_DRMSRV_FSM_STATE_ENCODING_DRM_OBJ, "(mma_drmsrv.c) info->w_handle %d < 0\n")
    TRC_MSG(MMA_DRMSRV_FSM_HDLR, "(mma_drmsrv.c) state %d\n")
    TRC_MSG(MMA_DRMSRV_ENCODE_REQ_HDLR, "DRMSRV receive DRM_ENCODE_REQ: msg_id %d, req_id %d")
    TRC_MSG(MMA_DRMSRV_ENCODE_REQ_HDLR_NO_ACTIVE_TASK, "(mma_drmsrv.c): Request %d for msg %d queued")
    TRC_MSG(MMA_DRMSRV_MSG_DRM_ENCODE_DONE, "MMA DRMSRV recv MMA_INT_SIG_TYPE_MSG_DRM_ENCODE_DONE: ret = %d")
    TRC_MSG(MMA_DRMSRV_MSG_ENTER_USB_REQ, "DRMSRV recv MMA_INT_SIG_TYPE_MSG_ENTER_USB_REQ")
    TRC_MSG(MMA_DRMSRV_MSG_TERMINATE_IND, "DRMSRV recv MMA_INT_SIG_TYPE_MSG_TERMINATE_IND")
    TRC_MSG(MMA_DRMSRV_DELETE_TASK, "(mma_drmsrv.c): mma_drmsrv_delete_task(req %d, del state %d, env state %d)\n")
    TRC_MSG(MMA_DRMSRV_DELETE_TASK_HDLR, "(mma_drmsrv.c): Duplicate mma_drmsrv_delete_task_hdlr(req %d, del state %d, env state %d)\n")
    TRC_MSG(MMA_DRMSRV_HANDLE_MSG_INFO_RSP, "(mma_drmsrv.c) MMS_SIG_GET_MSG_INFO_REPLY: req = %d, msg = %d, no = %d\n")
    TRC_MSG(MMA_DRMSRV_HANDLE_FILE_NOTIFY_RSP, "(mma_drmsrv.c) MSF_SIG_FILE_NOTIFY %d - %d")
    TRC_MSG(MMA_DRMSRV_STATE_CHECK_MMS_OBJ_DRM_TYPE_READ_HANDLE, "(mma_drmsrv.c) info->r_handle %d < 0\n")
    TRC_MSG(MMA_DRMSRV_STATE_CHECK_MMS_OBJ_DRM_TYPE_WRITE_HANDLE, "(mma_drmsrv.c) info->w_handle %d < 0\n")
	TRC_MSG(MMA_DRMSRV_MMS_SIG_GET_MSG_INFO_REPLY_ERROR, "MMS_SIG_GET_MSG_INFO_REPLY msg %d not collected by drmsrv module\n")
	TRC_MSG(MMA_DRMSRV_MSG_DRM_ENCODE_NEXT_IND, "(mma_drmsrv.c): Queued request %d start")
	TRC_MSG(MMA_DRMSRV_DRM_ENCODE_DRM_MESSAGE_API_RESULT, "MMA DRMSRV call DRM_encode_drm_message() result %d, serial %d")
    TRC_MSG(MMA_DRMSRV_STATE_COPY_MMS_CONTENT_STATUS, "(mma_drmsrv.c) COPY_MMS_CONTENT_STATUS r_byte:%d w_byte:%d")
	TRC_MSG(MMA_DRMSRV_STATE_COPY_MMS_CONTENT_READ_STATUS, "(mma_drmsrv.c): MMA_DRMSRV_STATE_COPY_MMS_CONTENT read from file:%d, buffer: %d")
	TRC_MSG(MMA_DRMSRV_STATE_COPY_MMS_CONTENT_WRITE_STATUS, "(mma_drmsrv.c) MMA_DRMSRV_STATE_COPY_MMS_CONTENT write in file:%d, buffer: %d")
    TRC_MSG(MMA_DRMSRV_FAILED_CARD_PLUG_OUT, "(mma_drmsrv.c) MMA_DRMSRV_FAILED_CARD_PLUG_OUT")
    TRC_MSG(MMA_DRMSRV_IS_BUSY_ON_STORAGE, "(mma_drmsrv.c) mma_drmsrv_is_busy_on_storage(): %d")
    TRC_MSG(MMA_DRMSRV_CARD_PLUG_OUT_CALLBACK, "(mma_drmsrv.c) mma_drmsrv_memory_card_plug_out_callback()")
    TRC_MSG(MMA_DRMSRV_CHANGE_STATE_TO_CARD_PLUG_OUT, "(mma_drmsrv.c) MMA_DRMSRV_CHANGE_STATE_TO_CARD_PLUG_OUT")
	TRC_MSG(MMA_CREATE_MSG_CREATE_NEXT_IND, "(mma_create.c): Queued request %d start")
	TRC_MSG(MMA_CREATE_NOT_THE_ACTIVE_TASK, "(mma_create.c): Request %d queued")
	TRC_MSG(MMA_ENV_CHECK_MMS_FOLDER_ERROR_FULL, "MMA %s(%d): Disk full\n")
	TRC_MSG(MMA_ENV_CHECK_MMS_FOLDER_ERROR_PATH, "MMA %s(%d): Wrong path\n")
	TRC_MSG(MMA_MSGMGR_CAN_NOT_OCCUPY_ENCODE_FILE_SPACE, "MMA MSGMGR can't occupy encode file space for new msg %d")
	TRC_MSG(MMA_MSGMGR_CREATE_MMA_REQ_HDLR, "mma_msgmgr_create_req_hdlr(%d, %d, %d, %d)")
	TRC_MSG(MMA_MSGMGR_CREATE_NEW_MMS_MSG_RSP_HDLR, "MMA MSGMGR recv create rsp %d, result %d, msg_id %d")
	TRC_MSG(MMA_MSGMGR_CREATE_NEW_MMS_RSP_MSG_SIZE_EXCEED, "MMA MSGMGR CREATE_RSP msg_size %d")
	TRC_MSG(MMA_MSGMGR_DRM_ENCODE_DONE_HDLR, "MMA MSGMGR recv encode rsp %d, result %d, msg_id %d")
	TRC_MSG(MMA_MAIN_ENTER_TERMINATE_MODE, "MMAEnterTerminateMode")
    TRC_MSG(MMA_MAIN_REMOVE_PENDING_PLUG_IN_SIG, "(mma_main.c)MMA_MAIN_REMOVE_PENDING_PLUG_IN_SIG")
    TRC_MSG(MMA_MAIN_CARD_PLUG_OUT_HDLR, "(mma_main.c)mma_main_handle_mem_card_plug_out_hdlr()")
    TRC_MSG(MMA_MAIN_CARD_PLUG_IN_HDLR, "(mma_main.c)mma_main_handle_mem_card_plug_in_hdlr()")
    TRC_MSG(MMA_MAIN_FIRST_PLUG_OUT, "(mma_main.c)MMA_MAIN_FIRST_PLUG_OUT")    
    TRC_MSG(MMA_MAIN_PLUG_IN_SIG_PENDING, "(mma_main.c)MMA_MAIN_PLUG_IN_SIG_PENDING")
    TRC_MSG(MMA_MAIN_PLUG_OUT_PROCESS_PLUG_IN_PENDING, "(mma_main.c)MMA_MAIN_PLUG_OUT_PROCESS_PLUG_IN_PENDING")
    TRC_MSG(MMA_MAIN_PLUG_IN_PLUG_IN_IGNORED, "(mma_main.c)MMA_MAIN_PLUG_IN_PLUG_IN_IGNORED")
    TRC_MSG(MMA_MAIN_FIRST_PLUG_IN, "(mma_main.c)MMA_MAIN_FIRST_PLUG_IN")
    TRC_MSG(MMA_MAIN_FREE_SLOT_FOR_CARD_FOUND, "(mma_main.c)MMA_MAIN_FREE_SLOT_FOR_CARD_FOUND: %d")
    TRC_MSG(MMA_MAIN_CARD_PLUG_OUT_RSP, "(mma_main.c)mma_main_handle_mem_card_plug_out_rsp_hdlr()")
    TRC_MSG(MMA_MAIN_CARD_PLUG_IN_RSP, "(mma_main.c)mma_main_handle_mem_card_plug_in_rsp_hdlr()")
    TRC_MSG(MMA_MAIN_PROCESS_PENDING_PLUG_IN, "(mma_main.c)MMA_MAIN_PROCESS_PENDING_PLUG_IN")
    TRC_MSG(MMA_MAIN_RESETTING_CARD_INFO_CONTEXT, "(mma_main.c)MMA_MAIN_RESETTING_CARD_INFO_CONTEXT")
    TRC_MSG(MMA_MAIN_SET_PLUG_IN_CARD_CONTEXT, "(mma_main.c)MMA_MAIN_SET_PLUG_IN_CARD_CONTEXT")
    TRC_MSG(MMA_PARSE_REQ_FAILED_CARD_PLUG_OUT, "(mma_main.c)MMA_PARSE_REQ_FAILED_CARD_PLUG_OUT: %d")
    TRC_MSG(MMA_MAIN_CHANGE_STATE_TO_CARD_PLUG_OUT_PROCESS, "MMA_MAIN_CHANGE_STATE_TO_CARD_PLUG_OUT_PROCESS")
    
    TRC_MSG(MMA_MAIN_EXIT_TERMINATE_MODE, "MMAExitTerminateMode")
	TRC_MSG(MMA_MAIN_SET_TARGET_MMSC_VERSION, "%s(%d):Change the MMSC version to %d. \n")
	TRC_MSG(MMA_UTILITIES_GET_ACTIVE_TASK_DRMSRV, "MMADrmsrv_BUSY")
	TRC_MSG(MMA_UTILITIES_GET_ACTIVE_TASK_PARSE, "MMAParse_BUSY")
	TRC_MSG(MMA_UTILITIES_GET_ACTIVE_TASK_MSGMGR, "MMAMgr_BUSY")
	TRC_MSG(MMA_UTILITIES_GET_ACTIVE_TASK_CREATE, "MMACreate_BUSY")
	TRC_MSG(MMA_UTILITIES_GET_ACTIVE_TASK_SENDRECV, "MMASndRcv_BUSY")
	TRC_MSG(MMA_UTILITIES_CHECK_FS_DEVICE_BUSY, "mma_check_fs_is_busy(): drive %c is busy")
	TRC_MSG(MMA_UTILITIES_CHECK_FS_DEVICE_NOT_BUSY, "mma_check_fs_is_busy(): drive %c is not busy")
	TRC_MSG(MMA_UTILITIES_IS_READY_FOR_FORMAT, "(mma_utilities.c)mma_is_ready_for_format: drive %c")
	TRC_MSG(MMA_UTILITIES_IS_READY_FOR_FORMAT_RESULT, "(mma_utilities.c)mma_is_ready_for_format_Result: @ %d")
	TRC_MSG(MMA_PARSE_CHANGE_STATE_TO_CARD_PLUG_OUT, "(mma_parse.c)MMA_PARSE_CHANGE_STATE_TO_CARD_PLUG_OUT")
	TRC_MSG(MMA_UM_MMA_UC_CAL_MSG_SIZE, "(mmsadp.c) wap_mma_uc_calc_msg_size = %u\n")
	TRC_MSG(MMA_UM_CHECK_IMG_FILE_NOT_GDI_SUCCEED, "mma_check_image_file() dimension: gdi_ret = %d\n")
	TRC_MSG(MMA_UM_CHECK_IMG_FILE_DRAW_GDI_RETURN, "mma_check_image_file() draw: gdi_ret = %d\n")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_END_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_END write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_END_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_END")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_BODY_END_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_BODY_END")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_BODY_END_WRITE_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_BODY_END write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_OBJECT_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_OBJECT")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_OBJECT_WRITE_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_OBJECT write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_CREATE_XML_OBJECT_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_CREATE_XML_OBJECT")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_SLIDE_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_SLIDE")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_SLIDE_WRITE_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_SLIDE write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_CREATE_XML_SLIDE_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_CREATE_XML_SLIDE")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_BODY_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_BODY")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_BODY_WRITE_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_BODY write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_CREATE_XML_BODY_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_CREATE_XML_BODY buf_size %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_LAYOUT_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_LAYOUT")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_LAYOUT_WRITE_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_LAYOUT write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_CREATE_XML_LAYOUT_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_CREATE_XML_LAYOUT buf_size %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_HEADER_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_HEADER")
	TRC_MSG(MMA_PARSE_SUB_STATE_WRITE_XML_HEADER_WRITE_ERROR, "(mma_parse.c) MMA_PARSE_SUB_STATE_WRITE_XML_HEADER write error %d")
	TRC_MSG(MMA_PARSE_SUB_STATE_CREATE_XML_HEADER_STATE, "(mma_parse.c) MMA_PARSE_SUB_STATE_CREATE_XML_HEADER buf_size %d")
	TRC_MSG(MMA_PARSE_FILE_REMOVE_ERROR, "(mma_parse.c) MSF_FILE_REMOVE %d\n")
    TRC_MSG(MMA_PARSE_RESUME_REMAINING_PARSE_REQ, "(mma_parse.c)MMA_PARSE_RESUME_REMAINING_PARSE_REQ : %d")
    TRC_MSG(MMA_PARSE_CARD_PLUG_OUT_CALLBACK, "(mma_parse.c)mma_parse_memory_card_plug_out_callback()")
	

    TRC_MSG(NTS_IF_23B5707B485058E18543017590D8E60B, "NTSif_configureChannel:chId:%d")
    TRC_MSG(NTS_IF_9B73CFA357E60ACB036FF50BE20B2B48, "NTSif_configureProxyChannel:chId:%d")
    TRC_MSG(NTS_IF_42498A2CDA784194C8A3B5A690745D26, "NTSif_removeChannel:chId:%d")
    TRC_MSG(NTS_IF_1805A644733C21DBEC3D6F781127A599, "NTSif_httpRequest:reqId:%d,url:%s")
    TRC_MSG(NTS_IF_6F5E984F00F1B7DB7149A870E8A527B4, "NTSif_cancelRequest:reqId:%d")
    TRC_MSG(NTS_ENV_8A791E2E2B1B8BE2470FD8FABF86D569, "%s(%d): Received unhandled signal %d from module %d")
    TRC_MSG(NTS_ENV_3ACF2AB90EA67FF7CE7F1BEF53D888AE, "NTS_start")
    TRC_MSG(NTS_ENV_942E2DD5808E3AAA2EBC75B9A620EF70, "%s(%d): NTS module is terminated.")
    TRC_MSG(NTS_CHANNEL_C095988D982CB890CF2335C16ACCAC35, "(%s_%d)Channel:%d,%d, state is changed from %d, to %d.")
    TRC_MSG(NTS_CHANNEL_9B427EA42B03414F380236D1438CA158, "(%s/%d)clear ch_access_q for module %d, channel id:%d")
    TRC_MSG(NTS_CHANNEL_AF48E2B2AB9768C8C2BBED0A9F664A17, "(%s_%d) abort all req_waiting_q requests using channel id:%d")
    TRC_MSG(NTS_CHANNEL_5C1CF369DE5D2F3A3218A3B4567C61AF, "(%s/%d) abort all req_list requests using channel id:%d")
    TRC_MSG(NTS_CHANNEL_0D26124EDD4930608674815FF1264AD7, "drop configure channle req while nts state is %d")
    TRC_MSG(NTS_CHANNEL_CC97A3E381EB4F56B297D9095F028E11, "drop configure channel req while nts is not started")
    TRC_MSG(NTS_CHANNEL_DCA7E4D0FB0C2B8E8AFF4F01A601F2E4, "Recv remove channel %d req from module %d while state of nts is %d")
    TRC_MSG(NTS_CHANNEL_FBFEBC344668FC5B363481150398E33B, "Drop remove channel req")
    TRC_MSG(NTS_CHANNEL_45C2FF419FE641C6DBBFB10064439DB6, "Module:%d,Channel %d is removed.")
    TRC_MSG(NTS_CHANNEL_AF4902A69D21CF7D8F8ADA7BD5744C42, "Recv remove channel req, ch_state is %d from module %d while state of nts is %d")
    TRC_MSG(NTS_CHANNEL_94940510BEADB16829BE8F840F86FCBD, "Drop double remove channel req")
    TRC_MSG(NTS_CHANNEL_181636186223FC5A330379B37370D914, "drop remove channel req while nts is not started")
    TRC_MSG(NTS_CHANNEL_F9FB4078D5BE93D49F3D28DDE3C59FC2, "Recv http request using channel %d from %d")
    TRC_MSG(NTS_CHANNEL_371413DDD7E871896342C0360EBD3BEB, "Abort http request using wrong channel")
    TRC_MSG(NTS_CHANNEL_9DA2FA8D9F020BCEA571154D3B9C4EBB, "Abort http request using wrong parameters")
    TRC_MSG(NTS_CHANNEL_9DEFE91E2AC0CF2671D54D1EE97E5C6B, "Abort http request using channel in %d")
    TRC_MSG(NTS_CHANNEL_9C2FC063029DB21275BC8103A668C77A, "drop http req while nts is not started")
    TRC_MSG(NTS_CHANNEL_CD966976A7804AEAE230647D69B92189, "Drop wps set channel rsp while nts state is %d")
    TRC_MSG(NTS_CHANNEL_897E89FFC278F37CDEE931E77CEA23B9, "Not ch for wps set channel rsp %d")
    TRC_MSG(NTS_CHANNEL_4DFF166D74C1E51A08D72D7BAEE825B7, "drop wps set channel rsp while nts is not started")
    TRC_MSG(NTS_CHANNEL_A9AC46C026223D400856B94D6ADFABDA, "Drop wps unset channel rsp while nts state is %d")
    TRC_MSG(NTS_CHANNEL_2A9CC23278E3FFBBFADBD6A0214D2DB0, "Drop wps unset channel rsp with wps channel id%d")
    TRC_MSG(NTS_CHANNEL_FBE6B0F170543B903467CB16A370248B, "Should not receive wps unset channel rsp while nts state is %d")
    TRC_MSG(NTS_CHANNEL_6BA43AEED64BCD0F41BA407F1622BBF6, "drop wps unset channel rsp while nts is not started")
    TRC_MSG(NTS_CHANNEL_F6EEEDAE2B794BA7DC5BDF756FAC9011, "Recv transaction abort reqs by chid rsp, src:%d, chid:%d")
    TRC_MSG(NTS_CHANNEL_D4260430392885FB8F0D2ADFC9112128, "Recv wrong transaction abort reqs by chid rsp.")
    TRC_MSG(NTS_MAIN_6F6EC39CC121D362BDFA0A99A81DA800, "(%s_%d)NTS state is changed from %d, to %d.")
    TRC_MSG(NTS_MAIN_8A12E0D5EB5D150B1CF9584B62D8A8EA, "WPS is not ready!")
    TRC_MSG(NTS_MAIN_92403466091EB4B3B9F6E0ECBC628599, "NTS_Status:ACTIVE,%s,%d!")
    TRC_MSG(NTS_MAIN_4AA9753DE47EAA3C20BFC4D5D24684DC, "NTS_Status:CREATED,%s,%d!")
    TRC_MSG(NTS_MAIN_B2D9898B05A4770FD8E89B7A1B67B69F, "Receive shutdown req, NTS_Status:%d!")
    TRC_MSG(NTS_SIG_0913E59EB2E0A79EF75F342A4E819264, "SndSig,%d,%d,%d,%d")
    TRC_MSG(NTS_STACK_3C9DDB159B0C993D1F41302D2D6584DE, "Len. of channel static headers:%d, too large!!%d")
    TRC_MSG(NTS_TRANSACTION_7744BE78ABA09AA6CF91FDDA06D7848B, "(%s_%d) http req id:%d, state is changed from %d to %d.")
    TRC_MSG(NTS_TRANSACTION_64B7B7FC6641EF41A9EDDA81429BF86E, "(%s/%d)Http req %d in req_list is completed")
    TRC_MSG(NTS_TRANSACTION_5C8D379740E2F098847D570F4D4300FE, "NTS read data from pipe %d, res:%d, %d")
    TRC_MSG(NTS_TRANSACTION_55EDDB0BD0CCE5019F5142C50CD283BE, "NTS read data from pipe %d, res:%d")
    TRC_MSG(NTS_TRANSACTION_28C6715F1776C84413A1D2FE4DE95D12, "NTS sent all post data to WPS")
    TRC_MSG(NTS_TRANSACTION_5D105D3BA7DA37957DF9D03315B91A41, "We should receive abort reqs by chid req soon.")
    TRC_MSG(NTS_TRANSACTION_26C5A9489DAFE120AFDE3E122D9F6088, "Drop trans process req_list req, wrong src_module:%d, wrong channel_id:%d, in %d state!")
    TRC_MSG(NTS_TRANSACTION_42B4F6451A0C43AED4D834BCCD824414, "NTS send post data %d bytes to WPS, module:%d, app_chId:%d, wps_chId:, reqId:%d")
    TRC_MSG(NTS_TRANSACTION_96EAAF3DB608EC38E846C72952267590, "Receive wps post cotent id req_id: %d!")
    TRC_MSG(NTS_TRANSACTION_4F16494C7B90CCFD2B0BB7BBE44833BF, "We should receive unknown wps post content ind.")
    TRC_MSG(NTS_TRANSACTION_6BF0095310F1640995FE4A5C94FC9E27, "Recive wps post cotent id req_id: %d, chId:d, ch_state:%d, req_state:%d!")
    TRC_MSG(NTS_TRANSACTION_058DED61A1A133A95D49A7C775973F5B, "Drop wps post content ind, no requests uses requestid:%d")
    TRC_MSG(NTS_TRANSACTION_104E44B28D87AFCECFA4FDB610040F18, "Receive wps read cotent rsp req_id: %d!")
    TRC_MSG(NTS_TRANSACTION_99CAC44F90E5D1C0AAB3F72DCEFD85FA, "We should receive unknown wps read content rsp.")
    TRC_MSG(NTS_TRANSACTION_B0D1ED5B60D082E47E735604A4C7EB64, "Recive wps read cotent rsp: %d, chId:d, ch_state:%d, req_state:%d, result:%d!")
    TRC_MSG(NTS_TRANSACTION_30D272307460C7481CCF1B9CC9CB3AA5, "Drop wps read content rsp, no requests uses requestid:%d")
    TRC_MSG(NTS_TRANSACTION_83BC7736B4573DECF7A77041319A689E, "Receive wps http rsp req_id: %d!")
    TRC_MSG(NTS_TRANSACTION_B4BC129D6490BFC7B65E8714958B682E, "We receive unknown abort wps http rsp.")
    TRC_MSG(NTS_TRANSACTION_A2A0BE2E8D45BD524A362F1028A3CF9B, "Recive wps http rsp req_id: %d, chId:d, ch_state:%d, req_state:%d!")
    TRC_MSG(NTS_TRANSACTION_B1EC899DE207B003E18315DC6F79C8F7, "Discard wps http rsp. wait for cancel rsp")
    TRC_MSG(NTS_TRANSACTION_CD8162CDF803806F95A9BA0AFF1802B3, "Drop wps http rsp, no requests uses requestid:%d")
    TRC_MSG(NTS_TRANSACTION_4054E6B0B5A843D38CE532CA0EEEC8E6, "Receive wps cancel rsp req_id: %d, ret:%d!")
    TRC_MSG(NTS_TRANSACTION_01235D0FB21BCFC159F103DB633330CC, "Drop cancel rsp while ch_state is in !")
    TRC_MSG(NTS_TRANSACTION_82D9C3094C2EC022C017301A27E932D9, "We receive unknown cancel rsp.")
    TRC_MSG(NTS_TRANSACTION_F760CE8F67DE1216501AD3EBA06F4ED2, "Drop wps cancel rsp, no requests uses requestid:%d")
    TRC_MSG(NTS_TRANSACTION_D92A599ADB709167AB6BF9503F2D6BEC, "Receive abort request req, req_id: %d!")
    TRC_MSG(NTS_TRANSACTION_B2AAE9F0B6FB0653583CC9B8528F234A, "Drop abort request req while nts is in %d")
    TRC_MSG(NTS_TRANSACTION_17A66329A4D92D6B8A5F7B9C2DC1420D, "Recv abort request req %d while ch_state is in %d")
    TRC_MSG(NTS_TRANSACTION_E7B43BDD0FB812CF2BE5E49BAC2B5336, "Drop abort request req while ch_state is in %d")
    TRC_MSG(NTS_TRANSACTION_74CE893D767471BF62B2B87EC9A42516, "Couldn;t find req %d in req_waiting_q")
    TRC_MSG(NTS_TRANSACTION_DA9009AE4A99CBF7E0DBA14B8EFB557B, "Couldn;t find req %d in req_list and req_waiting_q")
    TRC_MSG(NTS_TRANSACTION_B7A449CFD9832075A9434C009194DCFB, "Couldn;t find req %d in req_list")
    TRC_MSG(NTS_TRANSACTION_77CC27744A1CB5EB9E61C0F6E257628F, "Recive abort request req req_id: %d, chId:d, ch_state:%d, req_state:%d!")
    TRC_MSG(NTS_TRANSACTION_4602EF19EAC06EED862A425EF72724F5, "Drop abort request, no requests uses requestid:%d")
    TRC_MSG(NTS_TRANSACTION_597353CCDF3E73847278F4066707AC6B, "Receive abrot reqs by chid:%d, src:%d")
    TRC_MSG(NTS_TRANSACTION_3712C971DF23103E0E4470DBB88F9BB3, "Drop abrot reqs by chId while nts is in %d")
    TRC_MSG(NTS_TRANSACTION_AB139261287060A8CC298C18B52C751B, "Recv abrot reqs by chid while ch_state is in %d")
    TRC_MSG(NTS_TRANSACTION_C0803F4B55FC9281E8EBED51258E2874, "Drop pipe notify %d,ev_type:%d for req_id:%d,src_module:%d,ch_id:%d,while ch_state is in %d")
    TRC_MSG(NTS_TRANSACTION_45F689862D44EE56FF72F51E7BB73CDC, "Drop pipe notify %d,ev_type:%d for req_id:%d,while ch_state is in %d and req_state is in %d")
    TRC_MSG(NTS_TRANSACTION_5B8D01736B569F24826E237F12F749DA, "Pipe %d is closed")
    TRC_MSG(NTS_TRANSACTION_4710764686D76690F1A972CDF3A4F1FD, "Recv invalid pipe notify %d,ev_type:%d")
    TRC_MSG(NTS_TRANSACTION_22E4751AD5443CC50FBC27011031CB4A, "Receive trans process req_list req channel_id:%d")
    TRC_MSG(NTS_UTIL_D819D6295EBF0E3DED5D9B62C31107D2, "Channel context, module:%d, chId:%d is deleted")
    TRC_MSG(NTS_UTIL_C73CCBA19F917FBBCC5E2FD93F799928, "Module%d,req_id:%s is aborted by err %d,(%d/%s)")
    TRC_MSG(NTS_UTIL_8709F01B4CFCDD89EF54F99E8259D087, "NTS_SIG_HTTP_REPLY %d is sent to %d")
    TRC_MSG(MMSL_IF_71A7D3A67085EF106B2BA38AE40CE8BB, "MMSlib_getMessage(msgId = %d)")
    TRC_MSG(MMSL_IF_5AF229E3DDB60F325B1D4ADBA602A916, "MMSlib_getFileHandle(fileHandle = %d)")
    TRC_MSG(MMSL_IF_B2F271E505F63E34F68F944AAD8274E3, "Unable to allocate memory in: MMSlib_getNotification(msgId = %d)")
    TRC_MSG(MMSL_IF_60199C11D557298CAFDB28A9290CD4DB, "MMSlib_getNotification(msgId = %d)")
    TRC_MSG(MMSL_IF_5CC98D40226FFFBE46558A9B1447B3E1, "MMSlib_getBodyPart( %d, %d)")
    TRC_MSG(MMSL_IF_0A96BADB8AF60D2244256D0E3F8DBDE3, "MMSlib_setMessageBody: received unknown state")
    TRC_MSG(MMSL_IF_66C4511DA11599D6AF14C6297AE2B65A, "MMSlib_setMessageBody( fileHandle=%d, size=%d, targetType=%d)")
    TRC_MSG(MMSL_IF_8F6F8BD1D163A6CEED12A59ECA2DD2AF, "MMSlib_setMessageHeader: received unknown state.")
    TRC_MSG(MMSL_IF_01C6036E5A348583F59996B11A8AF71C, "MMSlib_setHeader( id=%d, numOfBodyParts=%d )")
    TRC_MSG(MMSL_IF_2BC5B90B1876CE165D96E74081A39391, "MMSlib_messageOpen: illigal message type.")
    TRC_MSG(MMSL_IF_548289D6E7379FE5D372A9C16D1B721A, "Unable to allocate memory in: MMSlib_messageOpen(msgId = %d)")
    TRC_MSG(MMSL_IF_C49709D6F5F72B23AFDF1D4E6E6122CF, "MMSlib_messageOpen(). Error creating filename")
    TRC_MSG(MMSL_IF_D9DED4F9CF1AAC22ECEDC0629A9F2584, "MMSlib_messageOpen(). Failed to open file: (error code = %d)")
    TRC_MSG(MMSL_IF_03E9DE830D989C258D9C9BB1BCDD40B6, "MMSlib_messageOpen(). file access error")
    TRC_MSG(MMSL_IF_6A172706A5DF0E7827AADEBFF46E97E4, "MMSlib_messageOpen(). fileName contains invalid characters")
    TRC_MSG(MMSL_IF_88477A4E8DCF82C0C666ECF4D1D055B0, "MMSlib_messageOpen(). File data size is too big for the file system")
    TRC_MSG(MMSL_IF_74BFBDBA54078CFBAC71B51E6E12568B, "MMSlib_messageOpen(). File system is full")
    TRC_MSG(MMSL_IF_78D08BC3C2315F57F9B2FAC0AAA874F1, "MMSlib_messageOpen(). File or path specified by fileName not found")
    TRC_MSG(MMSL_IF_1774152918DF7B1A3FD454547C551754, "MMSlib_messageOpen(). Unspecified error")
    TRC_MSG(MMSL_IF_CC35283C2791B107F713FE761B0BA696, "MmsLib_messageOpen( id=%d)")
    TRC_MSG(MMSL_IF_8C25261710B23D427FA4330CEF738740, "MmsLib_closeMessage( id= not set!)")
    TRC_MSG(MMSL_IF_4B94D04E543F62737B8633F7C7A9C196, "MmsLib_closeMessage( id=%d)")
    TRC_MSG(MMSL_IF_1CB6F3F511F20F8A7EB167ACE832E577, "Unable to allocate memory in: MMSlib_transactionOpen()")
    TRC_MSG(MMSL_IF_C72DF28F5A1EDFB8520E6F1C7D2A26D3, "MMSlib_openTransaction( )")
    TRC_MSG(MMSL_IF_EDEADC12709A37A858B4AAB4D67D20FB, "MMSlib_closeTransaction()")
    TRC_MSG(MMSL_IF_READ_REPORT_INFO_FILE, "%s(%d): (mmsl_if.c) Read Report Info FILE\n")
    TRC_MSG(MMSL_IF_SYNC_MODE_REPORT_FILE_OPEN, "%s(%d): (mmsl_if.c) Report FILE OPEN for node index: %d\n")
    TRC_MSG(MMSL_IF_TRANSLATE_MSF_ERROR_TO_MMS_ERROR, "(mmsl_if.c) translate MSF ERROR code is: %d\n")
    TRC_MSG(MMSL_IF_TRANSLATE_FS_ERROR_TO_MMS_ERROR, "(mmsl_if.c) translate FS ERROR code is: %d\n")
    TRC_MSG(MMSL_IF_GEN_ADDR_OBJ_FILE, "Generate AddrObj File for msgId:%d on storage: %d\n")
    TRC_MSG(MMSL_IF_ADDR_OBJ_FILE_CORRUPTED, "The AddrObj file is corrupted: %x\n")
    TRC_MSG(MMSL_IF_SYNC_MODE_FILE_OPEN, "%s(%d): (mmsl_if.c) FILE OPEN for message id: %d\n")
    TRC_MSG(MMSL_IF_GEN_REPORT_INFO_FILE, "%s(%d): (mmsl_if.c) Generate Report info file\n")
    TRC_MSG(MMS_IF_3785A26FDCA8E3E1A5C82A20B6254A17, "Unable to allocate memory in: mmsConvert()")
    TRC_MSG(MMS_IF_69FCEADA897BAE720078FB51FE5CDFFD, "%s(%d): Conversion function failed.")
    TRC_MSG(MMS_IF_0C607E82F7E732A5E2D43AB78E761104, "%s(%d): signal send failed.")
    TRC_MSG(MMS_IF_425D110964892F2B86497104D3D7D735, "MMSlib_createMessageDone(%d)")
    TRC_MSG(MMS_IF_2C7CF728DE9C367FBCA940B7543FE7F4, "MMSif_deleteMessage(%d)")
    TRC_MSG(MMS_IF_9F5E51B8EEA7538C92CB767E0F47978E, "%s(%d): Forward Req. cannot be created in 1.0 version")
    TRC_MSG(MMS_IF_5339A3EB985C3870B4E6EB069FCCC865, "%s(%d): Content Location must be set in Forward Req.")
    TRC_MSG(MMS_IF_EB13E918FC483318767D4F2CD14C527A, "%s(%d): Failed to create Froward PDU.")
    TRC_MSG(MMS_IF_74FA9B7BEF8D3EF7223B965BED7964B4, "%s(%d): null function pointer!")
    TRC_MSG(MMS_IF_FC910A980DAA646757DCFBBB4763D2FF, "%s(%d): MSF_SIGNAL_CREATE failed.")
    TRC_MSG(MMS_ENV_60AD5408EA834277083807C14A3A1144, "MMS received handleMsfModuleStatus: Module=%d, Status=%d")
    TRC_MSG(MMS_ENV_59CC922D6621075BF46D7F836C724775, "%s(%d) Out of memory")
    TRC_MSG(MMS_ENV_9F037C78DCF6CBF40292D6823EB48976, "%s(%d) Received STK_SIG_HTTP_REPLY, reqId=%d, status=%d (0x%x)")
    TRC_MSG(MMS_ENV_0132BADB329AC23C534E1D38192B5371, "%s(%d): Illegal STK response, replyPtr=%d")
    TRC_MSG(MMS_ENV_F1A0457E37F18012CAFC58E76AE52EEC, "%s(%d): Illegal STK reply->content=%d")
    TRC_MSG(MMS_ENV_3F78602917AFFB1BB0E175217FE3C588, "mms_env.c(%d): header: %s")
    TRC_MSG(MMS_ENV_941D8D01F9E547E63486F9C34D1D3ABE, "mms_env.c(%d): newUrl: %s")
    TRC_MSG(MMS_ENV_CA42C043D0C9E8DCBD1FCB6048D54C07, "mms_env.c(%d): contentType: %s")
    TRC_MSG(MMS_ENV_73D07F9D6F9F1391F06EF264BEF147CF, "%s(%d): response of wrong type %d")
    TRC_MSG(MMS_ENV_7608FD07F296E4036C71E4553088DAE4, "%s(%d): Illegal indata! Data=%d")
    TRC_MSG(MMS_ENV_17D4A622231DE18162A75F97DE49440F, "MMS_start(void)")
    TRC_MSG(MMS_ENV_6E5C268B415C9700595BBCBF24BDA80B, "MMS_terminate(void)")
    TRC_MSG(MMS_ENV_4F0AE80D93BF5AF1741C3F381F017DE0, "%s(%d): Insufficient memory!")
    TRC_MSG(MMS_ENV_B53CF1B44B8C316361F10ABD0446F9CA, "%s(%d): Received STK_SIG_HTTP_STATUS. Not used by MMS.")
    TRC_MSG(MMS_ENV_5DBD5EDACF8E5E37D1BF8D9D8824D57C, "%s(%d): Received STK_SIG_HTTP_REQUEST_ABORTED, reqId=%d, error=%d (0x%x).")
    TRC_MSG(MMS_ENV_81056C28FFF7F14B038D5A22077DC28A, "%s(%d): Received MSF_SIG_MODULE_EXECUTE_COMMAND with illegal indata %d.")
    TRC_MSG(MMS_ENV_8A791E2E2B1B8BE2470FD8FABF86D569, "%s(%d): Received unhandled signal %d from module %d")
    TRC_MSG(MMS_A_B3B9DADE07C50B4EE28F91098997F11E, "MMSa_newMessage: Received, numOfMsg=%d, numOfUnread=%d numOfNotif=%d reason = %d")
    TRC_MSG(MMS_A_2C21AEEA418A77A26A5DBC3DE5F82F94, "MMSa_messageStatus: Received, numOfMsg=%d, numOfUnreadMsg=%d")
    TRC_MSG(MMS_A_9EFB59552EEC01AFE66EA2F53055189A, "MMSa_messageStatus: Continued, numOfMsg=%d, numOfUnreadMsg=%d")
    TRC_MSG(MMS_A_848A3F97D1A371D522C0D5CFD7175679, "MMSa_progressStatus: accId=%d, state=%d, msgId=%d")
    TRC_MSG(MMS_A_8ABD6F1729FEC76BB25C4D7464B11F3E, "HDIa_socketDiscBearerById(old %d)")
    TRC_MSG(MMS_A_52393E3E00791A155FAA8458825CB634, "HDIa_socketDiscBearerById(%d)")
    TRC_MSG(MMS_A_CB11217942A85A0E21112FB568FF354C, "MMS: An Error occured when no application was connectd (%d)")
    TRC_MSG(MMS_AAPP_6B0186307DE10634B3AB30B4C186C2BE, "Write the current roaming status %d of sim %d into MSF registery ")
    TRC_MSG(MMS_AAPP_DEB25CC3746ECF34A2E65BEB048E7A9A, "%s(%d):Change the MMSC version to %d. ")
    TRC_MSG(MMS_AAPP_6DE6B2EF47E8AD58F7C47DA07C52DF43, "mmsHandleErrors(%d)")
    TRC_MSG(MMS_AAPP_5C1D8A97437B1F7A0E7B6C2D5A06BF81, "%s(%d): Can't retrieve the matching key.")
    TRC_MSG(MMS_AAPP_E92995BC353D6D26B6BBD3A731CEBB77, "%s(%d): Read returned %d")
    TRC_MSG(MMS_AAPP_D4FD45BD4DCDB884139BD7371682204F, "%s(%d): Unhandled file error %d")
    TRC_MSG(MMS_AAPP_0989B2588E970425072E7857CCD7BBE4, "%s(%d): No X_MMS_CONTENT_LOCATION tag")
    TRC_MSG(MMS_AAPP_22C20C13184E88D196C49E7BE046B4BF, "%s(%d): read header from the file with msgid %d.")
    TRC_MSG(MMS_AAPP_4163F0935B312129EC07018507DAED6B, "%s(%d): Can't open the file.")
    TRC_MSG(MMS_AAPP_699FA1845FC3A97E7DB10AADF1C9C486, "%s(%d): Can't allocate the memory to read header from mms file.")
    TRC_MSG(MMS_AAPP_F04A54693E8FD2C3774261A6897AE790, "%s(%d): Unknown fileError %d")
    TRC_MSG(MMS_AAPP_F32A91A261F6DB5CE83B1A8A18372F1E, "The chksum file is corrupted: %x.%c")
    TRC_MSG(MMS_AAPP_05984558FD66ADF9F7B33E0C0BF4DFF6, "Start to generate a chksum file with msgId:%x.%c")
    TRC_MSG(MMS_AAPP_B7E686B2DC0075F5898779CB6A8134A0, "Fail to gen *.i chksum")
    TRC_MSG(MMS_AAPP_2E2DB89646CC2774B560D48D89C6C43B, "Fail to gen msg chksum")
    TRC_MSG(MMS_AAPP_204FFF3F6F26D8595745C1AAE4C38559, "Generate msg msgId:%x information, subject:%s")
    TRC_MSG(MMS_AAPP_8734F91BCBA200E79357FCFCDD4FFFA9, "Generate msg msgId:%x chksum file.")
    TRC_MSG(MMS_AAPP_7D3096812F7CD2F9A1EA4B8674252BDC, "Start to sync chksum files and MMS folder.")
    TRC_MSG(MMS_AAPP_AEAC874A696A0D61FF055DD2CE79539B, "Remove unnecessary chksum file: %s")
    TRC_MSG(MMS_AAPP_3BA5EAAA3691D373A07B735964330C22, "Finish to sync chksum files and MMS folder.")
    TRC_MSG(MMS_AAPP_5AA82A0D9D71CAA6FC93F944667A0654, "Remove unnecessary chksum file: %x.%c")
    TRC_MSG(MMS_AAPP_3FB7875DB1B8B59B51687A66A5F4228F, "%s(%d): The chksum file is corrupted: %x.%c")
    TRC_MSG(MMS_AAPP_B5048D3ADC1AA78E6E8CB24DF63BC30B, "%s(%d): The memory is exhausted. MsgId:%x, Need Size: %d")
    TRC_MSG(MMS_AAPP_34ABB2D45C8EA485AC46138846F90E64, "%s(%d): The chksum file is corrupted: %x.%c, file_size:%d")
    TRC_MSG(MMS_AAPP_0AB6C7D3097F08C8195D15E73AF1DD7F, "%s(%d): The information file is corrupted: %x.%c")
    TRC_MSG(MMS_AAPP_74DDADE51F0B19F3BF1C6B73EA0C96CC, "%s(%d): The mms message file is corrupted: %x.%c")
    TRC_MSG(MMS_AAPP_A00CD2BB18C4E3B196CE34F07660C6CA, "%s(%d): The mms message is valid: %x.%c")
    TRC_MSG(MMS_AAPP_408369950038557C5232ED615D409029, "%s(%d): Fails to create message header of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_C5D779318E1FC9EDCC7BB460A13D1CBD, "%s(%d): Fails to create image header of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_1CBBA43961E36E0A07B839088148BCA7, "%s(%d): Fails to create image data of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_77D2CE9AD2F5826D2EB2C024FAE2BBD8, "%s(%d): Fails to create audio header of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_069A6987C0E22D763DE2D52110C79FA6, "%s(%d): Fails to create audio date of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_C7E33FCD983E5FECB9EC89903F71E82B, "%s(%d): Fails to create text header of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_267F954B9F1645E67D41F5AED80ABD4A, "%s(%d): Fails to create SMIL part of %d th mms templates, writeResult:%d, bytesToWrite:%d")
    TRC_MSG(MMS_AAPP_16E57952F0E0FD667BCF7EEBEAC89DA0, "%s(%d): Fails to open file %d th mms templates, opeResult:%d")
    TRC_MSG(MMS_AAPP_F5824B9F26424070A68FD1BD7EBE06FA, "%s(%d): The message file is corrupted. It can't insert attachment. ")
    TRC_MSG(MMS_AAPP_E447448497FCCBEC5B0EE8052473FEE3, "%s(%d):wrong filepath:%s ")
    TRC_MSG(MMS_AAPP_BFF2361F489CE485B73E2A671AD6D534, "mmsWritePushToCache(%s)")
    TRC_MSG(MMS_AAPP_80ECA990BF97BDDB428FE6E4ADA5229A, "mmsGetOnePushFromCache(%s)")
    TRC_MSG(MMS_AAPP_A150D297BF809262F87CEFB3148E9060, "drop one cached mms push")
    TRC_MSG(MMS_AAPP_3C77A027A90B3160365A800FBA420396, "mmsa_timer_start()")
    TRC_MSG(MMS_AAPP_3AC4B7F62CAC7E15780A4BAD2BE6BFE9, "mmsa_timer_expired_hdlr() cache no: %d")
    TRC_MSG(MMS_AAPP_323B3D99EF3F123AA5B13470E16D233E, "mmsa_timer_expired_hdlr: cache size %d")
    TRC_MSG(MMS_AAPP_93D532AA37A1CA00F898E5C2475FA8E6, "mmsa_get_max_mms_get_retry_num() = %d")
    TRC_MSG(MMS_AAPP_E4ADD0BEFDF7883106E54A9DFB13D298, "wap_custom_get_max_mms_post_pdu_retry_nums() = %d")
    TRC_MSG(MMS_AAPP_A4E19877BD3905F4399379DD8DB0883E, "Update Sim Status, Sim1:%d,Sim2:%d")
    TRC_MSG(FLDMGR_3844FF7D62B26F03B1B7764E3DE9B7FD, "%s(%d): Failed to rename  file %s to file  %s!")
    TRC_MSG(FLDMGR_53076A6B4DAE35B7BAAFA777950465AB, "%s(%d): No MMT files exist in the MMS folder, restore started !")
    TRC_MSG(FLDMGR_92F8938E4CA84DE96325301E060EC6D6, "%s(%d): No space left to update the read report %d")
    TRC_MSG(FLDMGR_6FC6C83DAF6957F1546E8BECA83A17E9, "%s(%d): MsgId (%d) was not found in the MMT, get size failed")
    TRC_MSG(FLDMGR_29D4288982B9C70F5DC2A075307168F6, "%s(%d): MsgId (%d) was not found in the MMT, get folderId failed")
    TRC_MSG(FLDMGR_A97AABF0817F47671B199E56EE37600D, "fldrChangeMessageSimId,Wrong msgId:%d, SimId%d!")
    TRC_MSG(FLDMGR_0D04060BA35CE49BB454F16E5BDDFD19, "SimId,Wrong msgId%d!")
    TRC_MSG(FLDMGR_7624C1A51EF735E676877C4FDDE32C5E, "%s(%d): Warning: Failed to remove the file from disk.  %s!")
    TRC_MSG(FLDMGR_2696D458CE947BE36FE2E6F91FC11072, "%s(%d): Max number of MMS files reached!")
    TRC_MSG(FLDMGR_D5DF03404813B26CD721B344507C0384, "%s(%d): Failed to create message file <%s>")
    TRC_MSG(FLDMGR_2B32A7A3A11E0759D0F183098CFCC63F, "%s(%d): Failed to close message file <%s>")
    TRC_MSG(FLDMGR_C5D20A41E910C1BCD4BAB7CEE7395C42, "%s(%d): Requested to delete a file that was not found in MMT table <%d>")
    TRC_MSG(FLDMGR_DF45E5376CA6FA13606A9A380F0C84EB, "%s(%d): Failed to delete file, due unknown suffix!! <%d>")
    TRC_MSG(FLDMGR_AB242EC941C7888B712AB4DB219A9046, "%s(%d): Failed to recover notification (%d)!")
    TRC_MSG(FLDMGR_CDA88EB4B45F0AF3D6823ECD9AA33F4F, "MMS FSM FOLDER MGR: Received unknown signal %d")
    TRC_MSG(FLDMGR_3670A7CA6024827198E32675A5ED2822, "%s(%d): Warning: Dublicated messageId found during restore! %d ")
    TRC_MSG(FLDMGR_6E2A71C513B48EA77EE1CB6A79CC983D, "%s(%d): Warning:Low disk storage! only one msg can be stored %d ")
    TRC_MSG(FLDMGR_A4E45BE25E83CAA428B0FEDAD651E898, "%s(%d): Error: To many files in the folder to restore! %d ")
    TRC_MSG(FLDMGR_2656A7C781D283CF0E9F787AA38E848B, "%s(%d): Failed to read the MMT file, result=%d, bytes=%d!")
    TRC_MSG(FLDMGR_EF2053477F7A9F1CC8BD14FEE6152C96, "%s(%d): None of the MMT-files could be used due to checksum error or missing files (folder error). ")
    TRC_MSG(FLDMGR_97213837E74A60D3A990C374B6795B2D, "%s(%d): Failed to write the MMT file, result=%d, bytes=%d!")
    TRC_MSG(FLDMGR_BEDA2ADA722690BB0ED1D0B5566EEA4C, "%s(%d): Received MMT_OPERATION_FINISHED in wrong state %d")
    TRC_MSG(FLDMGR_B19F08580AFE68CB4482805855ADCB25, "%s(%d): Failed to create file name. Buffer overwritten.")
    TRC_MSG(FLDMGR_A069D645BE86BCED84B656F26742BF5C, "%s(%d): Remove file that couldn't be converted to msgId <%s>")
    TRC_MSG(FLDMGR_0122213C4C67B9E2DE8122668D005987, "%s(%d): Remove file <%s> that had no entry in MMT")
    TRC_MSG(FLDMGR_655B7A5734C6402F25B470DEE67BBF0E, "%s(%d): Remove file <%s> that had no suffix")
    TRC_MSG(FLDMGR_D73924E66D3A47A743F1CD7F7B8C2902, "%s(%d): Remove file <%s> with wrong suffix. Expected <%c>")
    TRC_MSG(FLDMGR_035E30D1305CF1F4BAB8F7D24CB8588A, "%s(%d): Remove file <%s> with wrong suffix.")
    TRC_MSG(FLDMGR_E45668EC42BB14D5F7CA387FF5E905B4, "%s(%d): asyncOperationStart Read operation failed Out of memory.")
    TRC_MSG(FLDMGR_D6304F886FD7235408C48E1720D2990D, "%s(%d): asyncOperationStart Write operation failed. Increase available memory.")
    TRC_MSG(FLDMGR_F90FB91FE447A35C7DB65F4FC09FC103, "%s(%d): File or directory specified in file rename operation could")
    TRC_MSG(FLDMGR_3F8FE4ECFDC6B14AF4170047C14015DA, "%s(%d): The path to the file or directory specified in file rename")
    TRC_MSG(FLDMGR_811A1437CCFFCC027B755F7A75A2DA59, "%s(%d): The specified filenames to FileRename operation is invalid . (invalid path). %s")
    TRC_MSG(FLDMGR_7B613045553D2AC77DF1770C58B3E80C, "%s(%d): Warning: To many files in the folder to restore! %d ")
    TRC_MSG(FLDMGR_B0BC96AAC4476AE8B1EC4A53AFFF985B, "%s(%d): Warning: MSF_FILE_READ_DIR Failed to read the")
    TRC_MSG(FLDMGR_7CB6B602B0DD360973E9ABDA97A83ABF, "%s(%d): Restore a Send or Received message file - msgId: (%s)")
    TRC_MSG(FLDMGR_3CEBDBCE5858049F9046D848C6DA4503, "%s(%d): Failed to restore message !")
    TRC_MSG(FLDMGR_55BCD3A74884E3DCBE1B4CCDB8575250, "%s(%d): Restore a Notification message file  - msgId: (%s)")
    TRC_MSG(FLDMGR_8ACB224892CED9D460AD13BDC1289E9A, "%s(%d): Failed to restore notification  !")
    TRC_MSG(FLDMGR_7BEB8099C3AE67F56FB3074C1B0C2DE2, "%s(%d): Restore a immediate retrieval notification message file  - msgId: (%s)")
    TRC_MSG(FLDMGR_B8D9896E62A6128FD921D76816E22555, "%s(%d): Failed to restore immediate notification  !")
    TRC_MSG(FLDMGR_1743EE7ABB4848296F07CF588E8626C2, "%s(%d): Restore a Read Report (PDU) message file  - msgId: (%s)")
    TRC_MSG(FLDMGR_C44CD3F36D723BB856284111E2915683, "%s(%d): Failed to restore read report orig pdu  !")
    TRC_MSG(FLDMGR_D211733AF102727827AAE4FA3EFEF63F, "%s(%d): Restore a Delivery Report (PDU) message file  - msgId: (%s)")
    TRC_MSG(FLDMGR_BA4E9327484759ED39C858E50ADB9502, "%s(%d): Failed to restore read delivery report!")
    TRC_MSG(FLDMGR_9D3FBCE16B3B85DF34181BA9A6D4D1F6, "%s(%d): Could not recover this file Not supported file type  - msgId: (%s)")
    TRC_MSG(FLDMGR_59736ECD1B22BD59C0777FD1D4D18B7B, "%s(%d): Remove garbage file msgId: %s!")
    TRC_MSG(FLDMGR_FF90D1D92723E980C831D3A042E99C9C, "%s(%d): Failed to remove file msgId: %s!")
    TRC_MSG(FLDMGR_689F2836FBDFB99CF2BA9271BF3958B1, "ERROR: Unable to create folder.")
    TRC_MSG(FLDMGR_DELETE_CARD_MMS_CARD_PLUG_OUT, "%s(%d): Fail to delete card msg as card not present\n")
    TRC_MSG(MASYNC_736AA7E57F3B3AC2F0CDB7D20DAB3308, "%s(%d): Insufficient memory during initialization")
    TRC_MSG(MASYNC_88905B0179B02A35C13152DE3A792FDF, "MMS FSM Async: initialized")
    TRC_MSG(MASYNC_5975B25B768694FC69037ABA5709EA2B, "MMS FSM ASYNC: Received TIMER_EXPIRED so kill without mercy.")
    TRC_MSG(MASYNC_3B4C0F70716834074C79EB3BF034A2AA, "%s(%d): received unknown signal %d")
    TRC_MSG(MASYNC_B6E8ADEE4237B4D9AFFADE08687C05AB, "MMS FSM Async: No free async operations")
    TRC_MSG(MASYNC_7542532AEB0C356E90A2FB2EB3BC5670, "%s(%d): Illegal open mode %d")
    TRC_MSG(MASYNC_931FF487F3913B5C9F3B92FA51A77322, "%s(%d): Failed to open file <%s>, %d")
    TRC_MSG(MASYNC_DA0B746C42DB20A6CBBF34401DC6A779, "%s(%d): Invalid async oper handle op=%d")
    TRC_MSG(MASYNC_474CA7F3EECC206B8C7568F28AC495D3, "%s(%d): Wrong handle or state for read, op=%d, state=%d")
    TRC_MSG(MASYNC_BB181C4C2CE439187166ABD22B9ACB3D, "%s(%d): File was not opened, check previous errors, op=%d, state=%d")
    TRC_MSG(MASYNC_8606FF210DB7DF3C237E013BDC43598D, "%s(%d): Wrong handle or state for readContinue, op=%d, state=%d")
    TRC_MSG(MASYNC_F5582A2365F37B05604404D714D49567, "MMS FSM Async: Terminate")
    TRC_MSG(MASYNC_43DC7120C388CADADC82B3703E7A5021, "%s(%d): Wrong handle or state for write, op=%d, state=%d")
    TRC_MSG(MASYNC_358A5A2A195321741A74C1789913DCBE, "%s(%d): Wrong handle or state for writeContinue, op=%d, state=%d")
    TRC_MSG(MASYNC_E92995BC353D6D26B6BBD3A731CEBB77, "%s(%d): Read returned %d")
    TRC_MSG(MASYNC_D4FD45BD4DCDB884139BD7371682204F, "%s(%d): Unhandled file error %d")
    TRC_MSG(MASYNC_233C80169081FC2385D6F959C3201D4A, "%s(%d): Failed to seek file %d, mode=%d, pos=%d, ret=%d")
    TRC_MSG(MASYNC_9AA9D6B0B8AF1672098ECCDE8BEBE5DE, "%s(%d): Write returned %d")
    TRC_MSG(MASYNC_5AAD0A2BE0991231D47AB9A0A5FCD32C, "%s(%d): Illegal operationType %d")
    TRC_MSG(MASYNC_1B0754A6338F4F2DC7B0EFA93E946749, "%s(%d): Couldn't find handle")
    TRC_MSG(MASYNC_3EE0AE506EDBC078427C7318C6310E15, "%s(%d): Operation in fsm %d not stopped. File is still open!")
    TRC_MSG(MASYNC_F04A54693E8FD2C3774261A6897AE790, "%s(%d): Unknown fileError %d")
    TRC_MSG(MCGET_BF6296316A4F3B8A251B5323136058CD, "MMS FSM COH GET: initialized")
    TRC_MSG(MCGET_AFB5945539129E2922791BAB46F183A2, "MMS FSM COH GET: MMS_SIG_COH_GET_CANCEL for msgId=%d")
    TRC_MSG(MCGET_6642C6DF87CE196D20F46CDB7D220906, "MMS FSM COH GET: MMS_SIG_COH_GET_MSG")
    TRC_MSG(MCGET_2480ACC10E2B4D9A9C5B9FED086294AE, "MMS FSM COH GET: Received MMS_SIG_COH_GET_CONNECTED")
    TRC_MSG(MCGET_2951FB4CC11537B82555A035EF7AA73F, "MMS FSM COH GET: Received MMS_SIG_COH_GET_DISCONNECTED")
    TRC_MSG(MCGET_677315FBD44042E05715D4547CAF9B39, "MMS FSM COH GET: Received MMS_SIG_COH_GET_RSP")
    TRC_MSG(MCGET_ABFE50686902685B4CF514BEE61DB819, "MMS FSM COH GET: Received MMS_SIG_COH_GET_PIPE_NOTIFY")
    TRC_MSG(MCGET_EE03B9AF60270FD81E19F954B8650B4F, "MMS FSM COH GET: Received MMS_SIG_COH_GET_DATA_COLLECTED")
    TRC_MSG(MCGET_4DE76B93AE1C3880EB5F01F98DD12F84, "MMS FSM COH GET: Received M_FSM_COH_GET_ASYNC_WRITE_FINISHED")
    TRC_MSG(MCGET_EFD9B827DB94171293AEE807F5C80F87, "MMS FSM COH GET: Received TIMER_EXPIRED")
    TRC_MSG(MCGET_D77D75DAF4768DFB4C6C7A13541D242B, "MMS FSM COH GET: received unknown signal")
    TRC_MSG(MCGET_20107BA9764305927DA01FB1F1A23501, "******* GET FSM active at terminate ******* %s %s %d")
    TRC_MSG(MCGET_0B24497DBE832A2B6F9E580DE03E7C79, "MMS FSM COH GET: terminated")
    TRC_MSG(MCGET_6CD5146198F6147C5BA1C28738F46D58, "GET collectData: No data returned (%d)")
    TRC_MSG(MCGET_18C66271C2C51555D8D785F15373E2DD, "GET collectData: Wrong return code from STK, error (%d)")
    TRC_MSG(MCGET_0E1A63F765CCCDEAAB6D4D9F10F461D1, "GET collectData: Wrong request ID %d != %d")
    TRC_MSG(MCGET_EF2E574CA2820C949EA469499F4B7A98, "GET collectData: Data expected in pipe, error (%d)")
    TRC_MSG(MCGET_ADE60FD9B248AD5D6D1BA2E0BDA7443D, "GET collectData: No pipe name returned, error (%d)")
    TRC_MSG(MCGET_0148C3460AEE32637E2507D898ADFDAB, "GET collectData: Failed to open the pipe <%s>")
    TRC_MSG(MCGET_79A3AF9F39018D8F0E2BA809E92BA60F, "GET collectData: readPipe failed")
    TRC_MSG(MCGET_7898A4B3F7521F79D41146EFA233FFF6, "GET collectData: starting retry")
    TRC_MSG(MCGET_11D89F536A8CE5E07E7F4156AEFD02A2, "====> GET Finished: Result=%d size=%d instance=%d uri=<%s>")
    TRC_MSG(MCGET_80697F6F5C70E8EB5A506731077BF443, "GET getInstance: instance out of bounds (%d)")
    TRC_MSG(MCGET_B981E34942E92D54909313ACD84061F7, "====> GET PDU uri=<%s> requestId %d")
    TRC_MSG(MCGET_EC4154ACE1B75465A6EADC3113ED4A44, "%s(%d): Illegal indata: Parameters are not given correct!")
    TRC_MSG(MCGET_B54F566A373548F3CDBF0A0B79379480, "%s(%d): We're BUSY! Return!")
    TRC_MSG(MCGET_A39957E29F9F56835083AC03612C4F8D, "%s(%d): instance out of bounds (%d)")
    TRC_MSG(MCGET_920DFF92864E376218C5296BD39F1081, "******* GET Retry ******* uri=<%s> transId=<%s> requestId=%d msgId=%d")
    TRC_MSG(MCGET_131B671D8FE3B4815F2BD2FAB5746CDB, "%s(%d): Wrong instance %d")
    TRC_MSG(MCGET_9EC67B86E45F83DABA2EA395EC34C3C1, "%s(%d): Couldn't establish connection %d. Retry!")
    TRC_MSG(MCGET_95FC27D2B9B23CFAC3772125B62D3509, "%s(%d): Couldn't establish connection %d")
    TRC_MSG(MCGET_E147B4E817A274CC8DDD239696C9FE5E, "%s(%d): Persistent storage is full %d")
    TRC_MSG(MCGET_671FD54AF5EB2CCC96AA851C7FE0C5B0, "%s(%d): Async operation failed %d")
    TRC_MSG(MCGET_20A23BC3783C2D3199376EC8694F3665, "%s(%d): Wrote only %d bytes out of %d")
    TRC_MSG(MCGET_B285EB4ED95C8EDF1B40DB11C0281532, "%s(%d): Wrong status from pipe")
    TRC_MSG(MCGET_F18012C7F29F5C637DDC969B46CBE428, "%s(%d): Pipe read error %d")
    TRC_MSG(MCGET_BFB59FC1E41CD70BEE4B8360147F183F, "%s(%d): No memory for async operation.")
    TRC_MSG(MCGET_D5FDE8BFD447A43B0333443D9CC0DF6B, "%s(%d): Unrecognized PDU!")
    TRC_MSG(MCGET_6E657A9347C366D8907713EA780DC47C, "%s(%d): Badly formatted PDU!")
    TRC_MSG(MCGET_70745BF060DCF7CD6A0A9AD90DF992CB, "%s(%d): No data X_MMS_MESSAGE_TYPE header tag")
    TRC_MSG(MCGET_B09A30D6B571119789B67044FDEEA54D, "%s(%d): Wrong message type (%d)")
    TRC_MSG(MCGET_D5F6F16EE3C0DD4D87BF52D45C955BCA, "%s(%d): No data MMS_DATE header tag")
    TRC_MSG(MCGET_5C2B968D2CDB5DB28336C1C221B1D34C, "%s(%d): No data MMS_CONTENT_TYPE header tag")
    TRC_MSG(MCGET_8F7810531A7994C63CD49615FBEFE34B, "%s(%d): Wrong retrieve status (%d)")
    TRC_MSG(MCNOTIF_53A5D871EB2A6AB753CA1C57F3E68131, "MMS FSM COH PUSH RECEIVE: initialized")
    TRC_MSG(MCNOTIF_196551D271031CF0EDA0D911F62E0B4E, "MMS FSM COH PUSH RECEIVE: Received MMS_SIG_COH_PUSH, simId:%d")
    TRC_MSG(MCNOTIF_058011AF6F0F21B0355CFDBA5562B593, "MMS FSM COH PUSH RECEIVE: Received MMS_SIG_COH_PUSH")
    TRC_MSG(MCNOTIF_D5FDE8BFD447A43B0333443D9CC0DF6B, "%s(%d): Unrecognized PDU!")
    TRC_MSG(MCNOTIF_6E657A9347C366D8907713EA780DC47C, "%s(%d): Badly formatted PDU!")
    TRC_MSG(MCNOTIF_A93854862AD47BEFBC24DDA9B9262B9D, "%s(%d): Not a valid pushed PDU!")
    TRC_MSG(MCNOTIF_32BD1AF4A828A5BD486D94CB4FAE3CE3, "MMS FSM COH PUSH RECEIVE: Received MMS_SIG_COH_NOTIFY_RESP")
    TRC_MSG(MCNOTIF_012DFA2773249F5605E7AD0173E09727, "%s(%d): Configured not to send NotifyResp.ind for notifications via SMS")
    TRC_MSG(MCNOTIF_8893AF768FEA37BCEC9639029C5DFACE, "%s(%d): Configured not to send NotifyResp.ind for notifications in restricted mode")
    TRC_MSG(MCNOTIF_F7B5F532946DD257D3D38DDDE072AE2F, "%s(%d): Couldn't create NotifyResp.ind!")
    TRC_MSG(MCNOTIF_D003DE50FFE351E0F5E2BFA8F282ACFB, "MMS FSM COH PUSH RECEIVE: Received MMS_SIG_COH_NOTIFY_POST_RSP")
    TRC_MSG(MCNOTIF_A9201E78CC9548D4C048274BB538E4E4, "MMS FSM COH PUSH RECEIVE: Post result (%d)")
    TRC_MSG(MCNOTIF_C6BAD77E7D16E165373783B17801AC73, "MMS FSM COH PUSH RECEIVE: received unknown signal")
    TRC_MSG(MCNOTIF_8FBD7D6F183DD243A144C85E28B724F4, "MMS FSM COH PUSH RECEIVE: terminated")
    TRC_MSG(MCONFIG_AC59697B89F442445630AF554FC20F07, "MMS FSM CORE CONFIG: initialized")
    TRC_MSG(MCONFIG_D625EFA0A9C6330531A1AA851BE1FA20, "MMS FSM CORE CONFIG: received unknown signal")
    TRC_MSG(MCONFIG_4480984512D6EB806634223EA82C03A7, "MMS FSM CORE CONFIG: terminated")
    TRC_MSG(MCONFIG_00C2C01232202F4C2F6669C03D275365, "(%s) (%d) Registry updated")
    TRC_MSG(MCONFIG_34F6E9982BDBD2E6CA77D037BFCE6D3F, "Value of Registry Network accound %d is changed from %d to %d.")
    TRC_MSG(MCPDU_69024FDA0344AFA7F54A25F1A8F69927, "Date conversion failed.")
    TRC_MSG(MCPDU_AF4E786647AA29A5565DCA4C578283CA, "Message Size conversion failed.")
    TRC_MSG(MCPDU_D900FD06E23DD6C32ED549B90503CE47, "Conversion of ReplyChargingSize failed.")
    TRC_MSG(MCPDU_00E4E2C6116C56E71D5DFA6E2AED0FE1, "mmsPduAppend: Long-integer conversion failed.")
    TRC_MSG(MCPDU_79DC4A03E3B520A7E858A21BC29C32E5, "%s(%d): NULL pointer (%d) or size error (%d) in PDU!")
    TRC_MSG(MCPDU_8065799103BB601FA6BDA196833D29F6, "%s(%d): TYPE error (%d) in PDU!")
    TRC_MSG(MCPDU_6FD8EC18C137D3A0ABEC0FF8953046F8, "%s(%d): TAG %d error in PDU!")
    TRC_MSG(MCPDU_85E151EB09E9E0D15D8B368CCC32371A, "%s(%d): PDU is invalid, size=%d, data=0x%x")
    TRC_MSG(MCPDU_77851905D4553F6297AC26506CBE923A, "%s(%d): PDU Type is invalid 0x%x")
    TRC_MSG(MCPDU_54089DB0C9C271244639CDF72F778E33, "%s(%d): No X_MMS_VERSION header tag")
    TRC_MSG(MCPDU_0EAE7250E924CD33D829CAC4CF9B3F48, "%s(%d): Couldn't create M-NotifyResp.ind!")
    TRC_MSG(MCPDU_B70C67F73A2AC90554EE3BB1BECE3194, "COH: skipApplicationHeaderString found 0x%02x at %d")
    TRC_MSG(MCPDU_19FD539BC7879E2FF7B67357D7247483, "%s(%d): skipString found no EOS within length.")
    TRC_MSG(MCPOST_A422CCF099B46A28776BFD17CBBBFCED, "%s(%d): No data X_MMS_RESPONSE_STATUS header tag")
    TRC_MSG(MCPOST_BE865D716358918006434AA89E5B4A0C, "%s(%d): MMSC didn't recognize PDU, response status (%d)")
    TRC_MSG(MCPOST_72009D71A7EAB403403FA17DA54F757A, "POST checkResponseMSendReq: No data returned (%d)")
    TRC_MSG(MCPOST_D5FDE8BFD447A43B0333443D9CC0DF6B, "%s(%d): Unrecognized PDU!")
    TRC_MSG(MCPOST_70745BF060DCF7CD6A0A9AD90DF992CB, "%s(%d): No data X_MMS_MESSAGE_TYPE header tag")
    TRC_MSG(MCPOST_B09A30D6B571119789B67044FDEEA54D, "%s(%d): Wrong message type (%d)")
    TRC_MSG(MCPOST_9C81D0A859418661090F9DA1204C3555, "%s(%d): Wrong response status (%d)")
    TRC_MSG(MCPOST_6E657A9347C366D8907713EA780DC47C, "%s(%d): Badly formatted PDU!")
    TRC_MSG(MCPOST_A8E6556AD9E56348D1B8A3B2BE18D556, "%s(%d): No data X_MMS_TRANSACTION_ID header tag")
    TRC_MSG(MCPOST_96D96A76312E979A3FFC869E88C114C1, "%s(%d): Wrong transaction ID (%s) != (%s)")
    TRC_MSG(MCPOST_8D409657201C6B9122E3D88B01B8F054, "%s(%d): No data X_MMS_RESPONSE_TEXT header tag")
    TRC_MSG(MCPOST_586D0AC78A63716AC1EF8BBB6D68F664, "%s(%d): No X_MMS_MESSAGE_TYPE header tag")
    TRC_MSG(MCPOST_37CCCAE67F8785ACBA9049D53954B81A, "%s(%d): Wrong PDU as response.")
    TRC_MSG(MCPOST_D55839488B6EBC16F62454F73AD124B1, "MMS FSM COH POST: initialized")
    TRC_MSG(MCPOST_7FAABF579AAB91568832C30FDE6C3BE9, "MMS FSM COH POST: Received MMS_SIG_COH_POST_DISCONNECTED")
    TRC_MSG(MCPOST_854486328C546551C15030D3D23254BA, "MMS FSM COH POST: MMS_SIG_COH_POST_CANCEL %d")
    TRC_MSG(MCPOST_C18D615384E97AFB0216D4DC9B659DAF, "MMS FSM COH POST: Received MMS_SIG_COH_POST_PIPE_NOTIFY")
    TRC_MSG(MCPOST_40A849C19E47E6A3DE13AF711B968917, "MMS FSM COH POST: Received TIMER_EXPIRED")
    TRC_MSG(MCPOST_04EF6D778102C806DAE166B3B22BC458, "MMS FSM COH POST: received unknown signal %d")
    TRC_MSG(MCPOST_C9BB9FAB0ECAC75A9B394A333478101D, "MMS FSM COH POST: Received MMS_SIG_COH_POST_RSP")
    TRC_MSG(MCPOST_84E48D01C0728E4CB5B02336A4872A03, "POST collectData: No data returned (%d)")
    TRC_MSG(MCPOST_EAC1E29E32BF5BA78F88E3D2B35B5B16, "POST collectData: Wrong return code from STK, error (%d)")
    TRC_MSG(MCPOST_5C6D24EA09E07E5668F50C3477B5207A, "POST collectData: Wrong request ID %d != %d")
    TRC_MSG(MCPOST_F4BAFD4D56C19D6A9C429E932F5A6E27, "POST collectData: Data expected in pipe, error (%d)")
    TRC_MSG(MCPOST_9D6612CA658B307CC64CAEEC33EEB67E, "POST collectData: No pipe name returned, error (%d)")
    TRC_MSG(MCPOST_F1DCC9C6899D1CA7E776BCE3FF70F19D, "POST collectData: Failed to open the pipe <%s>")
    TRC_MSG(MCPOST_23126D5485302EC5F3FCC861663D0072, "POST collectData: readPipe failed")
    TRC_MSG(MCPOST_02EAADADA19381CBCD8B4EC7FF0C68BC, "******* POST FSM active at terminate ******* %s %s %s%d")
    TRC_MSG(MCPOST_AED0CE77EC05F38AB32CE57E45274695, "MMS FSM COH POST: terminated")
    TRC_MSG(MCPOST_46C1D64E50FCF7AB9B9C545D5F03A27D, "%s(%d) Trying to delete wrong instance %d")
    TRC_MSG(MCPOST_481CF83C21DF4E69FEA5F744FF9E23F9, "====> POST deleting instance %d, requesting FSM %d, returnSig %d")
    TRC_MSG(MCPOST_DF5193BF24324D1523EAC57BBDB637C7, "      retries %d, transId <%s>, reqId %d")
    TRC_MSG(MCPOST_C199272F70D0F3E397801E1DED269341, "POST: Illegal type (%d)!")
    TRC_MSG(MCPOST_C2306005D8576D9D5409BC8ABF7D2B3A, "POST getInstance: instance out of bounds (%d)")
    TRC_MSG(MCPOST_C2046F7087C13D541D1D41C20BB40C14, "MMS FSM COH POST: Received MMS_SIG_COH_POST_ASYNC_READ_FINISHED")
    TRC_MSG(MCPOST_131B671D8FE3B4815F2BD2FAB5746CDB, "%s(%d): Wrong instance %d")
    TRC_MSG(MCPOST_671FD54AF5EB2CCC96AA851C7FE0C5B0, "%s(%d): Async operation failed %d")
    TRC_MSG(MCPOST_7FCA1810837724676B005902FD36A137, "%s(%d): Write operation failed.")
    TRC_MSG(MCPOST_A9002CF674B133D2D992B5131A17D85A, "MMS POST: Received MMS_SIG_COH_POST_CONNECTED, instance %d, result %d")
    TRC_MSG(MCPOST_0E7FAA294BD23587D58E4B71996122D9, "%s(%d): Couldn't establish connection %d, retry=%d")
    TRC_MSG(MCPOST_FA747DD36F301F53473BDC35348CF23A, "%s(%d): Couldn't establish connection %d. No more retries left.")
    TRC_MSG(MCPOST_3CBB62909CB3ACDE94A213100EEC0A85, "%s(%d): Received notify for unknown pipe handle <%d>")
    TRC_MSG(MCPOST_5346F43D1A5453627E0296BC617B4946, "%s(%d): Unexpected pipe event=%d, instance=%d")
    TRC_MSG(MCPOST_D9381B4506FE11F246299242489A09D9, "MMS FSM COH POST: Received MMS_SIG_COH_POST_DATA_COLLECTED")
    TRC_MSG(MCPOST_E9139BCECD2C1B3A30CFA333C7ABC106, "POST handleResponse: instance out of bounds (%d)")
    TRC_MSG(MCPOST_D2BB1006117BF523B7ED4AF310D29B95, "POST handleResponse: General failure res=%d, request ID=%d")
    TRC_MSG(MCPOST_A277495CC9A03347F41F9A062F44FE55, "POST: Can't be here. Already tested (%d)!")
    TRC_MSG(MCPOST_953A9E63B96895D4F30FAD443C7624CE, "====> POST Finished (%s): ")
    TRC_MSG(MCPOST_C17E27C7A52A04AC6CD468011AB679DB, "Result=%d instance=%d transId=<%s> msgId=%d bytesSent=%d")
    TRC_MSG(MCPOST_37E9B0B43CBF9EE3979715642156AF22, "====> POST MSG %d (%d bytes) to uri=<%s>, transId=<%s>, reqId=%d")
    TRC_MSG(MCPOST_215F61941ADE28CB4BE80D8DF1A881D0, "%s(%d): Wrote outside allocated memory!")
    TRC_MSG(MCPOST_225361D08530A4814161F0A07C7EDA98, "%s(%d): Couldn't create pipe <%s> for posting. Error %d.")
    TRC_MSG(MCPOST_47CF8D62EB62D2825D6165A84BA6DA6F, "MMS FSM COH POST: Received MMS_SIG_COH_POST")
    TRC_MSG(MCPOST_9D3FDED1F7B3634291263DCB90B900C8, "%s(%d): Parameter error (%d)")
    TRC_MSG(MCPOST_219CD6384AC5512C523A6F9614234358, "postMsgInit() received wrong simId:%d")
    TRC_MSG(MCPOST_EFE7ACF401ED6351157A7B9E6CE54814, "%s(%d): Illegal POST requested %d")
    TRC_MSG(MCPOST_B54F566A373548F3CDBF0A0B79379480, "%s(%d): We're BUSY! Return!")
    TRC_MSG(MCPOST_A39957E29F9F56835083AC03612C4F8D, "%s(%d): instance out of bounds (%d)")
    TRC_MSG(MCPOST_D9F73186C69CB6D53AD8F67FEE7B8F9D, "Illegal configuration: Missing scheme, server, port or URI.")
    TRC_MSG(MCPOST_B6E0315323EFF57EC808D205E60CCBC0, "%s(%d): Unable to create URL")
    TRC_MSG(MCPOST_84589173E887AF6E9EA15E6E936386DE, "%s(%d): Wrote outside allocated memory")
    TRC_MSG(MCPOST_43D0AD9B51E428BAA379E5C5C3C23E34, "====> POST %s (%d bytes) to uri=<%s>, instance=%d, transId=<%s>, reqId=%d")
    TRC_MSG(MCPOST_D1B4D59E17A5D867C380A52531B0FE9C, "******* POST Retry ******* uri=<%s> transId=<%s> reqId=%d %s%d")
    TRC_MSG(MCPOST_6BD28818860BD59CAEF487386BACD4A1, "%s(%d): Illegal type (%d)!")
    TRC_MSG(MCPOST_B285EB4ED95C8EDF1B40DB11C0281532, "%s(%d): Wrong status from pipe")
    TRC_MSG(MCPOST_F18012C7F29F5C637DDC969B46CBE428, "%s(%d): Pipe read error %d")
    TRC_MSG(MCPOST_D3B6FCC5B399AA392EDB8EA1644656CC, "%s(%d): Not enough memory.")
    TRC_MSG(MCPOST_1C959DC4E90DE1B6768259FBCAFE2292, "%s(%d): Couldn't find transaction ID in msg to POST.")
    TRC_MSG(MCPOST_CEB3C4742A52C8313F9751C73078C5F1, "%s(%d): Invalid transaction ID in msg to POST.")
    TRC_MSG(MCPOST_5D44751127E50D2B6A49BD64AAB88104, "%s(%d): Buffer overwrite.")
    TRC_MSG(MCPOST_2768AEC93B21CAF3602D5AE5313C13E8, "%s(%d): Failed to write to pipe. Error=%d.")
    TRC_MSG(MCPOST_9800F5BE80EC4289A395425D2D4BF6F6, "MMS POST: Written everything to STK, close PIPE.")
    TRC_MSG(MCSEND_8E24A2CE201B5F03F745B9215AEC9913, "MMS FSM COH SEND: initialized")
    TRC_MSG(MCSEND_8EA2EA41A3C45253C745663458806B9D, "MMS FSM COH SEND: Received MMS_SIG_COH_SEND, ")
    TRC_MSG(MCSEND_B0FD5317C5137C6602FF6DD23EC15D8A, "Wrong indata, return!")
    TRC_MSG(MCSEND_2E7C67E19B10D917556B254B8AF194D0, "We're BUSY! Return!")
    TRC_MSG(MCSEND_BD74A910B56628F6EBEE3D733D0CAFC2, "Sending MMS_SIG_COH_POST")
    TRC_MSG(MCSEND_1791C2781B7DC55E517934FF1B082DA9, "MMS FSM COH SEND: Received MMS_SIG_COH_SEND_POST_RSP (%d)")
    TRC_MSG(MCSEND_CDA720EE50F6119D0109BC50F21706DB, "MMS FSM COH SEND: POST failed %d!")
    TRC_MSG(MCSEND_8F2E0564F4E5886F7F1E0808F12ACB98, "MMS FSM COH SEND: No Server Msg ID returned!")
    TRC_MSG(MCSEND_C6B536054D32553C6EE38D21E342AA0C, "MMS FSM COH SEND: Couldn't store Server Msg ID (%s)")
    TRC_MSG(MCSEND_9AF0CDDFE813CB3BEADD04783732A48F, "MMS FSM COH SEND: received unknown signal")
    TRC_MSG(MCSEND_824548C05609D17E7904C06D2CD6B71B, "MMS FSM COH SEND: terminated")
    TRC_MSG(MCSEND_57D0A910C265DAE959E75F8AC93B97EE, "SEND getInstance: instance out of bounds (%d)")
    TRC_MSG(MCWAP_A11F82B48FD56332F52F70227A9A2C14, "[configureChannel],current sim id%d")
    TRC_MSG(MCWAP_215F61941ADE28CB4BE80D8DF1A881D0, "%s(%d): Wrote outside allocated memory!")
    TRC_MSG(MCWAP_7E2B2542811CEC48A80D931BB1078FD3, "[connectedRemove], mmsConnections:%d,fsm:%d,instance:%d")
    TRC_MSG(MCWAP_4709E49C26A9F5EDB8478141A0D7D7F7, "[connectedRemove], removed the entry, fsm:%d,instance:%d")
    TRC_MSG(MCWAP_E15EF9F69F353603206BE00ED1AF7F67, "%s(%d): Maximum connections already setup %d")
    TRC_MSG(MCWAP_HANDLE_START_MMS_SERVICE_SUSPENDED, "MC WAP MMS suspended")
    TRC_MSG(MCWAP_08677EC0381913862EE45C72DE1E0CB3, "No mmsConnection,Disc bearer")
    TRC_MSG(MCWAP_6E320A9BE672F6C2EA4A8A35362A236B, "%s(%d): too many consecutive calls %d")
    TRC_MSG(MCWAP_4FAA481E61F5C868C8D99CCC92E80287, "%s(%d): unknown state %d")
    TRC_MSG(MCWAP_E37F19708EAF73353E67EF7DFC80E3C5, "%s(%d): received START_RESPONSE in wrong state %d")
    TRC_MSG(MCWAP_337FCFC085148C9C7BAC6893332A73E1, "MCWAP [handleStop]: fsm:%d, instance:%d, signal:%d, state:%d")
    TRC_MSG(MCWAP_5DDD56B51D4D5B1E17FA61E954D38B62, "%s(%d): received STOP_RESPONSE in wrong state %d")
    TRC_MSG(MCWAP_AD5F7D7F6C68A258E7EC303747F9D49A, "%s(%d): Stopped stack result=%d")
    TRC_MSG(MCWAP_F47B939932F752991669CA4AB3B06449, "%s(%d): IDLE! Disconnecting.")
    TRC_MSG(MCWAP_9C19E89480B4546C5D62513417B79B60, "%s(%d): received TIMER_EXPIRED when not expecting it %d %d.")
    TRC_MSG(MCWAP_FBD147FE4F25FF416ABAB2C0FF6F299C, "%s(%d): Disconnect in %d deciseconds")
    TRC_MSG(MCWAP_1C0FF3ACB2EBA639B529F0FA48E5C915, "MMS: cancelling/cleaning up HTTP operation reqId=%d.")
    TRC_MSG(MCWAP_397B1F40DDB0CE0860DA93A3F3402261, "MMS POST: Request STK to POST %d bytes from pipe <%s>")
    TRC_MSG(MCWAP_59CC922D6621075BF46D7F836C724775, "%s(%d) Out of memory")
    TRC_MSG(MCWAP_54063D7C1F23379083E93CCE97A9D24F, "mmsWapHttpResponse(%d, %d, %d, %d, %d)")
    TRC_MSG(MCWAP_04F247454A5AFC9AFAD2512F6571065B, "%s(%d): instance not found for reqId=%d, maybe already cancelled.")
    TRC_MSG(MCWAP_C85C124EA627A00F983519BE85BFF438, "MMS FSM COH WAP: initialized")
    TRC_MSG(MCWAP_6627C988ADDA31BE7F78C42B53853B44, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_START, simId:%d")
    TRC_MSG(MCWAP_61F05A261CA59CCE971CB3369F03E80B, "StopIdleTimer")
    TRC_MSG(MCWAP_33E5C527345C61A01C4112B215F81D3B, "MMS FSM COH WAP: MMS_SIG_COH_WAP_START with error, simId:%d is not valid")
    TRC_MSG(MCWAP_1249B5CF47FE3DEA63562D4F995DFC09, "Invalid SimId,No mmsConnection,Disc bearer")
    TRC_MSG(MCWAP_0D7A69D368AC71469F941E8ECF923530, "MCWAP, handleStartInNormalCase")
    TRC_MSG(MCWAP_4D8F36E2E94FBC6896534B7C9DEB97C2, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_START")
    TRC_MSG(MCWAP_3D9A4AAA84CA0AE8DFD6690F8CC3CBB9, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_START_RESPONSE")
    TRC_MSG(MCWAP_2F2553039AC5FD91BB225B6D16D58C86, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_STOP, simId:%d, fsm:%d, instance:%d")
    TRC_MSG(MCWAP_CE2B4E18F57122041440EF4A3DE29AD0, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_STOP unexpectedly, simId:%d, fsm:%d, instance:%d")
    TRC_MSG(MCWAP_FEDB692C30578A50F144D54C5F4AA42F, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_STOP")
    TRC_MSG(MCWAP_61248E41B67B641445D860A92E690560, "MMS FSM COH WAP: Received MMS_SIG_COH_WAP_STOP_RESPONSE")
    TRC_MSG(MCWAP_EE16A68DA56CA50A4E9CE97317BA3943, "%s(%d): Received TIMER_EXPIRED %d")
    TRC_MSG(MCWAP_3B4C0F70716834074C79EB3BF034A2AA, "%s(%d): received unknown signal %d")
    TRC_MSG(MCWAP_96510AEEB48D2C7D1B70C9F127748A3D, "%s(%d): ===> %d connections active when terminating")
    TRC_MSG(MCWAP_44D75351CE07CE1C45ECE4C3816E1991, "%s(%d): Terminate! Disconnecting.")
    TRC_MSG(MCWAP_99756E2F85C7054DAB8F3A2D18FE67E3, "MMS FSM COH WAP: terminated")
    TRC_MSG(MCWAP_EF011A47CC698B87C057BD237A10463B, "%s(%d): Stack error (%d)")
    TRC_MSG(MCWAP_3CA96D664DCD88720EFADECD6405B905, "%s(%d): Unlisted MMS 1.1 Permanent Response Status (%d)")
    TRC_MSG(MCWAP_FBFA1EFDA585AC9666F9FC547599A830, "%s(%d): Unlisted MMS 1.1 Transient Response Status (%d)")
    TRC_MSG(MCWAP_E036A6D6E59BD0BD0A866567B8BDC3C6, "%s(%d): Unlisted MMS 1.0 Response Status (%d)")
    TRC_MSG(MCWAP_EC55B725F18A50C28509F394D5B4061E, "%s(%d): Unlisted MMS 1.1 Permanent Retrieve Status (%d)")
    TRC_MSG(MCWAP_29ED07F2478A56DADA8C97F46A84A60D, "%s(%d): Unlisted MMS 1.1 Transient Retrieve Status (%d)")
    TRC_MSG(MCWAP_8387CA3CC543EB242E2491E8BE81D00A, "%s(%d): Unlisted MMS 1.0 Retrieve Status (%d)")
    TRC_MSG(MCWAP_C66F406E5AC251A0FF76F4CD52E40684, "[mmsWapInsertNodeToStartQueue],simId%d, fsm:%d, instance:%d, sognal:%d")
    TRC_MSG(MCWAP_FA404E74170CB104A5E774893AB446FC, "[mmsWapRemoveStartReqFromWaitingQueue],fsm:%d,instance:%d")
    TRC_MSG(MCWAP_BF1941E9FB7614D4841090972FA88F67, "MCWAP,ActBearTimerStart")
    TRC_MSG(MCWAP_E272C537DB89168D9A65B7E3B4729DDC, "[handleWAPStartWaitingQueue]")
    TRC_MSG(MCWSP_38742859408149B09F2CBBCCD9339DFE, "createWspAcknowledgeIndMsg: Error in X-Mms-Message-Type")
    TRC_MSG(MCWSP_7C27E8B7D4EDC726E63FC32EFB21FFA0, "createWspAcknowledgeIndMsg: Error in X-Mms-Transaction-Id")
    TRC_MSG(MCWSP_AAB17FACFBCDBDC9E34A4722E26BB22C, "createWspAcknowledgeIndMsg: Error in X-Mms-Version")
    TRC_MSG(MCWSP_CF3839FBDBDE933C317A566859C91C12, "%s(%d): Error in X-Mms-Report-Allowed")
    TRC_MSG(MCWSP_02718C0DB434DF627E5800D44BC53623, "%s(%d): Transaction ID mandatory.")
    TRC_MSG(MCWSP_FC437266D764D3BBC109F6D0CB83955C, "%s(%d): Error in X-Mms-Message-Type")
    TRC_MSG(MCWSP_CABFC83A77D690EA335ADC3C92C75800, "%s(%d): Error in X-Mms-Transaction-Id")
    TRC_MSG(MCWSP_2F1F2F4C0C03027B81BC91E3CCC0B9D2, "%s(%d): Error in X-Mms-Version")
    TRC_MSG(MCWSP_8B358E1C38FF96EAA40CF05F46440C21, "%s(%d): Error in X-Mms-Status")
    TRC_MSG(MCWSP_E1194BA834F9432A2891185C16D3E45B, "%s(%d): Server Message ID is mandatory.")
    TRC_MSG(MCWSP_3C4EDE059C38643C8E27EE1B63D82384, "createWspReadReport: Failed copy From field")
    TRC_MSG(MCWSP_49870061CB4E9E0CCE95021BBFF107BD, "createWspReadReport: Failed to convert From field")
    TRC_MSG(MCWSP_638C9120042CDF4AB8260ADA1E455252, "createWspReadReport: Header size (%d) exceeded chunk size (%d).")
    TRC_MSG(MCWSP_C4D5CE5AAC456EE3AC6A1E27EC889603, "createWspReadReport: Invalid address size.")
    TRC_MSG(MCWSP_6374E0B1807C0E18EA6B5BC6CB4C0672, "%s(%d): Error in Message-Id")
    TRC_MSG(MCWSP_F1EA8638E6CE021FA827001D9D6EB47E, "createWspReadReport: Could not add To to header")
    TRC_MSG(MCWSP_1E7FAEB92116DC1D78F4040BDD602151, "createWspReadReport: Could not add From to header")
    TRC_MSG(MCWSP_ECE58AA5B03334C9F6A8BB3411BC8EFA, "createWspReadReport: Error in Date")
    TRC_MSG(MHANDLER_E0FFF3FE285BFFB5D84246D9A59DE446, "MMS FSM MMH UTILS: initialized")
    TRC_MSG(MHANDLER_1E924EF48DB3AB1321B93356446B41A7, "%s(%d): File not found !")
    TRC_MSG(MHANDLER_0E4498F7C3E83FD6040059873048E0B5, "The file to read header info from is empty!")
    TRC_MSG(MHANDLER_B9E72AAEF32550FDB29CCA9634DA48E9, "%s(%d): Insufficient memory during reading message. Increase available memory.!")
    TRC_MSG(MHANDLER_156773B584D31D52667D6FF187DFAADA, "******* MMH FSM active at terminate ******* ")
    TRC_MSG(MHANDLER_F0B0D16300A5DB3427633999806710EC, "MMS FSM MMH UTILS: terminated")
    TRC_MSG(MHANDLER_2E7C67E19B10D917556B254B8AF194D0, "We're BUSY! Return!")
    TRC_MSG(MHANDLER_FD911DD6BFF0D31742C85BF80D5994A4, "No free instances to create info list! ")
    TRC_MSG(MHANDLER_09F0E9F6C9427584A939456E8ABCC50D, "%s(%d): Illegal FSM, instance %d!")
    TRC_MSG(MHANDLER_07171F23A1D4C856A740BC09936275BC, "MMS FSM MMH: received unknown signal")
    TRC_MSG(MHANDLER_509EF4309C53B06942198C3A32F6E417, "MMS FSM MMH: Failed to parse requested report (PDU)")
    TRC_MSG(MHANDLER_6C196359131F5F160C781E8157AA4D02, "MMS FSM MMH: The report has no to or serverMsgId (PDU)")
    TRC_MSG(MHANDLER_D15C7BE656BEE1CC065C9464BC6BFA0F, "MMS FSM MMH: The report has no address or serverMsgId (PDU)")
    TRC_MSG(MHANDLER_8F9CA6D621C4ECF02890AE9387041200, "MMS FSM MMH: Failed to parse unknown message type Internal error (PDU)")
    TRC_MSG(MHANDLER_6C6B2BB2CE5EC87B2BD069FB08201B03, "%s(%d): Failed to read the file for header info, result=%d, bytes=%d!")
    TRC_MSG(MHANDLER_A38176D5B5209D3A1103F9E89CDF955B, "%s(%d): Failed to read the file for header info, Message type missing!")
    TRC_MSG(MHANDLER_E96D1FB804E93027AD80DEEE76B4DC43, "%s(%d): Failed to parse the file for header info for notification msg!")
    TRC_MSG(MHANDLER_BDAA8A31A380CA1BA516D7E0EB490F66, "%s(%d): Failed to parse the file for header info for msg!")
    TRC_MSG(MHANDLER_B63DAB61B43FEA78D9C62EB1A2F67B42, "%s(%d): Failed to parse the read report 1.1 pdu, corrupt data!")
    TRC_MSG(MHANDLER_F1417A776109D4B3E7D2FA8B3E57387A, "%s(%d): Can't read the header from this type of message type! message_type = %x")
    TRC_MSG(MHANDLER_AEA94A7A165670EE05CEA5D823D2E61E, "%s(%d): Received M_FSM_MMH_READ_HDR_FINISHED in wrong state, internal error!! %d")
    TRC_MSG(MHANDLER_780A4648B5D4FA6FF0CDD76407E93B98, "%s(%d):MMH FSM instance data could not be allocated")
    TRC_MSG(MHANDLER_8B77676DC169CAC5CDC3F5C2260EED61, "%s(%d):MMH FSM instance data is not set")
    TRC_MSG(MHANDLER_249A05F1FE2EF4EEEE2721A45D8043FB, "%s(%d):MMH FSM Multipart entry number exceeds than supported ")
    TRC_MSG(MHANDLER_C5B71A0E573F368575EFB32474D306E0, "%s(%d):MMH FSM Failed to start asynch file operation, write mode")
    TRC_MSG(MHANDLER_E3CE294A8F52E5910C956FC615A39BB9, "%s(%d):MMH FSM Failed to start asynch file operation, read mode")
    TRC_MSG(MHANDLER_94675C7087F2CBC9AAD623BCE60E35F6, "%s(%d):MMH FSM Failed to get the size of the file: msgId:%d")
    TRC_MSG(MHANDLER_5A8087FD4053EECAF81EBD3A054B23C8, "%s(%d):MMH FSM Message corrupt, failed to read entries ")
    TRC_MSG(MHANDLER_5FC0B173CEBECDDF95661A3BFC0059E5, "%s(%d):MMH FSM Message corrupt, header length ")
    TRC_MSG(MHANDLER_00082EBFE6A533115696AB66513CA98E, "%s(%d):MMH FSM Message corrupt, data length ")
    TRC_MSG(MHANDLER_59F64C40155DC870DA0EEBA51A18DDBB, "%s(%d):MMH FSM Message corrupt, Content Type ")
    TRC_MSG(MLCREATE_70C7183A9C764134BAD159A8E48E877E, "mcreateSetBodyPartHead: unable to createWspBodyPartHead")
    TRC_MSG(MLCREATE_BF7CE0F8FA2A767D9D4894EFF18F666B, "WriteDataToFile received unknown MSF_FILE_WRITE Result %i")
    TRC_MSG(MLFETCH_60673922352E0281DD810BFEBF73FB5E, "readDataFromFile: Error moving file pointer.")
    TRC_MSG(MLFETCH_5685FBED3D5AE372A6D89E8366D24B73, "readDataFromFile received unknown MSF_FILE_READ Result %i")
    TRC_MSG(MLFETCH_76CB8CF1774265867B55E96D46BAAA46, "readDataFromFile received zero read bytes from MSF_FILE_READ")
    TRC_MSG(MLFETCH_B06D5BA7E8CEB97F1A92B041BBCE86CC, "loadMessageInfoFile: file name is too long")
    TRC_MSG(MLFETCH_A010EA2ED620376E58399BAFD6725EDD, "loadMessageInfoFile: Received unknown state.")
    TRC_MSG(MLFETCH_BACDCDF0BDDABE849AEAC6DC27FCD60B, "getMmsHeader: Received unknown state.")
    TRC_MSG(MLFIELDC_9993B15BA31E3075212FD4B02E689C8B, "%s(%d): Content type w. wrong length")
    TRC_MSG(MLFIELDC_AF191BF367E0AB6B61C4951D648CFCF5, "Unable to allocate memory")
    TRC_MSG(MLFIELDC_2D776945D5B9C2970634779AB1329D37, "Unable to allocate memory in: createFromField()")
    TRC_MSG(MLFIELDC_34450813E0B6D70E5C66835A812FD7D4, "%s(%d): Failed to create address field")
    TRC_MSG(MLFIELDC_58798108B9B3BB97447192BF0B3EED0A, "%s(%d): Couldn't add address to header")
    TRC_MSG(MLFIELDC_7A0CF945963F2BB84835F98AA7748AB4, "%s(%d): time conversion failed.")
    TRC_MSG(MLFIELDC_5E8E0E027FFA6B5510AE7D5E9DC6454F, "%s(%d): Date larger than reserved space.")
    TRC_MSG(MLFIELDC_8CB605253B7373EC7F6964B7A98AB8DA, "%s(%d): Value length conversion for time failed.")
    TRC_MSG(MLFIELDC_152B9F87D140C99B25B26CD0C5E181D6, "%s(%d): Final conversion for time failed.")
    TRC_MSG(MLFIELDC_F57FC4845A4AC0E35922B5E6246132EE, "%s(%d): invalid charset")
    TRC_MSG(MLFIELDC_14643AA47DB69F6838F109CDA5527406, "%s(%d): Received unknown entry header type")
    TRC_MSG(MLFIELDP_1632B0FC8CB698F5F4972DEEA9235CF9, "%s(%d): illegal indata")
    TRC_MSG(MLFIELDP_A30B076F8A36436746E523BF13E59BE2, "parseContentType: Unable to convert size")
    TRC_MSG(MLFIELDP_C990D2BEE71197C42F7FB48B93C2865E, "parseContentType: Unable to parse ContentType params")
    TRC_MSG(MLFIELDP_9F94F25A33F7B2CE7921AA849429D32F, "Unable to allocate memory in: parseEntryHeader()")
    TRC_MSG(MLFIELDP_D0F59997A27DF45098DFDC6DDDE5AAED, "parseEntryHeader: Unable to allocate memory")
    TRC_MSG(MLFIELDP_3E064B40B38E0126E12CDE18B65851BA, "parseEntryHeader: Received an unsupported well-known field name")
    TRC_MSG(MLFIELDP_AE9B1FE1867E298E47F79BA01199C2D9, "skipUnknownEntryHeader: Received an unknown well-known field name")
    TRC_MSG(MLFIELDP_52BEA4D848F6D29FF4B0662F87FAEC33, "%s(%d): Illegal EncodedStringValue, length=%d")
    TRC_MSG(MLFIELDP_52410D8B8C42C45374BDD503BD72861A, "%s(%d): Illegal EncodedStringValue, length=%d, buf=%d")
    TRC_MSG(MLFIELDP_A1DE3B6DF16351A8DF5C89F495A0D3C9, "%s(%d): Error converting charset as Long-integer")
    TRC_MSG(MLFIELDP_93BF0FD3BB80EBFED7809681A5C3774D, "%s(%d): Field is to long ")
    TRC_MSG(MLFIELDP_4A38321F018DD595DDDB36DF0695FBDA, "%s(%d): Too small amount of data for a parameter")
    TRC_MSG(MLFIELDP_6C55F5D58176AADB6BBFA204EC42395B, "%s(%d): Unable to convert LongInteger to MSF_UINT32")
    TRC_MSG(MLFIELDP_75B7CFB640A6BDE5D9E056F4E39482A1, "parseContentTypeParams: Received unknown param.")
    TRC_MSG(MLFIELDP_E56E2C0954F6B2689D2E0446AB7E9767, "parseOneAddress: Failed to parse one address.")
    TRC_MSG(MLFIELDP_DDF14932C4FB28004CF2BFF5540A43D8, "%s(%d): No memory allocated ")
    TRC_MSG(MLFIELDP_BE7322707A2BEDCD844F9D834C52073E, "convertMediaType: Received unknown media value: %d")
    TRC_MSG(MLPDUC_D20E78206FFB40ABAF3768B1D1A47119, "createWspSendHeader: Failed to convert From field")
    TRC_MSG(MLPDUC_9D057C1685767614C5A2DC7DA1F0A9E0, "createWspSendHeader: Header size (%d) exceeded chunk size (%d).")
    TRC_MSG(MLPDUC_476FDB49187F6F4850D989C93D6DEA0A, "createWspSendHeader: Invalid address size.")
    TRC_MSG(MLPDUC_ADAFAC6B71BE2EA1830812290A02A929, "createWspSendHeader: Invalid subject size.")
    TRC_MSG(MLPDUC_A62E7968CCAC2F5C5CF54B439600CD02, "createWspSendHeader: Invalid message class size.")
    TRC_MSG(MLPDUC_489886797B9A93770E5C293AE605CD28, "createWspSendHeader: Failed to allocate memory")
    TRC_MSG(MLPDUC_9BCAA0515EE23481B5A6DBAFD01C3100, "createWspSendHeader: Error in X-Mms-Message-Type")
    TRC_MSG(MLPDUC_2C27E4C9DA429DBFCA7E09DCB7C5D8BC, "createWspSendHeader: Error in X-Mms-Transaction-Id")
    TRC_MSG(MLPDUC_A11054D5E11159B42BF6FC4EDBC6CBB9, "createWspSendHeader: Error in X-Mms-Version")
    TRC_MSG(MLPDUC_F87BBC7B39150A26537CD384F1E79CE8, "createWspSendHeader: Error in Date")
    TRC_MSG(MLPDUC_63A6C5E446B096132249DCE296B4248B, "createWspSendHeader: Could not add From to header")
    TRC_MSG(MLPDUC_751EB59B4ABBFE9AF65E31C597CC9D12, "createWspSendHeader: Could not add To to header")
    TRC_MSG(MLPDUC_20D87C24116AD2451097995DED09FD55, "createWspSendHeader: Could not add Cc to header")
    TRC_MSG(MLPDUC_BA8D2C764D1FA1B55F8949D198B9EA6F, "createWspSendHeader: Could not add Bcc to header")
    TRC_MSG(MLPDUC_C3C1CC25BD2D9B7CA90B1E1002B3D6C7, "createWspSendHeader: Could not encode subject string")
    TRC_MSG(MLPDUC_DD75EA252390914D907D5C6CA3DA23FE, "createWspSendHeader: Could not add Subject")
    TRC_MSG(MLPDUC_BC1EC3F01DF390CF6B585518ECB0AFEC, "createWspSendHeader: X-Mms-Message-Class")
    TRC_MSG(MLPDUC_24C4E2BB4BDB473C447E21E718A5AEDC, "createWspSendHeader: X-Mms-Expiry conversion failed.")
    TRC_MSG(MLPDUC_493479258FA14C98900EB2B6CDE238AF, "createWspSendHeader: Error in X-Mms-Expiry")
    TRC_MSG(MLPDUC_0F679E760B704CA298179EA34EA25FDA, "createWspSendHeader: X-Mms-Delivery-Time error.")
    TRC_MSG(MLPDUC_39221FB5D9DA6DB60B74B4A8C962B93C, "createWspSendHeader: Error in X-Mms-Delivery-Time")
    TRC_MSG(MLPDUC_BEBDCE5EF26078ABD90F1E032EA38360, "createWspSendHeader: Error in  X-Mms-Priority")
    TRC_MSG(MLPDUC_5F8BBB2A6710317F7E33B91B10FDA8F0, "createWspSendHeader: Error in X-Mms-Visibility")
    TRC_MSG(MLPDUC_A59AE7CE6244C40FDFADFB2CD72017C3, "createWspSendHeader: Error in X-Mms-DeliveryReport")
    TRC_MSG(MLPDUC_B012591736F342715FAAC8FE602B96B6, "createWspSendHeader: Error in X-Mms-Read-Reply")
    TRC_MSG(MLPDUC_2173530926ACCA4713BEE67D358545F8, "createWspSendHeader: Error in X-Mms-Reply-Charging-Id")
    TRC_MSG(MLPDUC_462FFD6A8388A0D2144547C0442894DF, "createWspSendHeader: X-Mms-Reply-Charging-Deadline conversion failed.")
    TRC_MSG(MLPDUC_8A3D1ED6470631EA8F50716C59A65FBB, "createWspSendHeader: Error in X-Mms-Reply-Charging-Deadline")
    TRC_MSG(MLPDUC_75A7BAB27DE5D47E030F756E8E0E2B7A, "createWspForward: Error in X-Mms-Reply-Charging-Size")
    TRC_MSG(MLPDUC_AB542BACACE37A6CC3701D0DE942A6AC, "createWspSendHeader: Content-Type conversion failed.")
    TRC_MSG(MLPDUC_219C37A647D646AB91830A54265EA9F2, "createWspSendHeader: Error appending Content-Type")
    TRC_MSG(MLPDUC_FE68C042F194F5DF09C8A7F4129F4BCA, "createWspBodyPart: Invalid entry headers")
    TRC_MSG(MLPDUC_2F97F1082B13E413BD94FDEA0B6C774E, "createWspBodyPart: Error creating contentType")
    TRC_MSG(MLPDUC_29CF280CAD151F31BEC4E2AF61015EB2, "createWspBodyPartHead: Error creating entry headers")
    TRC_MSG(MLPDUC_040FE13954D19B68E9D02B7353F4C09D, "createWspForward: Failed to convert From field")
    TRC_MSG(MLPDUC_F2A0AE8EC0569D38CB5685D8C3CF8706, "createWspForward: Header size exceeded chunk size ")
    TRC_MSG(MLPDUC_5150017A3F8FCA72BFEB176E0C3AA717, "createWspForward: Invalid address size.")
    TRC_MSG(MLPDUC_7D6687593670E32BBB195930C06812F2, "createWspForward: Content Location.")
    TRC_MSG(MLPDUC_F57785C5435E2409BA44C7EED97ADAE5, "createWspForward: Failed to allocate memory")
    TRC_MSG(MLPDUC_F63921713FC0829733670867DB2DE37F, "createWspForward: Error in X-Mms-Message-Type")
    TRC_MSG(MLPDUC_D29B4E645AE06EC6F1B0D8D6B33BEFC7, "createWspForward: Error in X-Mms-Transaction-Id")
    TRC_MSG(MLPDUC_F31426CCB48D3F968E4C8A80D4A599C9, "createWspForward: Error in X-Mms-Version")
    TRC_MSG(MLPDUC_2D0483BFAA064D3685CA044B6E25CE1B, "createWspForward: Error in Date")
    TRC_MSG(MLPDUC_EE727F44DF3460FD4A55266FDD1B01B3, "createWspForward: Could not add From to header")
    TRC_MSG(MLPDUC_EBD90AAAEC11BCB4C0CCE4B3DA8EA01A, "createWspForward: Could not add To to header")
    TRC_MSG(MLPDUC_D38AAABE0712DD3B3F1E4D3584CCF793, "createWspForward: Could not add Cc to header")
    TRC_MSG(MLPDUC_123788B8DDF974672813B970D2F374C5, "createWspForward: Could not add Bcc to header")
    TRC_MSG(MLPDUC_2B55DF6F45FCB5DCFA5E0216FA2A1C8F, "createWspForward: X-Mms-Expiry conversion failed.")
    TRC_MSG(MLPDUC_ECA0E2014E56CC633C0268F831EC707C, "createWspForward: Error in X-Mms-Expiry")
    TRC_MSG(MLPDUC_A2E98731FBE10C1339CCC64CA1F4151B, "createWspForward: X-Mms-Delivery-Time error.")
    TRC_MSG(MLPDUC_4A9CDBAF062B44BE20AD9738313361F0, "createWspForward: Error in X-Mms-Delivery-Time")
    TRC_MSG(MLPDUC_CF3839FBDBDE933C317A566859C91C12, "%s(%d): Error in X-Mms-Report-Allowed")
    TRC_MSG(MLPDUC_0400D9B14364357635B0542514A1458C, "createWspForward: Error in X-Mms-Read-Reply")
    TRC_MSG(MLPDUC_F99856A2BA0D1061C897C681892BF3ED, "createWspForward: Could not add Content Location")
    TRC_MSG(MLPDUP_4F28A2A7683078C366E3C00193B7D693, "%s(%d): Supplied parameter not correct.")
    TRC_MSG(MLPDUP_AC437507BFE3B205C7FD2DAF4EC7981A, "%s(%d): Invalid version.")
    TRC_MSG(MLPDUP_C196FB0AC243CE2C858CA362407EE764, "Unable to allocate memory in: parseMmsNotification()")
    TRC_MSG(MLPDUP_F5C31D3B463AD62FBAD3946C2103BF69, "parseMmsNotification: Invalid message class.")
    TRC_MSG(MLPDUP_B0864E6BFEED3254B56A5FE59B12F7E0, "%s(%d): Invalid subject.")
    TRC_MSG(MLPDUP_B6A8D67B985878B88D442BE1A5BD7B62, "%s(%d): No X_MMS_TRANSACTION_ID tag")
    TRC_MSG(MLPDUP_548A21B3EC66CC80CCDA0C788543F7E6, "%s(%d): Unable to convert expiry time.")
    TRC_MSG(MLPDUP_B70488DCFC7595275ECE331898D22CAE, "%s(%d): Unknown token for expiry time.")
    TRC_MSG(MLPDUP_AC4ADA5F9D6CDFE6F838677A1FDE070F, "parseMmsNotification: Invalid content location -- hostname mismatch")
    TRC_MSG(MLPDUP_E8368DF515147030956D943013BAD0E8, "parseMmsNotification: Invalid content location.")
    TRC_MSG(MLPDUP_19D83C3FF917D3DE9901D0B2D6FC2ECB, "%s(%d): Unable to convert charging deadline.")
    TRC_MSG(MLPDUP_A0E8F8DF0769DFD514BE174EEA8C9535, "%s(%d): Unknown token for charging deadline.")
    TRC_MSG(MLPDUP_6612FA6386511A82E91343347D05F1D3, "%s(%d): Reply-Charging-Size not found.")
    TRC_MSG(MLPDUP_64FB529A4F384665BDCA81A08DC27983, "%s(%d): Memmory not allocated!")
    TRC_MSG(MLPDUP_38AF7377ABFF41ADF3D7E8E4CD70C956, "%s(%d): Unable to parse TO in delivery report.")
    TRC_MSG(MLPDUP_2A58AE117392A45E2A68E925A677FB5D, "parseMmsHeader: Invalid input parameters.")
    TRC_MSG(MLPDUP_A72FD610913CA8C26C5545057C15D56B, "parseMmsHeader: Invalid message, message type not found.")
    TRC_MSG(MLPDUP_B0677323FF6F610BD3D8EFDB2D72359E, "parseMmsHeader: Invalid message, from address not found.")
    TRC_MSG(MLPDUP_E15639EABD2AAAE758AA8D0D0CAD83CB, "parseMmsHeader: Invalid message, version not found.")
    TRC_MSG(MLPDUP_D86DBE03C014E651EEDCF57D55D39E29, "parseMmsHeader: Invalid message, date not found.")
    TRC_MSG(MLPDUP_1C3C31C462F0BADDA6266CC282266FDB, "parseMmsHeader: Invalid content type.")
    TRC_MSG(MLPDUP_427329C2EE9DD92AE104104D528EAACB, "parseMmsHeader: Failed to encode .")
    TRC_MSG(MLPDUP_516D98FFD6E393A53834466330E235B5, "parseMmsHeader: Unable to allocate memory.")
    TRC_MSG(MLPDUP_526C3867DCC554DECCC5CD34893887E0, "Unable to allocate memory in: parseMmsHeader()")
    TRC_MSG(MLPDUP_80217158EC7ACDA2BE780812D663156C, "parseMmsHeader: Server message id not found.")
    TRC_MSG(MLPDUP_9B08853BCF82AB8D6F237DA83DCCAA1E, "%s(%d): getPrevSentBy Indata was NULL.")
    TRC_MSG(MLPDUP_89C1C9B936A49CB8FCA4CBD31DD2CF8F, "%s(%d): getPrevSentDate Indata was NULL.")
    TRC_MSG(MMAIN_F818C303B1BCC25278F950BCDCAD5831, "MMS Main received EXECUTE_COMMAND.")
    TRC_MSG(MMAIN_EE16A68DA56CA50A4E9CE97317BA3943, "%s(%d): Received TIMER_EXPIRED %d")
    TRC_MSG(MMAIN_15AC7F049F16B5FDF626F747543AC2E8, "MMS FSM CORE MAIN: initialized")
    TRC_MSG(MMAIN_26AFA01CD22EDEF4F3266300A9A46D41, "MMS FSM CORE MAIN: terminated")
    TRC_MSG(MMAIN_8900AF1DA673029EDA6EA066769F9084, "MMS FSM CORE MAIN: ASYNC failed. Terminating...")
    TRC_MSG(MMAIN_F9AE23081EB540D06396C8E0F9517C16, "%s(%d): Received unexpected level %d")
    TRC_MSG(MMSREC_75A49701306D102C9D9A08A1B6402809, "recCreateMessage(void)")
    TRC_MSG(MMSREC_59CC922D6621075BF46D7F836C724775, "%s(%d) Out of memory")
    TRC_MSG(MMSREC_FCE8B81084CB5829184AB575235A54BC, "recCreateMessageDone(%d)")
    TRC_MSG(MMSREC_52DC04A95349F70935250AEF24A5120C, "recDeleteMessage(%d)")
    TRC_MSG(MMSREC_93DCB24A2F4746C3A6BC262CA5052DEB, "recForwardReq - sending forward req called")
    TRC_MSG(MMSREC_27F3DA09204CD7DD6AB8DE3AC0C5A031, "recGetMessageIdList(%d,%d,%d)")
    TRC_MSG(MMSREC_A0AD2A3865C5F5827FCBE74B639A3B76, "recGetMessageInfo(%d)")
    TRC_MSG(MMSREC_9F4175BA41D0F71425F2082BBA3F2C82, "recGetNumberOfMessages(%d)")
    TRC_MSG(MMSREC_7BA44BAA0F080B2B32108BFE23878997, "recMoveMessage(%d,%d,%d,%d,%d)")
    TRC_MSG(MMSREC_RECPUSH_DUALSIM, "recPush( %d, <data>, simId:%d)")
    TRC_MSG(MMSREC_RECPUSH, "recPush( %d, <data>)")
    TRC_MSG(MMSREC_3E9DD340D002694F283D23ECE7E12ADA, "MMSc_push: No data received, size %d, ptr %d .")
    TRC_MSG(MMSREC_05754FF402804D6FE88BA5BD15C661E0, "recRetrieveCancel(%d)")
    TRC_MSG(MMSREC_C45F407CFF7ADB42D63B7281F4C004B3, "recRetrieveMessage(%d)")
    TRC_MSG(MMSREC_62B681E745337BC85D9133C3317211E7, "Max no of msg reached, retrieve op. is not handled ")
    TRC_MSG(MMSREC_F6FEF08BD8BD57DD4B996B68F1A80D05, "recSendCancel(%d)")
    TRC_MSG(MMSREC_7ADC3930DC466266B912F8B9156C92B5, "recSendMessage(%d)")
    TRC_MSG(MMSREC_13D8B5507E6CE1ADE3E11ECA090A9DF2, "recSendReadReport(%d)")
    TRC_MSG(MMSREC_E44C42FC47FED6D49E573740FA6681B5, "recGetReport(%d)")
    TRC_MSG(MMSREC_47974F78AC29CDDE9377D508D0A6036E, "%s(%d) Wrong file type for get report")
    TRC_MSG(MMSRPL_AA5CA53563E2980AA344B7D7F856EFFD, "%s(%d): No sender module.")
    TRC_MSG(MMSRPL_0C607E82F7E732A5E2D43AB78E761104, "%s(%d): signal send failed.")
    TRC_MSG(MMSRPL_7C6C5CB5C722371433C7222564DCC4B1, "%s(%d): Conversion failed.")
    TRC_MSG(MMS_CONT_41E900F86A1D0C0FC6390C6050EA844E, "MMS FSM CONT: Failed to queue content notification")
    TRC_MSG(MMS_CONT_DEB40C4C9798BB878D2E253C6506F835, "MMS FSM CONT: Failed to open pipe")
    TRC_MSG(MMS_CONT_D3D3F68EAEFDA0D812ED235D14AB1CF5, "MMS FSM CONT: Busy")
    TRC_MSG(MMS_CONT_BD11D55B102F9564B99350985BD1DD31, "%s(%d): Pipe open error %d")
    TRC_MSG(MMS_CONT_119D44C9E39E608FA52B10FAFD09ED6C, "MMS FSM CONT: Failed to get status from pipe")
    TRC_MSG(MMS_CONT_B285EB4ED95C8EDF1B40DB11C0281532, "%s(%d): Wrong status from pipe")
    TRC_MSG(MMS_CONT_B4E632993C403B7586FAD37C9436747B, "We receive one unexpected MMS push")
    TRC_MSG(MMS_CONT_F18012C7F29F5C637DDC969B46CBE428, "%s(%d): Pipe read error %d")
    TRC_MSG(MMS_CONT_C32A3E3D7100FE15075B73703C6628C0, "%s(%d): Unexpected pipe notification %d")
    TRC_MSG(MNOTIFY_5FDBD53EDA809E29BD94B5D95034D1A4, "MMS FSM MSR NOTIFY: M_FSM_MSR_NOTIFY is already initialized")
    TRC_MSG(MNOTIFY_C0710BA871976C6B87D5B933BAC8E9BD, "MMS FSM MSR NOTIFY: initialized")
    TRC_MSG(MNOTIFY_FA0390FACB13F65CC8FD983F070FEB78, "MMS FSM MSR NOTIFY: MSR_notifyTerminate")
    TRC_MSG(MNOTIFY_B6A8D67B985878B88D442BE1A5BD7B62, "%s(%d): No X_MMS_TRANSACTION_ID tag")
    TRC_MSG(MNOTIFY_B831874CC95477D3FEC9C43A658705D9, "%s(%d): No memory. I'll die!! please restart")
    TRC_MSG(MNOTIFY_6B0C05398EC7E09C3CDDE0F634A116B0, "MMS FSM MSR NOTIFY: reserve disk space, %d bytes in folder %d")
    TRC_MSG(MNOTIFY_18D7B23BD5239CDE0996981361A96192, "%s(%d): Received read report is corrupted")
    TRC_MSG(MNOTIFY_MMS_SUFFIX_DELIVERYREPORT, "%s(%d): Received Delivery report is corrupted")
    TRC_MSG(MNOTIFY_6CB8CB6751779100A2288AD4ABD497F5, "%s(%d): Internal error wrong pdu type")
    TRC_MSG(MNOTIFY_CFBEA4620C2AFDD3228DEEE5DFBDD508, "%s(%d): PDU is corrupt X_MMS_TRANSACTION_ID tag")
    TRC_MSG(MNOTIFY_FBAA250496CE58485772075E24279B9B, "%s(%d): Received read report is corrupted %d")
    TRC_MSG(MNOTIFY_03C4390D06689BB2BA885B6952ECC6CD, "%s(%d): Internal error wrong pdu type  %d")
    TRC_MSG(MNOTIFY_EA9A6F02600F5EE1E97698DBF43CE556, "%s(%d): Faulty roaming mode set!")
    TRC_MSG(MNOTIFY_ED2D1C70406F5A9A9893FF28EBF5A671, "%s(%d): No X_MMS_TRANSACTION_ID passed")
    TRC_MSG(MNOTIFY_8D15CBF2F548DDEE1C109288D3E96809, "%s(%d): Nofitication silently discarded!")
    TRC_MSG(MNOTIFY_9CD7252CFCD759976477284F1318E6F6, "%s(%d): Memory allocation failed!")
    TRC_MSG(MNOTIFY_B5B313E4F3FC255CC22FADD428D1ACCD, "%s(%d): Parse Notification failed %d!")
    TRC_MSG(MNOTIFY_9E31E856276EF607B854880469D9783F, "%s(%d): Notification rejected in notification discarding mode!")
    TRC_MSG(MNOTIFY_0675A65387D3A3C9AC738F9A263DCCA8, "%s(%d): Notification rejected in roaming!")
    TRC_MSG(MNOTIFY_E8FB1B7277AC4B4CA051ABFFE6DD41F8, "%s(%d): Notification rejected due to anonymous!")
    TRC_MSG(MNOTIFY_A42070E658F79F80AA754EDF95D7E9F6, "%s(%d): Notification rejected due to advertisement!")
    TRC_MSG(MNOTIFY_0313638528283BC5D30713D9CBE5234A, "%s(%d): Notification rejected!")
    TRC_MSG(MNOTIFY_D61F4726A4148335791BE6A563A75F94, "MSR Notify FSM, Received MMS_SIG_MSR_NOTIFICATION ")
    TRC_MSG(MNOTIFY_B112CE63C005D51E44031E9EA53F63BF, "MSR Notify FSM, max no of msg reached, notification is not handled ")
    TRC_MSG(MNOTIFY_87E1AC5EF0BD623D26426F3C8FAC04BA, "MSR Notify FSM, Received unsupported notification ")
    TRC_MSG(MNOTIFY_671FD54AF5EB2CCC96AA851C7FE0C5B0, "%s(%d): Async operation failed %d")
    TRC_MSG(MNOTIFY_1943A586A4643789044734C19E46EF63, "MSR Notify FSM, Couldn't remove file")
    TRC_MSG(MNOTIFY_D5CD45FFDD7011F138E67FB3A4D350FA, "MSR Notify FSM, Error: Received unsupported sig ")
    TRC_MSG(MRECEIVE_9D00AD8EA029720919AD8DAE4148DC26, "MMS FSM MSR RECEIVE Failed to set file size to msgId (%d).")
    TRC_MSG(MRECEIVE_E84EB5299B26CCCF274E1E13951C146F, "MMS FSM MSR RECEIVE Failed close file handle(%d).")
    TRC_MSG(MRECEIVE_B987F0477CB674A4ED5EB42C711B6DEB, "MMS FSM MSR RECEIVE Failed to open msgId (%d).")
    TRC_MSG(MRECEIVE_47BE850BE6C208040DEB8ABA736509F9, "MMS FSM MSR RECEIVE: initialized")
    TRC_MSG(MRECEIVE_1825334D0557523502308505D3173858, "%s(%d): Couldn't allocate memory")
    TRC_MSG(MRECEIVE_12DE08AA33303AF492011EECEBCD7D01, "%s(%d): Couldn't create PDU")
    TRC_MSG(MRECEIVE_POST_ACKNOWLEDGE_IND, "MMS FSM MSR RECEIVE:During post Acknowledge Ind MMS SERVICE is SUSPENDED")
    TRC_MSG(MRECEIVE_IMMEDIATE_RETRIEVAL_DONE, "%s(%d): immediateRetrievalDone Result is %d\n")
    TRC_MSG(MRECEIVE_IMMEDIATE_RETRIEVAL_DONE1, "%s(%d): Not able to Promote Notif To Delayed\n")
    TRC_MSG(MRECEIVE_88B926633A0AE01863483B04484A3C10, "MMS FSM MSR RECEIVE: delete unused file %d")
    TRC_MSG(MRECEIVE_C37C99416D41A18A056711A0C4FD62FF, "MMS FSM MSR RECEIVE: reserve disk space, %d bytes in folder %d")
    TRC_MSG(MRECEIVE_9F06AF4D0D10E99336B2574049DF78C5, "MMS FSM MSR RECEIVE: MMS_SIG_MSR_RECEIVE_CANCEL")
    TRC_MSG(MRECEIVE_AB4998D29609FB350274DBEC0F1497BE, "MMS FSM MSR RECEIVE: MMS_SIG_MSR_RECEIVE_DELAYED")
    TRC_MSG(MRECEIVE_FE8C5FECFE297E5440360469161EE624, "%s(%d): MMS_RESULT_INVALID_EXPIRY_TIME: 0x%x - 0x%x")
    TRC_MSG(MRECEIVE_931B69AAB95E674D3C9085C1EE4F43DE, "Handle %d.q in delay retrieval mode")
    TRC_MSG(MRECEIVE_0F1AC2BA3847FD8F7EBA4776073E3565, "%s(%d): Folder Manager failed %d.")
    TRC_MSG(MRECEIVE_054355B0DC8D5756125F894D639351A4, "MMS FSM MSR RECEIVE: Signal error, received no result.")
    TRC_MSG(MRECEIVE_F77D93989C752EA2CA22A4A7BDB343AD, "%s(%d): Message move failed, message will remain invisible %d")
    TRC_MSG(MRECEIVE_88941420C2B07082708678FBF630297D, "MMS FSM MSR RECEIVE: Post of M-Acknowledge.ind failed %d")
    TRC_MSG(MRECEIVE_CE33352DD482A30F1017B7A30EDDD5DD, "%s(%d): Deletion failed %d")
    TRC_MSG(MRECEIVE_9C99DC8DABFA632EFE030DCBD0EDC1F8, "MMS FSM MSR RECEIVE: received unknown signal %d")
    TRC_MSG(MRECEIVE_6762E821C9E98E3F60E77B3BBB645FE6, "MMS FSM MSR RECEIVE: terminated")
    TRC_MSG(MRECEIVE_6577A826559D011E71BFE2FA3F4032C3, "%s(%d): No immediate retrieval is started while doing another retrieval.")
    TRC_MSG(MRECEIVE_63E900B74FA0C4896E78BB6E0F77186D, "%s(%d): No immediate retrievalsRetrieval.")
    TRC_MSG(MRECEIVE_MMS_DELETE_UNUSED_IMMEDIATE_NOTIF, "In function mmsDeleteUnusedImmediateNotif Delete notification with msgId %d result is %d")
    TRC_MSG(MREPORT_49CEF4DEA0349AC0C635E7C4BFD3B8F2, "Deleting a read report, that could not be built (%d)")
    TRC_MSG(MREPORT_59CC922D6621075BF46D7F836C724775, "%s(%d) Out of memory")
    TRC_MSG(MREPORT_91D35174168FD3ADE5D45206B6CA518A, "Failed to parse header for the read report: MMS_SIG_MSR_CREATE_RR")
    TRC_MSG(MREPORT_1FED7C64B740BD3FB637E2783FB22CF6, "Not allowed to create Read Report for this message")
    TRC_MSG(MREPORT_AC35302710E093BD51C3E64ECBD20BFD, "Failed to get GMT. Let MMSC set Date in 1.1 read report.")
    TRC_MSG(MREPORT_C3E663FC749AADEF5E6F34CEED58D0A5, "Failed to create a file for the read report: MMS_SIG_MSR_CREATE_RR")
    TRC_MSG(MREPORT_F01F83158172B86FAB31BB6F8CE58776, "Failed to get GMT. Let MMSC set Date in 1.0 read report header.")
    TRC_MSG(MREPORT_B7C863176DE88DC6D4B2D03CA7B1A10C, "%s(%d): Could not message file for the read report")
    TRC_MSG(MREPORT_73B95F1A31B3C16ED2F073ABE2E51368, "%s(%d): Unable to encode Read report header")
    TRC_MSG(MREPORT_EA324A0A1B72425BC356D3D861960D82, "%s(%d): Failed to create a WSP coded header.")
    TRC_MSG(MREPORT_6D151C1CE1D7E79BEE0079B2D5913274, "%s(%d): Unable to create Read report body")
    TRC_MSG(MREPORT_715D701E790C594061E7E4860625E209, "%s(%d): Failed to WSP code the RR message!")
    TRC_MSG(MREPORT_7C6AF0DBF38066184AA2479D4A00FADA, "%s(%d): Open the file for write Read Report Data")
    TRC_MSG(MREPORT_6CE4FFF6C4F62B017615CD581460B1F3, "%s(%d): Invalied pointer to parsed data")
    TRC_MSG(MREPORT_D75B9F89BD087E0B37CFED603B8A19AB, "%s(%d): Failed to write a file for the new read report")
    TRC_MSG(MREPORT_88B926633A0AE01863483B04484A3C10, "MMS FSM MSR RECEIVE: delete unused file %d")
    TRC_MSG(MREPORT_333EFA5D8A50B68EE77DE575942F29B0, "%s(%d): createRrHeader: unable to copy To address.")
    TRC_MSG(MREPORT_DDFFD1BB9FD9B9D3E341FDC2EB2743D0, "(%s) (%d) Calculation of US-ASCII Subject lenght failed!")
    TRC_MSG(MREPORT_B62EF7F65872476287D8ACDDC353C75E, "(%s) (%d) Subject conversion to US-ASCII failed!")
    TRC_MSG(MREPORT_EBA1847D3BEE4344D701211C686D3A42, "%s(%d): unable to createWspBodyPartHead")
    TRC_MSG(MSEND_3B70D81E5B51B0172D4348998965068B, "MMS FSM MSR SEND: initialized")
    TRC_MSG(MSEND_0E61CA23536084C056E6E3761E22CEE4, "MMS FSM MSR SEND: terminated")
    TRC_MSG(MSEND_212887EF2D712E8B97AE99B9189C307F, "MMS FSM MSR SEND: MMS_SIG_MSR_SEND_CANCEL")
    TRC_MSG(MSEND_7F6096B847A9056FA0469875785AA195, "MMS FSM MSR SEND: MMS_SIG_MSR_SEND_MSG")
    TRC_MSG(MSEND_30A95342CCF9D0ED2A317828CD422F16, "MMS FSM MSR SEND received: MMS_SIG_MSR_SEND_RSP")
    TRC_MSG(MSEND_6E002FEA9EF95C6AF9412EDB33A4CCD2, "MMS FSM MSR SEND: sig->u_param2 == NULL (rsp)")
    TRC_MSG(MSEND_6FDB556607F11BC22044DBC2DCF09A52, "MMS FSM MSR CREATE received: MMS_SIG_MSR_CREATE_RR")
    TRC_MSG(MSEND_98485634EFD2354B05D0B01E63802FB3, "MMS FSM MSR SEND received: MMS_SIG_MSR_SEND_FORWARD")
    TRC_MSG(MSEND_2353A6199226F595441F66EBE611B34C, "MMS FSM MSR SEND: sig->u_param2 == NULL (forward_rsp)")
    TRC_MSG(MSEND_FA2C8F0E0BD0555BAA26843A70850FDE, "MMS FSM MSR MSR SEND: received unknown signal")
    TRC_MSG(MSEND_8AF9588D1E57DDF673E614D42CED7B05, "MMS FSM MSR SEND internal parameter fault")
    TRC_MSG(MSIG_97D012B2996A524383ACFCEC040D15EA, "mSignalRegisterDst: FSM dst (%d) out of bounds")
    TRC_MSG(MSIG_025D4FD0C88F821861483499967A5E7B, "mSignalDeregister: FSM dst (%d) out of bounds")
    TRC_MSG(MSIG_1, "MMS Internal SIG to %-20s %6d %7d %8d %8d %8d %9d")
    TRC_MSG(MSIG_2, "MMS Internal SIG to %-20s %-35s %7d %8d %8d %8d %9d")
    TRC_MSG(MTIMER_B0D971EAC08FC9E031552D6F3213A0BF, "MTIMER: initialized")
    TRC_MSG(MTIMER_7C4CA3C541AE7D1240067772E4FC430B, "MTIMER: cancelling timer %d")
    TRC_MSG(MTIMER_3B3BF64EE53943F96631C092CC5FFC0C, "MTIMER: terminated")
    TRC_MSG(MTIMER_83984722D769928EB0D9E9A6DC4A22A2, "%s(%d): Expired timer not found %d")
    TRC_MSG(MTIMER_BCDE0DE49202C5F53005A30AF3B8579F, "**** MMS timer %d expired. Dst=%d Param=%d")
    TRC_MSG(MUTILS_E84681D5E6BAB999A4EB456576DD5F9D, "%s(%d) copy failed")
    TRC_MSG(MUTILS_59CC922D6621075BF46D7F836C724775, "%s(%d) Out of memory")
    TRC_MSG(MUTILS_0B927F4C9AB587024112029D06B1C5FE, "copyEntryHeader: unknown type!")
    TRC_MSG(MUTILS_9CEFABC9FA7D366FD56F8A750DF51920, "%s(%d) Copy failed")
    TRC_MSG(MUTILS_F1FEAD6C4EF2A8B8051CEFEBC4689356, "validateEntryHeaders: Content id field to long")
    TRC_MSG(MUTILS_349C04BABFE40D39314C5034051B54B5, "validateEntryHeaders: Content location field to long")
    TRC_MSG(MUTILS_5DC2B61D7201C4A7A00A1B996C04A6EE, "validateEntryHeaders: Application header to long")
    TRC_MSG(SLS_ENV_4F0AE80D93BF5AF1741C3F381F017DE0, "%s(%d): Insufficient memory!")
    TRC_MSG(SLS_MAIN_B3479B29660083AC82D843DE6DB51064, "%s(%d): SMIL part Content-type deviates from standard !")
    TRC_MSG(SLS_MAIN_FE7884556251924796EB106E939D15FE, "%s(%d): SLS_OPEN_SMIL_REQ received, sender: 0x%x")
    TRC_MSG(SLS_MAIN_B7A1A2D97E9970B67FD2EE06EE4E4D6A, "%s(%d): ERROR: SLS_OPEN_SMIL_REQ received in busy state, sender: 0x%x")
    TRC_MSG(SLS_MAIN_4BAE2C5056C62F026EBFD5E3B6A8A72D, "%s(%d): SLS_CLOSE_SMIL_REQ received, sender: 0x%x")
    TRC_MSG(SLS_MAIN_5193A5608B5059345E7074C56DBD87F4, "%s(%d): SLS_GET_SLIDE_INFO_REQ received, sender: 0x%x")
    TRC_MSG(SLS_MAIN_EEE7EB23BDE09CDB5D9B8C1F0EA06845, "%s(%d): ERROR: SLS_GET_SLIDE_INFO_REQ received in state != SMIL_OPENED, sender: 0x%x")
    TRC_MSG(SLS_MAIN_A68DDCA620F8D86D9151EE65A2B5B287, "%s(%d): MSF_SIG_FILE_NOTIFY received, sender: 0x%x")
    TRC_MSG(SLS_MAIN_CC2F24263298F42EA128C8F096D7422F, "%s(%d): MSF_SIG_MODULE_START received, sender: 0x%x")
    TRC_MSG(SLS_MAIN_B713DD0939839D5A9FE4F0DA8F913641, "%s(%d): MSF_SIG_MODULE_TERMINATE received, sender: 0x%x")
    TRC_MSG(SLS_MAIN_F0EF6153E00EAC6A9B2663456561006A, "%s(%d): Unexpected signal: 0x%x received, sender: 0x%x")
    TRC_MSG(FLDMGR_9805678E4CA84DE96325301E060EC6D6, "%s(%d): File Not found %d\n")
    TRC_MSG(FLDMGR_4678538E4CA84DE96325301E060EC6D6, "%s(%d): No space left to update the notification %d\n")
    TRC_MSG(FLDMGR_3458738E4CA84DE96325301E060EC6D6, "%s(%d): No space left to update the Server Message Id %d\n")
    TRC_MSG(FLDMGR_1234738E4CA84DE96325301E060EC6D6, "%s(%d): Warning for the message limit reached %d\n")
    TRC_MSG(FLDMGR_8745938E4CA84DE96325301E060EC6D6, "%s(%d): Too many messages %d\n")
    TRC_MSG(FLDMGR_74256BE25E83CAA428B0FEDAD651E898, "%s(%d): Error Reading MMT File, result=%d, fsmFldrData.mmtLen=%d \n")
    TRC_MSG(FLDMGR_4567838E4CA84DE96325301E060EC6D6, "%s(%d): No space left to update the read report %d \n")
    TRC_MSG(MMA_PARSE_SIG_MSG_VCARD_VERSION_RSP, "(mma_parse.c): MMA_INT_SIG_TYPE_MSG_VCARD_VERSION_RSP %d")
    TRC_MSG(MMA_CHECK_AND_SLEEP, "(mma_utilities.c)mma_check_and_sleep last_ticks: %d  Current_ticks:%d\n")
    TRC_MSG(MMA_SLEEP_START, "(mma_utilities.c)MMA sleep at tick: %d")
    TRC_MSG(MMA_SLEEP_END, "(mma_utilities.c)MMA awake at tick: %d")
    /***************TRC MSG FOR MMS END ********************/

    END_TRACE_MAP(MOD_MMS)
#endif /* MMS_TRC_H */ 

